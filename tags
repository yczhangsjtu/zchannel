!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination<FieldT> A;$/;"	m	class:libsnark::comparison_gadget
A	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination_array<FieldT> A;$/;"	m	class:libsnark::inner_product_gadget
A	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination<FieldT> A;$/;"	m	class:libsnark::XOR3_gadget
ACCUMULATION_VECTOR_HPP_	libsnark/src/common/data_structures/accumulation_vector.hpp	13;"	d
ACCUMULATION_VECTOR_TCC_	libsnark/src/common/data_structures/accumulation_vector.tcc	15;"	d	file:
ACLOCAL	Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing aclocal-1.15$/;"	m
ACLOCAL	demo/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/contrib/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/dist-build/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/msvc-scripts/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/src/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/src/libsodium/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/src/libsodium/include/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/test/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	libsodium/test/default/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL	zcash/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing aclocal-1.15$/;"	m
ACLOCAL	zcash/secp256k1/Makefile	/^ACLOCAL = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1\/build-aux\/missing aclocal-1.15$/;"	m
ACLOCAL_AMFLAGS	libsodium/Makefile	/^ACLOCAL_AMFLAGS = -I m4$/;"	m
ACLOCAL_AMFLAGS	zcash/secp256k1/Makefile	/^ACLOCAL_AMFLAGS = -I build-aux\/m4$/;"	m
ACLOCAL_M4	Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	demo/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/contrib/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/dist-build/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/msvc-scripts/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/src/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/src/libsodium/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/src/libsodium/include/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/test/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	libsodium/test/default/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	zcash/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACLOCAL_M4	zcash/secp256k1/Makefile	/^ACLOCAL_M4 = $(top_srcdir)\/aclocal.m4$/;"	m
ACQUIRED_AFTER	zcash/threadsafety.h	22;"	d
ACQUIRED_AFTER	zcash/threadsafety.h	41;"	d
ACQUIRED_BEFORE	zcash/threadsafety.h	23;"	d
ACQUIRED_BEFORE	zcash/threadsafety.h	42;"	d
ADD	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	33;"	d
ADD	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	13;"	d
ADDLIBS	demo/Makefile	/^ADDLIBS = -lsnark -lsodium -lsecp256k1 -lgmp -lstdc++ -lgmpxx -lprocps$/;"	m
ADDLIBS	zcash/Makefile	/^ADDLIBS = -lsnark -lsodium -lsecp256k1 -lgmp -lstdc++ -lgmpxx -lboost_thread -lboost_filesystem -lboost_system -lboost_program_options -lprocps$/;"	m
ADDLO	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	14;"	d
ADD_CMP	libsnark/src/algebra/fields/fp_aux.tcc	30;"	d	file:
ADD_FIRSTADD	libsnark/src/algebra/fields/fp_aux.tcc	22;"	d	file:
ADD_FIRSTSUB	libsnark/src/algebra/fields/fp_aux.tcc	36;"	d	file:
ADD_FIRSTSUB	libsnark/src/algebra/fields/fp_aux.tcc	40;"	d	file:
ADD_NEXTADD	libsnark/src/algebra/fields/fp_aux.tcc	26;"	d	file:
ADD_NEXTSUB	libsnark/src/algebra/fields/fp_aux.tcc	44;"	d	file:
ADD_SERIALIZE_METHODS	zcash/Address.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::PaymentAddress
ADD_SERIALIZE_METHODS	zcash/IncrementalMerkleTree.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::IncrementalMerkleTree
ADD_SERIALIZE_METHODS	zcash/IncrementalMerkleTree.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::IncrementalWitness
ADD_SERIALIZE_METHODS	zcash/IncrementalMerkleTree.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::MerklePath
ADD_SERIALIZE_METHODS	zcash/Note.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::NotePlaintext
ADD_SERIALIZE_METHODS	zcash/Proof.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::CompressedG1
ADD_SERIALIZE_METHODS	zcash/Proof.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::CompressedG2
ADD_SERIALIZE_METHODS	zcash/Proof.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::Fq
ADD_SERIALIZE_METHODS	zcash/Proof.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::Fq2
ADD_SERIALIZE_METHODS	zcash/Proof.hpp	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:libzcash::ZCProof
ADD_SERIALIZE_METHODS	zcash/amount.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:CFeeRate
ADD_SERIALIZE_METHODS	zcash/primitives/block.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:CBlock
ADD_SERIALIZE_METHODS	zcash/primitives/block.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:CBlockHeader
ADD_SERIALIZE_METHODS	zcash/primitives/block.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:CEquihashInput
ADD_SERIALIZE_METHODS	zcash/primitives/block.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	struct:CBlockLocator
ADD_SERIALIZE_METHODS	zcash/primitives/transaction.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:COutPoint
ADD_SERIALIZE_METHODS	zcash/primitives/transaction.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:CTransaction
ADD_SERIALIZE_METHODS	zcash/primitives/transaction.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:CTxIn
ADD_SERIALIZE_METHODS	zcash/primitives/transaction.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:CTxOut
ADD_SERIALIZE_METHODS	zcash/primitives/transaction.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:JSDescription
ADD_SERIALIZE_METHODS	zcash/primitives/transaction.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	struct:CMutableTransaction
ADD_SERIALIZE_METHODS	zcash/serialize.h	175;"	d
ADD_SERIALIZE_METHODS	zcash/uint252.h	/^    ADD_SERIALIZE_METHODS;$/;"	m	class:uint252
ADLEN	libsodium/test/default/aead_chacha20poly1305.c	10;"	d	file:
ADLEN	libsodium/test/default/aead_chacha20poly1305.c	11;"	d	file:
ADLEN	libsodium/test/default/aead_chacha20poly1305.c	175;"	d	file:
ADLEN	libsodium/test/default/aead_chacha20poly1305.c	176;"	d	file:
ADLEN	libsodium/test/default/aead_xchacha20poly1305.c	10;"	d	file:
ADLEN	libsodium/test/default/aead_xchacha20poly1305.c	11;"	d	file:
AESENCLASTx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	148;"	d	file:
AESENCx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	144;"	d	file:
ALT_BN128_G1_HPP_	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	9;"	d
ALT_BN128_G2_HPP_	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	9;"	d
ALT_BN128_INIT_HPP_	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	9;"	d
ALT_BN128_PAIRING_HPP_	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	9;"	d
ALT_BN128_PP_HPP_	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	9;"	d
AMTAR	Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	demo/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/contrib/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/dist-build/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/msvc-scripts/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/src/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/src/libsodium/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/src/libsodium/include/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/test/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	libsodium/test/default/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	zcash/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AMTAR	zcash/secp256k1/Makefile	/^AMTAR = $${TAR-tar}$/;"	m
AM_CPPFLAGS	demo/Makefile	/^AM_CPPFLAGS = $(INCLUDE) $(OPTIONS)$/;"	m
AM_CPPFLAGS	libsodium/test/default/Makefile	/^AM_CPPFLAGS = \\$/;"	m
AM_CPPFLAGS	zcash/Makefile	/^AM_CPPFLAGS = $(INCLUDE) $(OPTIONS) $(ENDIANS)$/;"	m
AM_DEFAULT_VERBOSITY	Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	demo/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/contrib/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/dist-build/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/msvc-scripts/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/src/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/src/libsodium/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/src/libsodium/include/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/test/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	libsodium/test/default/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_DEFAULT_VERBOSITY	zcash/Makefile	/^AM_DEFAULT_VERBOSITY = 1$/;"	m
AM_DEFAULT_VERBOSITY	zcash/secp256k1/Makefile	/^AM_DEFAULT_VERBOSITY = 0$/;"	m
AM_LDFLAGS	libsodium/test/default/Makefile	/^AM_LDFLAGS = $/;"	m
AM_RECURSIVE_TARGETS	Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	libsodium/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	libsodium/src/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	libsodium/src/libsodium/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	libsodium/test/Makefile	/^AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \\$/;"	m
AM_RECURSIVE_TARGETS	libsodium/test/default/Makefile	/^AM_RECURSIVE_TARGETS = check recheck$/;"	m
AM_RECURSIVE_TARGETS	zcash/secp256k1/Makefile	/^AM_RECURSIVE_TARGETS = cscope check recheck$/;"	m
AM_V_CC	libsodium/src/libsodium/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	libsodium/test/default/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CC	zcash/secp256k1/Makefile	/^AM_V_CC = $(am__v_CC_$(V))$/;"	m
AM_V_CCAS	zcash/secp256k1/Makefile	/^AM_V_CCAS = $(am__v_CCAS_$(V))$/;"	m
AM_V_CCLD	libsodium/src/libsodium/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	libsodium/test/default/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CCLD	zcash/secp256k1/Makefile	/^AM_V_CCLD = $(am__v_CCLD_$(V))$/;"	m
AM_V_CPPAS	libsodium/src/libsodium/Makefile	/^AM_V_CPPAS = $(am__v_CPPAS_$(V))$/;"	m
AM_V_CXX	demo/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXX	zcash/Makefile	/^AM_V_CXX = $(am__v_CXX_$(V))$/;"	m
AM_V_CXXLD	demo/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_CXXLD	zcash/Makefile	/^AM_V_CXXLD = $(am__v_CXXLD_$(V))$/;"	m
AM_V_GEN	Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	demo/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/contrib/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/dist-build/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/msvc-scripts/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/src/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/src/libsodium/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/src/libsodium/include/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/test/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	libsodium/test/default/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	zcash/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_GEN	zcash/secp256k1/Makefile	/^AM_V_GEN = $(am__v_GEN_$(V))$/;"	m
AM_V_P	Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	demo/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/contrib/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/dist-build/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/msvc-scripts/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/src/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/src/libsodium/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/src/libsodium/include/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/test/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	libsodium/test/default/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	zcash/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_P	zcash/secp256k1/Makefile	/^AM_V_P = $(am__v_P_$(V))$/;"	m
AM_V_at	Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	demo/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/contrib/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/dist-build/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/msvc-scripts/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/src/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/src/libsodium/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/src/libsodium/include/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/test/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	libsodium/test/default/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	zcash/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_at	zcash/secp256k1/Makefile	/^AM_V_at = $(am__v_at_$(V))$/;"	m
AM_V_lt	libsodium/src/libsodium/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	libsodium/test/default/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AM_V_lt	zcash/secp256k1/Makefile	/^AM_V_lt = $(am__v_lt_$(V))$/;"	m
AND	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	37;"	d
AR	libsodium/Makefile	/^AR = ar$/;"	m
AR	libsodium/contrib/Makefile	/^AR = ar$/;"	m
AR	libsodium/dist-build/Makefile	/^AR = ar$/;"	m
AR	libsodium/msvc-scripts/Makefile	/^AR = ar$/;"	m
AR	libsodium/src/Makefile	/^AR = ar$/;"	m
AR	libsodium/src/libsodium/Makefile	/^AR = ar$/;"	m
AR	libsodium/src/libsodium/include/Makefile	/^AR = ar$/;"	m
AR	libsodium/test/Makefile	/^AR = ar$/;"	m
AR	libsodium/test/default/Makefile	/^AR = ar$/;"	m
AR	zcash/secp256k1/Makefile	/^AR = \/usr\/bin\/ar$/;"	m
ARCH_BITS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	38;"	d
ARCH_BITS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	40;"	d
ARGON2_ADDRESSES_IN_BLOCK	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_ADDRESSES_IN_BLOCK = 128,$/;"	e	enum:argon2_ctx_constants
ARGON2_AD_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_AD_PTR_MISMATCH     = -21, \/* NULL ptr with non-zero length *\/$/;"	e	enum:Argon2_ErrorCodes
ARGON2_AD_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_AD_TOO_LONG  = -9,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_AD_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_AD_TOO_SHORT = -8,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_ALLOCATE_MEMORY_CBK_NULL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_ALLOCATE_MEMORY_CBK_NULL = -24,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_BLOCK_SIZE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_BLOCK_SIZE      = 1024,$/;"	e	enum:argon2_ctx_constants
ARGON2_DECODING_FAIL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_DECODING_FAIL = -32,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_DECODING_LENGTH_FAIL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_DECODING_LENGTH_FAIL = -34,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_DEFAULT_FLAGS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	72;"	d
ARGON2_ENCODING_FAIL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_ENCODING_FAIL = -31,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_FLAG_CLEAR_MEMORY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	71;"	d
ARGON2_FLAG_CLEAR_PASSWORD	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	69;"	d
ARGON2_FLAG_CLEAR_SECRET	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	70;"	d
ARGON2_FREE_MEMORY_CBK_NULL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_FREE_MEMORY_CBK_NULL     = -23,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_HWORDS_IN_BLOCK	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_HWORDS_IN_BLOCK = ARGON2_BLOCK_SIZE \/ 32,$/;"	e	enum:argon2_ctx_constants
ARGON2_INCORRECT_PARAMETER	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_INCORRECT_PARAMETER = -25,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_INCORRECT_TYPE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_INCORRECT_TYPE      = -26,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_LANES_TOO_FEW	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_LANES_TOO_FEW  = -16,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_LANES_TOO_MANY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_LANES_TOO_MANY = -17,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_MAX_AD_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	59;"	d
ARGON2_MAX_LANES	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	25;"	d
ARGON2_MAX_MEMORY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	46;"	d
ARGON2_MAX_MEMORY_BITS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	44;"	d
ARGON2_MAX_OUTLEN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	36;"	d
ARGON2_MAX_PWD_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	55;"	d
ARGON2_MAX_SALT_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	63;"	d
ARGON2_MAX_SECRET	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	67;"	d
ARGON2_MAX_THREADS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	29;"	d
ARGON2_MAX_TIME	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	51;"	d
ARGON2_MEMORY_ALLOCATION_ERROR	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_MEMORY_ALLOCATION_ERROR = -22,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_MEMORY_TOO_LITTLE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_MEMORY_TOO_LITTLE = -14,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_MEMORY_TOO_MUCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_MEMORY_TOO_MUCH   = -15,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_MIN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	41;"	d
ARGON2_MIN_AD_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	58;"	d
ARGON2_MIN_LANES	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	24;"	d
ARGON2_MIN_MEMORY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	39;"	d
ARGON2_MIN_OUTLEN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	35;"	d
ARGON2_MIN_PWD_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	54;"	d
ARGON2_MIN_SALT_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	62;"	d
ARGON2_MIN_SECRET	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	66;"	d
ARGON2_MIN_THREADS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	28;"	d
ARGON2_MIN_TIME	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	50;"	d
ARGON2_MISSING_ARGS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_MISSING_ARGS = -30,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OK	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OK = 0,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OUTPUT_PTR_NULL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OUTPUT_PTR_NULL = -1,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OUTPUT_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OUTPUT_TOO_LONG  = -3,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OUTPUT_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OUTPUT_TOO_SHORT = -2,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OUT_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_OUT_PTR_MISMATCH = -27,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_OWORDS_IN_BLOCK	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_OWORDS_IN_BLOCK = ARGON2_BLOCK_SIZE \/ 16,$/;"	e	enum:argon2_ctx_constants
ARGON2_PREHASH_DIGEST_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_PREHASH_DIGEST_LENGTH = 64,$/;"	e	enum:argon2_ctx_constants
ARGON2_PREHASH_SEED_LENGTH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_PREHASH_SEED_LENGTH   = 72$/;"	e	enum:argon2_ctx_constants
ARGON2_PWD_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_PWD_PTR_MISMATCH    = -18, \/* NULL ptr with non-zero length *\/$/;"	e	enum:Argon2_ErrorCodes
ARGON2_PWD_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_PWD_TOO_LONG  = -5,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_PWD_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_PWD_TOO_SHORT = -4,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_QWORDS_IN_BLOCK	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_QWORDS_IN_BLOCK = ARGON2_BLOCK_SIZE \/ 8,$/;"	e	enum:argon2_ctx_constants
ARGON2_SALT_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SALT_PTR_MISMATCH   = -19, \/* NULL ptr with non-zero length *\/$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SALT_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SALT_TOO_LONG  = -7,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SALT_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SALT_TOO_SHORT = -6,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SECRET_PTR_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SECRET_PTR_MISMATCH = -20, \/* NULL ptr with non-zero length *\/$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SECRET_TOO_LONG	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SECRET_TOO_LONG  = -11,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SECRET_TOO_SHORT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_SECRET_TOO_SHORT = -10,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_SYNC_POINTS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	32;"	d
ARGON2_THREADS_TOO_FEW	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_THREADS_TOO_FEW  = -28,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_THREADS_TOO_MANY	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_THREADS_TOO_MANY = -29,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_THREAD_FAIL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_THREAD_FAIL = -33,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_TIME_TOO_LARGE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_TIME_TOO_LARGE = -13,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_TIME_TOO_SMALL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_TIME_TOO_SMALL = -12,$/;"	e	enum:Argon2_ErrorCodes
ARGON2_VERIFY_MISMATCH	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    ARGON2_VERIFY_MISMATCH = -35$/;"	e	enum:Argon2_ErrorCodes
ARGON2_VERSION_NUMBER	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    ARGON2_VERSION_NUMBER = 0x13,$/;"	e	enum:argon2_ctx_constants
ARG_CHECK	zcash/secp256k1/src/secp256k1.c	21;"	d	file:
ARRAYLEN	zcash/utilstrencodings.h	20;"	d
ARRAY_SIZE	libsnark/src/common/utils.hpp	52;"	d
ARX	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	205;"	d	file:
ARX	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	54;"	d	file:
ARX	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	57;"	d	file:
AR_LIBS	libsnark/Makefile	/^AR_LIBS =$/;"	m
AS	libsodium/Makefile	/^AS = as$/;"	m
AS	libsodium/contrib/Makefile	/^AS = as$/;"	m
AS	libsodium/dist-build/Makefile	/^AS = as$/;"	m
AS	libsodium/msvc-scripts/Makefile	/^AS = as$/;"	m
AS	libsodium/src/Makefile	/^AS = as$/;"	m
AS	libsodium/src/libsodium/Makefile	/^AS = as$/;"	m
AS	libsodium/src/libsodium/include/Makefile	/^AS = as$/;"	m
AS	libsodium/test/Makefile	/^AS = as$/;"	m
AS	libsodium/test/default/Makefile	/^AS = as$/;"	m
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^ASM_HIDE_SYMBOL _fe51_mul$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^ASM_HIDE_SYMBOL fe51_mul$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^ASM_HIDE_SYMBOL _fe51_nsquare$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^ASM_HIDE_SYMBOL fe51_nsquare$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^ASM_HIDE_SYMBOL _fe51_pack$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^ASM_HIDE_SYMBOL fe51_pack$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^ASM_HIDE_SYMBOL _ladder$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^ASM_HIDE_SYMBOL ladder$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^ASM_HIDE_SYMBOL _ladder_base$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^ASM_HIDE_SYMBOL ladder_base$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^ASM_HIDE_SYMBOL _stream_salsa20_xmm6$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^ASM_HIDE_SYMBOL _stream_salsa20_xmm6_xor_ic$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^ASM_HIDE_SYMBOL stream_salsa20_xmm6$/;"	l
ASM_HIDE_SYMBOL	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^ASM_HIDE_SYMBOL stream_salsa20_xmm6_xor_ic$/;"	l
ASSERT_except_H	libsnark/src/common/assert_except.hpp	2;"	d
AUTOCONF	Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing autoconf$/;"	m
AUTOCONF	demo/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing autoconf$/;"	m
AUTOCONF	libsodium/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/contrib/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/dist-build/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/msvc-scripts/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/src/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/src/libsodium/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/src/libsodium/include/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/test/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	libsodium/test/default/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoconf$/;"	m
AUTOCONF	zcash/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing autoconf$/;"	m
AUTOCONF	zcash/secp256k1/Makefile	/^AUTOCONF = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1\/build-aux\/missing autoconf$/;"	m
AUTOHEADER	Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing autoheader$/;"	m
AUTOHEADER	demo/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing autoheader$/;"	m
AUTOHEADER	libsodium/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/contrib/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/dist-build/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/msvc-scripts/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/src/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/src/libsodium/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/src/libsodium/include/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/test/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	libsodium/test/default/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing autoheader$/;"	m
AUTOHEADER	zcash/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing autoheader$/;"	m
AUTOHEADER	zcash/secp256k1/Makefile	/^AUTOHEADER = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1\/build-aux\/missing autoheader$/;"	m
AUTOMAKE	Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing automake-1.15$/;"	m
AUTOMAKE	demo/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/contrib/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/dist-build/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/msvc-scripts/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/src/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/src/libsodium/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/src/libsodium/include/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/test/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	libsodium/test/default/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing automake-1.15$/;"	m
AUTOMAKE	zcash/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing automake-1.15$/;"	m
AUTOMAKE	zcash/secp256k1/Makefile	/^AUTOMAKE = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1\/build-aux\/missing automake-1.15$/;"	m
AWK	Makefile	/^AWK = gawk$/;"	m
AWK	demo/Makefile	/^AWK = gawk$/;"	m
AWK	libsodium/Makefile	/^AWK = gawk$/;"	m
AWK	libsodium/contrib/Makefile	/^AWK = gawk$/;"	m
AWK	libsodium/dist-build/Makefile	/^AWK = gawk$/;"	m
AWK	libsodium/msvc-scripts/Makefile	/^AWK = gawk$/;"	m
AWK	libsodium/src/Makefile	/^AWK = gawk$/;"	m
AWK	libsodium/src/libsodium/Makefile	/^AWK = gawk$/;"	m
AWK	libsodium/src/libsodium/include/Makefile	/^AWK = gawk$/;"	m
AWK	libsodium/test/Makefile	/^AWK = gawk$/;"	m
AWK	libsodium/test/default/Makefile	/^AWK = gawk$/;"	m
AWK	zcash/Makefile	/^AWK = gawk$/;"	m
AWK	zcash/secp256k1/Makefile	/^AWK = gawk$/;"	m
A_in_Lagrange_basis	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::vector<std::map<size_t, FieldT> > A_in_Lagrange_basis;$/;"	m	class:libsnark::qap_instance
A_query	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    knowledge_commitment_vector<G1<ppT>, G1<ppT> > A_query;$/;"	m	class:libsnark::r1cs_ppzksnark_proving_key
Acquire	zcash/sync.h	/^    void Acquire()$/;"	f	class:CSemaphoreGrant
AddCScript	zcash/keystore.cpp	/^bool CBasicKeyStore::AddCScript(const CScript& redeemScript)$/;"	f	class:CBasicKeyStore
AddKey	zcash/keystore.cpp	/^bool CKeyStore::AddKey(const CKey &key) {$/;"	f	class:CKeyStore
AddKeyPubKey	zcash/keystore.cpp	/^bool CBasicKeyStore::AddKeyPubKey(const CKey& key, const CPubKey &pubkey)$/;"	f	class:CBasicKeyStore
AddSpendingKey	zcash/keystore.cpp	/^bool CBasicKeyStore::AddSpendingKey(const libzcash::SpendingKey &sk)$/;"	f	class:CBasicKeyStore
AddWatchOnly	zcash/keystore.cpp	/^bool CBasicKeyStore::AddWatchOnly(const CScript &dest)$/;"	f	class:CBasicKeyStore
AllocateFileRange	zcash/zcashutil.cpp	/^void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length) {$/;"	f
Allocation	zcash/secp256k1/src/asm/field_10x26_arm.s	/^	Allocation:$/;"	l
AnnotatedMixin	zcash/sync.h	/^class LOCKABLE AnnotatedMixin : public PARENT$/;"	c
Argon2_Context	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef struct Argon2_Context {$/;"	s
Argon2_ErrorCodes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef enum Argon2_ErrorCodes {$/;"	g
Argon2_i	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef enum Argon2_type { Argon2_i = 1, Argon2_id = 2 } argon2_type;$/;"	e	enum:Argon2_type
Argon2_id	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef enum Argon2_type { Argon2_i = 1, Argon2_id = 2 } argon2_type;$/;"	e	enum:Argon2_type
Argon2_instance_t	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct Argon2_instance_t {$/;"	s
Argon2_position_t	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct Argon2_position_t {$/;"	s
Argon2_thread_data	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct Argon2_thread_data {$/;"	s
Argon2_type	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef enum Argon2_type { Argon2_i = 1, Argon2_id = 2 } argon2_type;$/;"	g
ArithToUint256	zcash/arith_uint256.cpp	/^uint256 ArithToUint256(const arith_uint256 &a)$/;"	f
ArrayToEhIndex	zcash/crypto/equihash.cpp	/^eh_index ArrayToEhIndex(const unsigned char* array)$/;"	f
AssertFailException	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^      public AssertFailException(String message) {$/;"	m	class:NativeSecp256k1Util.AssertFailException
AssertFailException	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^    public static class AssertFailException extends Exception {$/;"	c	class:NativeSecp256k1Util
AssertLockHeld	zcash/sync.h	96;"	d
AssertLockHeldInternal	zcash/sync.cpp	/^void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)$/;"	f
AssertLockHeldInternal	zcash/sync.h	/^void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) {}$/;"	f
At	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::vector<FieldT> At, Bt, Ct, Ht;$/;"	m	class:libsnark::qap_instance_evaluation
AveragingWindowTimespan	zcash/consensus/params.h	/^    int64_t AveragingWindowTimespan() const { return nPowAveragingWindow * nPowTargetSpacing; }$/;"	f	struct:Consensus::Params
B	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination<FieldT> B;$/;"	m	class:libsnark::comparison_gadget
B	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination_array<FieldT> B;$/;"	m	class:libsnark::inner_product_gadget
B	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination<FieldT> B;$/;"	m	class:libsnark::XOR3_gadget
BASIC_GADGETS_HPP_	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	9;"	d
BASIC_GADGETS_TCC_	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	9;"	d	file:
BASIC_RADIX2_DOMAIN_AUX_HPP_	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.hpp	16;"	d
BASIC_RADIX2_DOMAIN_AUX_TCC_	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.tcc	15;"	d	file:
BASIC_RADIX2_DOMAIN_HPP_	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.hpp	15;"	d
BASIC_RADIX2_DOMAIN_TCC_	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	15;"	d	file:
BE32	zcash/secp256k1/src/hash_impl.h	272;"	d
BE32	zcash/secp256k1/src/hash_impl.h	31;"	d
BE32	zcash/secp256k1/src/hash_impl.h	33;"	d
BEGIN	zcash/utilstrencodings.h	16;"	d
BHeight	zcash/primitives/transaction.h	/^typedef uint64_t BHeight;$/;"	t
BIGINT_HPP_	libsnark/src/algebra/fields/bigint.hpp	11;"	d
BIGINT_TCC_	libsnark/src/algebra/fields/bigint.tcc	11;"	d	file:
BIN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	303;"	d	file:
BIN	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	366;"	d	file:
BIP0031_VERSION	zcash/version.h	/^static const int BIP0031_VERSION = 60000;$/;"	v
BIP32Hash	zcash/hash.cpp	/^void BIP32Hash(const ChainCode &chainCode, unsigned int nChild, unsigned char header, const unsigned char data[32], unsigned char output[64])$/;"	f
BITCOIN_AMOUNT_H	zcash/amount.h	7;"	d
BITCOIN_ARITH_UINT256_H	zcash/arith_uint256.h	7;"	d
BITCOIN_COMPAT_BYTESWAP_H	zcash/compat/byteswap.h	6;"	d
BITCOIN_COMPAT_ENDIAN_H	zcash/compat/endian.h	6;"	d
BITCOIN_COMPAT_H	zcash/compat.h	7;"	d
BITCOIN_COMPAT_SANITY_H	zcash/compat/sanity.h	6;"	d
BITCOIN_CONSENSUS_CONSENSUS_H	zcash/consensus/consensus.h	7;"	d
BITCOIN_CONSENSUS_PARAMS_H	zcash/consensus/params.h	7;"	d
BITCOIN_CONSENSUS_VALIDATION_H	zcash/consensus/validation.h	7;"	d
BITCOIN_CRYPTO_COMMON_H	zcash/crypto/common.h	6;"	d
BITCOIN_CRYPTO_HMAC_SHA256_H	zcash/crypto/hmac_sha256.h	6;"	d
BITCOIN_CRYPTO_HMAC_SHA512_H	zcash/crypto/hmac_sha512.h	6;"	d
BITCOIN_CRYPTO_RIPEMD160_H	zcash/crypto/ripemd160.h	6;"	d
BITCOIN_CRYPTO_SHA1_H	zcash/crypto/sha1.h	6;"	d
BITCOIN_CRYPTO_SHA256_H	zcash/crypto/sha256.h	6;"	d
BITCOIN_CRYPTO_SHA512_H	zcash/crypto/sha512.h	6;"	d
BITCOIN_EQUIHASH_H	zcash/crypto/equihash.h	7;"	d
BITCOIN_HASH_H	zcash/hash.h	7;"	d
BITCOIN_KEYSTORE_H	zcash/keystore.h	7;"	d
BITCOIN_KEY_H	zcash/key.h	8;"	d
BITCOIN_PRIMITIVES_BLOCK_H	zcash/primitives/block.h	7;"	d
BITCOIN_PRIMITIVES_TRANSACTION_H	zcash/primitives/transaction.h	7;"	d
BITCOIN_PUBKEY_H	zcash/pubkey.h	8;"	d
BITCOIN_RANDOM_H	zcash/random.h	7;"	d
BITCOIN_SCRIPT_INTERPRETER_H	zcash/script/interpreter.h	7;"	d
BITCOIN_SCRIPT_SCRIPT_ERROR_H	zcash/script/script_error.h	7;"	d
BITCOIN_SCRIPT_SCRIPT_H	zcash/script/script.h	7;"	d
BITCOIN_SCRIPT_SIGCACHE_H	zcash/script/sigcache.h	7;"	d
BITCOIN_SCRIPT_SIGN_H	zcash/script/sign.h	7;"	d
BITCOIN_SCRIPT_STANDARD_H	zcash/script/standard.h	7;"	d
BITCOIN_SERIALIZE_H	zcash/serialize.h	7;"	d
BITCOIN_STREAMS_H	zcash/streams.h	7;"	d
BITCOIN_SUPPORT_ALLOCATORS_SECURE_H	zcash/support/allocators/secure.h	7;"	d
BITCOIN_SUPPORT_ALLOCATORS_ZEROAFTERFREE_H	zcash/support/allocators/zeroafterfree.h	7;"	d
BITCOIN_SUPPORT_CLEANSE_H	zcash/support/cleanse.h	7;"	d
BITCOIN_SUPPORT_EVENTS_H	zcash/support/events.h	6;"	d
BITCOIN_SUPPORT_PAGELOCKER_H	zcash/support/pagelocker.h	7;"	d
BITCOIN_SYNC_H	zcash/sync.h	7;"	d
BITCOIN_THREADSAFETY_H	zcash/threadsafety.h	7;"	d
BITCOIN_UINT256_H	zcash/uint256.h	7;"	d
BITCOIN_UTILSTRENCODINGS_H	zcash/utilstrencodings.h	10;"	d
BITCOIN_UTILTIME_H	zcash/utiltime.h	7;"	d
BITCOIN_UTIL_H	zcash/zcashutil.h	11;"	d
BITCOIN_VERSION_H	zcash/version.h	6;"	d
BITCOIN_ZCASHCONSENSUS_H	zcash/script/zcashconsensus.h	7;"	d
BLAKE2B_BLOCKBYTES	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    BLAKE2B_BLOCKBYTES    = 128,$/;"	e	enum:blake2b_constant
BLAKE2B_COMPRESS_V1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	125;"	d
BLAKE2B_DIAG_V1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	67;"	d
BLAKE2B_G1_V1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	45;"	d
BLAKE2B_G2_V1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	56;"	d
BLAKE2B_KEYBYTES	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    BLAKE2B_KEYBYTES      = 64,$/;"	e	enum:blake2b_constant
BLAKE2B_LOAD_MSG_0_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	4;"	d
BLAKE2B_LOAD_MSG_0_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	11;"	d
BLAKE2B_LOAD_MSG_0_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	18;"	d
BLAKE2B_LOAD_MSG_0_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	25;"	d
BLAKE2B_LOAD_MSG_10_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	284;"	d
BLAKE2B_LOAD_MSG_10_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	291;"	d
BLAKE2B_LOAD_MSG_10_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	298;"	d
BLAKE2B_LOAD_MSG_10_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	305;"	d
BLAKE2B_LOAD_MSG_11_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	312;"	d
BLAKE2B_LOAD_MSG_11_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	319;"	d
BLAKE2B_LOAD_MSG_11_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	326;"	d
BLAKE2B_LOAD_MSG_11_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	333;"	d
BLAKE2B_LOAD_MSG_1_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	32;"	d
BLAKE2B_LOAD_MSG_1_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	39;"	d
BLAKE2B_LOAD_MSG_1_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	46;"	d
BLAKE2B_LOAD_MSG_1_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	53;"	d
BLAKE2B_LOAD_MSG_2_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	60;"	d
BLAKE2B_LOAD_MSG_2_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	67;"	d
BLAKE2B_LOAD_MSG_2_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	74;"	d
BLAKE2B_LOAD_MSG_2_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	81;"	d
BLAKE2B_LOAD_MSG_3_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	88;"	d
BLAKE2B_LOAD_MSG_3_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	95;"	d
BLAKE2B_LOAD_MSG_3_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	102;"	d
BLAKE2B_LOAD_MSG_3_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	109;"	d
BLAKE2B_LOAD_MSG_4_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	116;"	d
BLAKE2B_LOAD_MSG_4_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	123;"	d
BLAKE2B_LOAD_MSG_4_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	130;"	d
BLAKE2B_LOAD_MSG_4_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	137;"	d
BLAKE2B_LOAD_MSG_5_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	144;"	d
BLAKE2B_LOAD_MSG_5_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	151;"	d
BLAKE2B_LOAD_MSG_5_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	158;"	d
BLAKE2B_LOAD_MSG_5_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	165;"	d
BLAKE2B_LOAD_MSG_6_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	172;"	d
BLAKE2B_LOAD_MSG_6_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	179;"	d
BLAKE2B_LOAD_MSG_6_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	186;"	d
BLAKE2B_LOAD_MSG_6_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	193;"	d
BLAKE2B_LOAD_MSG_7_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	200;"	d
BLAKE2B_LOAD_MSG_7_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	207;"	d
BLAKE2B_LOAD_MSG_7_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	214;"	d
BLAKE2B_LOAD_MSG_7_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	221;"	d
BLAKE2B_LOAD_MSG_8_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	228;"	d
BLAKE2B_LOAD_MSG_8_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	235;"	d
BLAKE2B_LOAD_MSG_8_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	242;"	d
BLAKE2B_LOAD_MSG_8_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	249;"	d
BLAKE2B_LOAD_MSG_9_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	256;"	d
BLAKE2B_LOAD_MSG_9_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	263;"	d
BLAKE2B_LOAD_MSG_9_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	270;"	d
BLAKE2B_LOAD_MSG_9_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	277;"	d
BLAKE2B_OUTBYTES	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    BLAKE2B_OUTBYTES      = 64,$/;"	e	enum:blake2b_constant
BLAKE2B_PERSONALBYTES	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    BLAKE2B_PERSONALBYTES = 16$/;"	e	enum:blake2b_constant
BLAKE2B_ROUNDS_V1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	98;"	d
BLAKE2B_ROUND_V1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	83;"	d
BLAKE2B_SALTBYTES	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    BLAKE2B_SALTBYTES     = 16,$/;"	e	enum:blake2b_constant
BLAKE2B_UNDIAG_V1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	74;"	d
BLAKE2_ROUND	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	107;"	d
BLAKE2_ROUND_1	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	124;"	d
BLAKE2_ROUND_2	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	137;"	d
BLAKE2_ROUND_NOMSG	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h	27;"	d
BLAKE2_USE_AVX2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c	4;"	d	file:
BLAKE2_USE_SSE41	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c	3;"	d	file:
BLAKE2_USE_SSE41	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.c	3;"	d	file:
BLAKE2_USE_SSSE3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c	2;"	d	file:
BLAKE2_USE_SSSE3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.c	2;"	d	file:
BLOCK_BYTES	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^BLOCK_BYTES = BLOCK_LEN \/\/ 8$/;"	v
BLOCK_LEN	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^BLOCK_LEN = 512$/;"	v
BOOST_CHRONO_LIB	Makefile	/^BOOST_CHRONO_LIB = -lboost_chrono$/;"	m
BOOST_CHRONO_LIB	demo/Makefile	/^BOOST_CHRONO_LIB = -lboost_chrono$/;"	m
BOOST_CHRONO_LIB	zcash/Makefile	/^BOOST_CHRONO_LIB = -lboost_chrono$/;"	m
BOOST_CPPFLAGS	Makefile	/^BOOST_CPPFLAGS = -pthread -I\/usr\/include$/;"	m
BOOST_CPPFLAGS	demo/Makefile	/^BOOST_CPPFLAGS = -pthread -I\/usr\/include$/;"	m
BOOST_CPPFLAGS	zcash/Makefile	/^BOOST_CPPFLAGS = -pthread -I\/usr\/include$/;"	m
BOOST_FILESYSTEM_LIB	Makefile	/^BOOST_FILESYSTEM_LIB = -lboost_filesystem$/;"	m
BOOST_FILESYSTEM_LIB	demo/Makefile	/^BOOST_FILESYSTEM_LIB = -lboost_filesystem$/;"	m
BOOST_FILESYSTEM_LIB	zcash/Makefile	/^BOOST_FILESYSTEM_LIB = -lboost_filesystem$/;"	m
BOOST_LDFLAGS	Makefile	/^BOOST_LDFLAGS = -L\/usr\/lib\/x86_64-linux-gnu$/;"	m
BOOST_LDFLAGS	demo/Makefile	/^BOOST_LDFLAGS = -L\/usr\/lib\/x86_64-linux-gnu$/;"	m
BOOST_LDFLAGS	zcash/Makefile	/^BOOST_LDFLAGS = -L\/usr\/lib\/x86_64-linux-gnu$/;"	m
BOOST_PROGRAM_OPTIONS_LIB	Makefile	/^BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options$/;"	m
BOOST_PROGRAM_OPTIONS_LIB	demo/Makefile	/^BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options$/;"	m
BOOST_PROGRAM_OPTIONS_LIB	zcash/Makefile	/^BOOST_PROGRAM_OPTIONS_LIB = -lboost_program_options$/;"	m
BOOST_SYSTEM_LIB	Makefile	/^BOOST_SYSTEM_LIB = -lboost_system$/;"	m
BOOST_SYSTEM_LIB	demo/Makefile	/^BOOST_SYSTEM_LIB = -lboost_system$/;"	m
BOOST_SYSTEM_LIB	zcash/Makefile	/^BOOST_SYSTEM_LIB = -lboost_system$/;"	m
BOOST_THREAD_LIB	Makefile	/^BOOST_THREAD_LIB = -lboost_thread$/;"	m
BOOST_THREAD_LIB	demo/Makefile	/^BOOST_THREAD_LIB = -lboost_thread$/;"	m
BOOST_THREAD_LIB	zcash/Makefile	/^BOOST_THREAD_LIB = -lboost_thread$/;"	m
BREW	zcash/secp256k1/Makefile	/^BREW = $/;"	m
BS0	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	13;"	d
BS0	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const aes_uint128_t BS0 = { { 0x5555555555555555ULL, 0x5555555555555555ULL } };$/;"	v
BS1	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	14;"	d
BS1	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const aes_uint128_t BS1 = { { 0x3333333333333333ULL, 0x3333333333333333ULL } };$/;"	v
BS2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	15;"	d
BS2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const aes_uint128_t BS2 = { { 0x0f0f0f0f0f0f0f0fULL, 0x0f0f0f0f0f0f0f0fULL } };$/;"	v
BUILDDIR	libsodium/packaging/dotnet-core/prepare.py	/^BUILDDIR = 'build'$/;"	v
BUILD_EXEEXT	zcash/secp256k1/Makefile	/^BUILD_EXEEXT = $/;"	m
BUILD_OBJEXT	zcash/secp256k1/Makefile	/^BUILD_OBJEXT = $/;"	m
BYTES2CHARS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	50;"	d
B_in_Lagrange_basis	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::vector<std::map<size_t, FieldT> > B_in_Lagrange_basis;$/;"	m	class:libsnark::qap_instance
B_query	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    knowledge_commitment_vector<G2<ppT>, G1<ppT> > B_query;$/;"	m	class:libsnark::r1cs_ppzksnark_proving_key
BaseSignatureChecker	zcash/script/interpreter.h	/^class BaseSignatureChecker$/;"	c
BaseSignatureCreator	zcash/script/sign.h	/^    BaseSignatureCreator(const CKeyStore* keystoreIn) : keystore(keystoreIn) {}$/;"	f	class:BaseSignatureCreator
BaseSignatureCreator	zcash/script/sign.h	/^class BaseSignatureCreator {$/;"	c
BasicSolve	zcash/crypto/equihash.cpp	/^bool Equihash<N,K>::BasicSolve(const eh_HashState& base_state,$/;"	f	class:Equihash
Bi	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const ge_precomp Bi[8] = {$/;"	v	file:
Bt	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::vector<FieldT> At, Bt, Ct, Ht;$/;"	m	class:libsnark::qap_instance_evaluation
BuildMerkleTree	zcash/primitives/block.cpp	/^uint256 CBlock::BuildMerkleTree(bool* fMutated) const$/;"	f	class:CBlock
C	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination<FieldT> C;$/;"	m	class:libsnark::XOR3_gadget
CACHEDIR	libsodium/packaging/dotnet-core/prepare.py	/^CACHEDIR = 'cache'$/;"	v
CADDR_TIME_VERSION	zcash/version.h	/^static const int CADDR_TIME_VERSION = 31402;$/;"	v
CANARY_SIZE	libsodium/src/libsodium/sodium/utils.c	36;"	d	file:
CAmount	zcash/amount.h	/^typedef int64_t CAmount;$/;"	t
CAutoFile	zcash/streams.h	/^    CAutoFile(FILE* filenew, int nTypeIn, int nVersionIn)$/;"	f	class:CAutoFile
CAutoFile	zcash/streams.h	/^class CAutoFile$/;"	c
CBaseDataStream	zcash/streams.h	/^    CBaseDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)$/;"	f	class:CBaseDataStream
CBaseDataStream	zcash/streams.h	/^    CBaseDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())$/;"	f	class:CBaseDataStream
CBaseDataStream	zcash/streams.h	/^    CBaseDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())$/;"	f	class:CBaseDataStream
CBaseDataStream	zcash/streams.h	/^    CBaseDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) : vch(vchIn.begin(), vchIn.end())$/;"	f	class:CBaseDataStream
CBaseDataStream	zcash/streams.h	/^    CBaseDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) : vch(pbegin, pend)$/;"	f	class:CBaseDataStream
CBaseDataStream	zcash/streams.h	/^    explicit CBaseDataStream(int nTypeIn, int nVersionIn)$/;"	f	class:CBaseDataStream
CBaseDataStream	zcash/streams.h	/^class CBaseDataStream$/;"	c
CBasicKeyStore	zcash/keystore.h	/^class CBasicKeyStore : public CKeyStore$/;"	c
CBlock	zcash/primitives/block.h	/^    CBlock()$/;"	f	class:CBlock
CBlock	zcash/primitives/block.h	/^    CBlock(const CBlockHeader &header)$/;"	f	class:CBlock
CBlock	zcash/primitives/block.h	/^class CBlock : public CBlockHeader$/;"	c
CBlockHeader	zcash/primitives/block.h	/^    CBlockHeader()$/;"	f	class:CBlockHeader
CBlockHeader	zcash/primitives/block.h	/^class CBlockHeader$/;"	c
CBlockLocator	zcash/primitives/block.h	/^    CBlockLocator() {}$/;"	f	struct:CBlockLocator
CBlockLocator	zcash/primitives/block.h	/^    CBlockLocator(const std::vector<uint256>& vHaveIn)$/;"	f	struct:CBlockLocator
CBlockLocator	zcash/primitives/block.h	/^struct CBlockLocator$/;"	s
CBufferedFile	zcash/streams.h	/^    CBufferedFile(FILE *fileIn, uint64_t nBufSize, uint64_t nRewindIn, int nTypeIn, int nVersionIn) :$/;"	f	class:CBufferedFile
CBufferedFile	zcash/streams.h	/^class CBufferedFile$/;"	c
CC	Makefile	/^CC = gcc$/;"	m
CC	demo/Makefile	/^CC = gcc$/;"	m
CC	libsodium/Makefile	/^CC = gcc$/;"	m
CC	libsodium/contrib/Makefile	/^CC = gcc$/;"	m
CC	libsodium/dist-build/Makefile	/^CC = gcc$/;"	m
CC	libsodium/msvc-scripts/Makefile	/^CC = gcc$/;"	m
CC	libsodium/src/Makefile	/^CC = gcc$/;"	m
CC	libsodium/src/libsodium/Makefile	/^CC = gcc$/;"	m
CC	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	259;"	d	file:
CC	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	363;"	d	file:
CC	libsodium/src/libsodium/include/Makefile	/^CC = gcc$/;"	m
CC	libsodium/test/Makefile	/^CC = gcc$/;"	m
CC	libsodium/test/default/Makefile	/^CC = gcc$/;"	m
CC	zcash/Makefile	/^CC = gcc$/;"	m
CC	zcash/secp256k1/Makefile	/^CC = gcc$/;"	m
CCAS	libsodium/Makefile	/^CCAS = gcc$/;"	m
CCAS	libsodium/contrib/Makefile	/^CCAS = gcc$/;"	m
CCAS	libsodium/dist-build/Makefile	/^CCAS = gcc$/;"	m
CCAS	libsodium/msvc-scripts/Makefile	/^CCAS = gcc$/;"	m
CCAS	libsodium/src/Makefile	/^CCAS = gcc$/;"	m
CCAS	libsodium/src/libsodium/Makefile	/^CCAS = gcc$/;"	m
CCAS	libsodium/src/libsodium/include/Makefile	/^CCAS = gcc$/;"	m
CCAS	libsodium/test/Makefile	/^CCAS = gcc$/;"	m
CCAS	libsodium/test/default/Makefile	/^CCAS = gcc$/;"	m
CCAS	zcash/secp256k1/Makefile	/^CCAS = gcc$/;"	m
CCASCOMPILE	zcash/secp256k1/Makefile	/^CCASCOMPILE = $(CCAS) $(AM_CCASFLAGS) $(CCASFLAGS)$/;"	m
CCASDEPMODE	libsodium/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/contrib/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/dist-build/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/msvc-scripts/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/src/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/src/libsodium/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/src/libsodium/include/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/test/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	libsodium/test/default/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASDEPMODE	zcash/secp256k1/Makefile	/^CCASDEPMODE = depmode=gcc3$/;"	m
CCASFLAGS	libsodium/Makefile	/^CCASFLAGS = -g -O2 -pthread$/;"	m
CCASFLAGS	libsodium/contrib/Makefile	/^CCASFLAGS = -g -O2 -pthread$/;"	m
CCASFLAGS	libsodium/dist-build/Makefile	/^CCASFLAGS = -g -O2 -pthread$/;"	m
CCASFLAGS	libsodium/msvc-scripts/Makefile	/^CCASFLAGS = -g -O2 -pthread$/;"	m
CCASFLAGS	libsodium/src/Makefile	/^CCASFLAGS = -g -O2 -pthread$/;"	m
CCASFLAGS	libsodium/src/libsodium/Makefile	/^CCASFLAGS = -g -O2 -pthread$/;"	m
CCASFLAGS	libsodium/src/libsodium/include/Makefile	/^CCASFLAGS = -g -O2 -pthread$/;"	m
CCASFLAGS	libsodium/test/Makefile	/^CCASFLAGS = -g -O2 -pthread$/;"	m
CCASFLAGS	libsodium/test/default/Makefile	/^CCASFLAGS = -g -O2 -pthread$/;"	m
CCASFLAGS	zcash/secp256k1/Makefile	/^CCASFLAGS = -g -O2$/;"	m
CCDEPMODE	Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	demo/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/contrib/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/dist-build/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/msvc-scripts/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/src/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/src/libsodium/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/src/libsodium/include/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/test/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	libsodium/test/default/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	zcash/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCDEPMODE	zcash/secp256k1/Makefile	/^CCDEPMODE = depmode=gcc3$/;"	m
CCLD	libsodium/src/libsodium/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	libsodium/test/default/Makefile	/^CCLD = $(CC)$/;"	m
CCLD	zcash/secp256k1/Makefile	/^CCLD = $(CC)$/;"	m
CC_FOR_BUILD	zcash/secp256k1/Makefile	/^CC_FOR_BUILD = gcc$/;"	m
CC_opt	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	269;"	d	file:
CC_opt	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	364;"	d	file:
CConditionVariable	zcash/sync.h	/^typedef boost::condition_variable CConditionVariable;$/;"	t
CCriticalBlock	zcash/sync.h	/^typedef CMutexLock<CCriticalSection> CCriticalBlock;$/;"	t
CCriticalSection	zcash/sync.h	/^typedef AnnotatedMixin<boost::recursive_mutex> CCriticalSection;$/;"	t
CDataStream	zcash/streams.h	/^    CDataStream(const char* pbegin, const char* pend, int nTypeIn, int nVersionIn) :$/;"	f	class:CDataStream
CDataStream	zcash/streams.h	/^    CDataStream(const std::vector<char>& vchIn, int nTypeIn, int nVersionIn) :$/;"	f	class:CDataStream
CDataStream	zcash/streams.h	/^    CDataStream(const std::vector<unsigned char>& vchIn, int nTypeIn, int nVersionIn) :$/;"	f	class:CDataStream
CDataStream	zcash/streams.h	/^    CDataStream(const vector_type& vchIn, int nTypeIn, int nVersionIn) :$/;"	f	class:CDataStream
CDataStream	zcash/streams.h	/^    CDataStream(const_iterator pbegin, const_iterator pend, int nTypeIn, int nVersionIn) :$/;"	f	class:CDataStream
CDataStream	zcash/streams.h	/^    explicit CDataStream(int nTypeIn, int nVersionIn) : CBaseDataStream(nTypeIn, nVersionIn) { }$/;"	f	class:CDataStream
CDataStream	zcash/streams.h	/^class CDataStream : public CBaseDataStream<CSerializeData>$/;"	c
CENT	zcash/amount.h	/^static const CAmount CENT = 1000000;$/;"	v
CEquihashInput	zcash/primitives/block.h	/^    CEquihashInput(const CBlockHeader &header)$/;"	f	class:CEquihashInput
CEquihashInput	zcash/primitives/block.h	/^class CEquihashInput : private CBlockHeader$/;"	c
CExtKey	zcash/key.h	/^struct CExtKey {$/;"	s
CExtPubKey	zcash/pubkey.h	/^struct CExtPubKey {$/;"	s
CFLAGS	Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	demo/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	libsodium/Makefile	/^CFLAGS = -g -O2 -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/contrib/Makefile	/^CFLAGS = -g -O2 -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/dist-build/Makefile	/^CFLAGS = -g -O2 -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/msvc-scripts/Makefile	/^CFLAGS = -g -O2 -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/src/Makefile	/^CFLAGS = -g -O2 -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/src/libsodium/Makefile	/^CFLAGS = -g -O2 -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/src/libsodium/include/Makefile	/^CFLAGS = -g -O2 -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/test/Makefile	/^CFLAGS = -g -O2 -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	libsodium/test/default/Makefile	/^CFLAGS = -g -O2 -pthread -fvisibility=hidden -fPIC -fPIE -fno-strict-aliasing -fno-strict-overflow -fstack-protector -Wwrite-strings -Wdiv-by-zero$/;"	m
CFLAGS	zcash/Makefile	/^CFLAGS = -g -O2$/;"	m
CFLAGS	zcash/secp256k1/Makefile	/^CFLAGS = -g -O2 -W -std=c89 -pedantic -Wall -Wextra -Wcast-align -Wnested-externs -Wshadow -Wstrict-prototypes -Wno-unused-function -Wno-long-long -Wno-overlength-strings -fvisibility=hidden -O3$/;"	m
CFLAGS_AESNI	libsodium/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/contrib/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/dist-build/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/msvc-scripts/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/src/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/src/libsodium/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/src/libsodium/include/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/test/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AESNI	libsodium/test/default/Makefile	/^CFLAGS_AESNI = -maes$/;"	m
CFLAGS_AVX	libsodium/Makefile	/^CFLAGS_AVX = -mavx$/;"	m
CFLAGS_AVX	libsodium/contrib/Makefile	/^CFLAGS_AVX = -mavx$/;"	m
CFLAGS_AVX	libsodium/dist-build/Makefile	/^CFLAGS_AVX = -mavx$/;"	m
CFLAGS_AVX	libsodium/msvc-scripts/Makefile	/^CFLAGS_AVX = -mavx$/;"	m
CFLAGS_AVX	libsodium/src/Makefile	/^CFLAGS_AVX = -mavx$/;"	m
CFLAGS_AVX	libsodium/src/libsodium/Makefile	/^CFLAGS_AVX = -mavx$/;"	m
CFLAGS_AVX	libsodium/src/libsodium/include/Makefile	/^CFLAGS_AVX = -mavx$/;"	m
CFLAGS_AVX	libsodium/test/Makefile	/^CFLAGS_AVX = -mavx$/;"	m
CFLAGS_AVX	libsodium/test/default/Makefile	/^CFLAGS_AVX = -mavx$/;"	m
CFLAGS_AVX2	libsodium/Makefile	/^CFLAGS_AVX2 = -mavx2$/;"	m
CFLAGS_AVX2	libsodium/contrib/Makefile	/^CFLAGS_AVX2 = -mavx2$/;"	m
CFLAGS_AVX2	libsodium/dist-build/Makefile	/^CFLAGS_AVX2 = -mavx2$/;"	m
CFLAGS_AVX2	libsodium/msvc-scripts/Makefile	/^CFLAGS_AVX2 = -mavx2$/;"	m
CFLAGS_AVX2	libsodium/src/Makefile	/^CFLAGS_AVX2 = -mavx2$/;"	m
CFLAGS_AVX2	libsodium/src/libsodium/Makefile	/^CFLAGS_AVX2 = -mavx2$/;"	m
CFLAGS_AVX2	libsodium/src/libsodium/include/Makefile	/^CFLAGS_AVX2 = -mavx2$/;"	m
CFLAGS_AVX2	libsodium/test/Makefile	/^CFLAGS_AVX2 = -mavx2$/;"	m
CFLAGS_AVX2	libsodium/test/default/Makefile	/^CFLAGS_AVX2 = -mavx2$/;"	m
CFLAGS_FOR_BUILD	zcash/secp256k1/Makefile	/^CFLAGS_FOR_BUILD = -g -O2 $(am__append_9)$/;"	m
CFLAGS_MMX	libsodium/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/contrib/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/dist-build/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/msvc-scripts/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/src/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/src/libsodium/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/src/libsodium/include/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/test/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_MMX	libsodium/test/default/Makefile	/^CFLAGS_MMX = -mmmx$/;"	m
CFLAGS_PCLMUL	libsodium/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/contrib/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/dist-build/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/msvc-scripts/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/src/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/src/libsodium/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/src/libsodium/include/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/test/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_PCLMUL	libsodium/test/default/Makefile	/^CFLAGS_PCLMUL = -mpclmul$/;"	m
CFLAGS_SSE2	libsodium/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/contrib/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/dist-build/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/msvc-scripts/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/src/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/src/libsodium/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/src/libsodium/include/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/test/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE2	libsodium/test/default/Makefile	/^CFLAGS_SSE2 = -msse2$/;"	m
CFLAGS_SSE3	libsodium/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/contrib/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/dist-build/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/msvc-scripts/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/src/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/src/libsodium/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/src/libsodium/include/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/test/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE3	libsodium/test/default/Makefile	/^CFLAGS_SSE3 = -msse3$/;"	m
CFLAGS_SSE41	libsodium/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/contrib/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/dist-build/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/msvc-scripts/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/src/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/src/libsodium/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/src/libsodium/include/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/test/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSE41	libsodium/test/default/Makefile	/^CFLAGS_SSE41 = -msse4.1$/;"	m
CFLAGS_SSSE3	libsodium/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/contrib/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/dist-build/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/msvc-scripts/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/src/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/src/libsodium/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/src/libsodium/include/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/test/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFLAGS_SSSE3	libsodium/test/default/Makefile	/^CFLAGS_SSSE3 = -mssse3$/;"	m
CFeeRate	zcash/amount.cpp	/^CFeeRate::CFeeRate(const CAmount& nFeePaid, size_t nSize)$/;"	f	class:CFeeRate
CFeeRate	zcash/amount.h	/^    CFeeRate() : nSatoshisPerK(0) { }$/;"	f	class:CFeeRate
CFeeRate	zcash/amount.h	/^    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }$/;"	f	class:CFeeRate
CFeeRate	zcash/amount.h	/^    explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }$/;"	f	class:CFeeRate
CFeeRate	zcash/amount.h	/^class CFeeRate$/;"	c
CFlatData	zcash/serialize.h	/^    CFlatData(void* pbeginIn, void* pendIn) : pbegin((char*)pbeginIn), pend((char*)pendIn) { }$/;"	f	class:CFlatData
CFlatData	zcash/serialize.h	/^    explicit CFlatData(std::vector<T,TAl> &v)$/;"	f	class:CFlatData
CFlatData	zcash/serialize.h	/^class CFlatData$/;"	c
CHECK	zcash/secp256k1/src/util.h	46;"	d
CHECK	zcash/secp256k1/src/util.h	52;"	d
CHMAC_SHA256	zcash/crypto/hmac_sha256.cpp	/^CHMAC_SHA256::CHMAC_SHA256(const unsigned char* key, size_t keylen)$/;"	f	class:CHMAC_SHA256
CHMAC_SHA256	zcash/crypto/hmac_sha256.h	/^class CHMAC_SHA256$/;"	c
CHMAC_SHA512	zcash/crypto/hmac_sha512.cpp	/^CHMAC_SHA512::CHMAC_SHA512(const unsigned char* key, size_t keylen)$/;"	f	class:CHMAC_SHA512
CHMAC_SHA512	zcash/crypto/hmac_sha512.h	/^class CHMAC_SHA512$/;"	c
CHash160	zcash/hash.h	/^class CHash160 {$/;"	c
CHash256	zcash/hash.h	/^class CHash256 {$/;"	c
CHashWriter	zcash/hash.h	/^    CHashWriter(int nTypeIn, int nVersionIn) : nType(nTypeIn), nVersion(nVersionIn) {}$/;"	f	class:CHashWriter
CHashWriter	zcash/hash.h	/^class CHashWriter$/;"	c
CInit	zcash/zcashutil.cpp	/^    CInit()$/;"	f	class:CInit
CInit	zcash/zcashutil.cpp	/^class CInit$/;"	c	file:
CKey	zcash/key.h	/^    CKey() : fValid(false), fCompressed(false)$/;"	f	class:CKey
CKey	zcash/key.h	/^    CKey(const CKey& secret) : fValid(secret.fValid), fCompressed(secret.fCompressed)$/;"	f	class:CKey
CKey	zcash/key.h	/^class CKey$/;"	c
CKeyID	zcash/pubkey.h	/^    CKeyID() : uint160() {}$/;"	f	class:CKeyID
CKeyID	zcash/pubkey.h	/^    CKeyID(const uint160& in) : uint160(in) {}$/;"	f	class:CKeyID
CKeyID	zcash/pubkey.h	/^class CKeyID : public uint160$/;"	c
CKeyStore	zcash/keystore.h	/^class CKeyStore$/;"	c
CKeyingMaterial	zcash/keystore.h	/^typedef std::vector<unsigned char, secure_allocator<unsigned char> > CKeyingMaterial;$/;"	t
CLASSPATH_ENV	zcash/secp256k1/Makefile	/^CLASSPATH_ENV = CLASSPATH=$(JAVA_GUAVA)$/;"	m
CLEANFILES	zcash/secp256k1/Makefile	/^CLEANFILES = $(gen_context_BIN) src\/ecmult_static_context.h $(JAVAROOT)\/$(JAVAORG)\/*.class .stamp-java$/;"	m
CLEN	libsodium/test/default/aead_chacha20poly1305.c	12;"	d	file:
CLEN	libsodium/test/default/aead_chacha20poly1305.c	13;"	d	file:
CLEN	libsodium/test/default/aead_chacha20poly1305.c	177;"	d	file:
CLEN	libsodium/test/default/aead_chacha20poly1305.c	178;"	d	file:
CLEN	libsodium/test/default/aead_xchacha20poly1305.c	12;"	d	file:
CLEN	libsodium/test/default/aead_xchacha20poly1305.c	13;"	d	file:
CLEN	zcash/NoteEncryption.hpp	/^    enum { CLEN=MLEN+NOTEENCRYPTION_AUTH_BYTES };$/;"	e	enum:libzcash::NoteDecryption::__anon26
CLEN	zcash/NoteEncryption.hpp	/^    enum { CLEN=MLEN+NOTEENCRYPTION_AUTH_BYTES };$/;"	e	enum:libzcash::NoteEncryption::__anon25
CLockLocation	zcash/sync.cpp	/^    CLockLocation(const char* pszName, const char* pszFile, int nLine, bool fTryIn)$/;"	f	struct:CLockLocation
CLockLocation	zcash/sync.cpp	/^struct CLockLocation {$/;"	s	file:
CMutableTransaction	zcash/primitives/transaction.cpp	/^CMutableTransaction::CMutableTransaction() : nVersion(CTransaction::MIN_CURRENT_VERSION), nLockTime(0) {}$/;"	f	class:CMutableTransaction
CMutableTransaction	zcash/primitives/transaction.cpp	/^CMutableTransaction::CMutableTransaction(const CTransaction& tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), nLockTime(tx.nLockTime),$/;"	f	class:CMutableTransaction
CMutableTransaction	zcash/primitives/transaction.h	/^struct CMutableTransaction$/;"	s
CMutexLock	zcash/sync.h	/^class SCOPED_LOCKABLE CMutexLock$/;"	c
CNoDestination	zcash/script/standard.h	/^class CNoDestination {$/;"	c
COIN	zcash/amount.h	/^static const CAmount COIN = 100000000;$/;"	v
COINBASE_MATURITY	zcash/consensus/consensus.h	/^static const int COINBASE_MATURITY = 100;$/;"	v
COMBA_3_BY_3_MUL	libsnark/src/algebra/fields/fp_aux.tcc	165;"	d	file:
COMBA_3_BY_3_SQR	libsnark/src/algebra/fields/fp_aux.tcc	234;"	d	file:
COMMON_LIB	zcash/secp256k1/Makefile	/^COMMON_LIB = $/;"	m
COMPACT_SIGNATURE_SIZE	zcash/pubkey.h	/^const unsigned int COMPACT_SIGNATURE_SIZE      = 65;$/;"	v
COMPILE	libsodium/src/libsodium/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	libsodium/test/default/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILE	libsodium/test/default/wintest.bat	/^:COMPILE$/;"	l
COMPILE	zcash/secp256k1/Makefile	/^COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\$/;"	m
COMPILER_ASSERT	libsodium/src/libsodium/include/sodium/private/common.h	8;"	d
COMPILE_GTEST	libsnark/Makefile	/^	COMPILE_GTEST :=$(shell test -d $(GTESTDIR) && echo -n 1)$/;"	m
COMPILE_GTEST	libsnark/Makefile	/^COMPILE_GTEST :=$/;"	m
COMPRESSED_PRIVATE_KEY_SIZE	zcash/key.h	/^const unsigned int COMPRESSED_PRIVATE_KEY_SIZE = 214;$/;"	v
COMPRESSED_PUBLIC_KEY_SIZE	zcash/pubkey.h	/^const unsigned int COMPRESSED_PUBLIC_KEY_SIZE  = 33;$/;"	v
CONFIG_CLEAN_FILES	Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	demo/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/Makefile	/^CONFIG_CLEAN_FILES = libsodium.pc libsodium-uninstalled.pc \\$/;"	m
CONFIG_CLEAN_FILES	libsodium/contrib/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/dist-build/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/msvc-scripts/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/src/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/src/libsodium/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/src/libsodium/include/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/test/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	libsodium/test/default/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	zcash/Makefile	/^CONFIG_CLEAN_FILES =$/;"	m
CONFIG_CLEAN_FILES	zcash/secp256k1/Makefile	/^CONFIG_CLEAN_FILES = libsecp256k1.pc$/;"	m
CONFIG_CLEAN_VPATH_FILES	Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	demo/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/contrib/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/dist-build/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/msvc-scripts/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/src/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/src/libsodium/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/src/libsodium/include/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/test/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	libsodium/test/default/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	zcash/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_CLEAN_VPATH_FILES	zcash/secp256k1/Makefile	/^CONFIG_CLEAN_VPATH_FILES =$/;"	m
CONFIG_HEADER	Makefile	/^CONFIG_HEADER = config.h$/;"	m
CONFIG_HEADER	demo/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	zcash/Makefile	/^CONFIG_HEADER = $(top_builddir)\/config.h$/;"	m
CONFIG_HEADER	zcash/secp256k1/Makefile	/^CONFIG_HEADER = $(top_builddir)\/src\/libsecp256k1-config.h$/;"	m
CONSTRAINT_PROFILING_HPP_	libsnark/src/gadgetlib1/constraint_profiling.hpp	13;"	d
COUNTER_INC2	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	172;"	d	file:
COutPoint	zcash/primitives/transaction.h	/^    COutPoint() { SetNull(); }$/;"	f	class:COutPoint
COutPoint	zcash/primitives/transaction.h	/^    COutPoint(uint256 hashIn, uint32_t nIn) { hash = hashIn; n = nIn; }$/;"	f	class:COutPoint
COutPoint	zcash/primitives/transaction.h	/^class COutPoint$/;"	c
CPP	Makefile	/^CPP = gcc -E$/;"	m
CPP	demo/Makefile	/^CPP = gcc -E$/;"	m
CPP	libsodium/Makefile	/^CPP = gcc -E$/;"	m
CPP	libsodium/contrib/Makefile	/^CPP = gcc -E$/;"	m
CPP	libsodium/dist-build/Makefile	/^CPP = gcc -E$/;"	m
CPP	libsodium/msvc-scripts/Makefile	/^CPP = gcc -E$/;"	m
CPP	libsodium/src/Makefile	/^CPP = gcc -E$/;"	m
CPP	libsodium/src/libsodium/Makefile	/^CPP = gcc -E$/;"	m
CPP	libsodium/src/libsodium/include/Makefile	/^CPP = gcc -E$/;"	m
CPP	libsodium/test/Makefile	/^CPP = gcc -E$/;"	m
CPP	libsodium/test/default/Makefile	/^CPP = gcc -E$/;"	m
CPP	zcash/Makefile	/^CPP = gcc -E$/;"	m
CPP	zcash/secp256k1/Makefile	/^CPP = gcc -E$/;"	m
CPPASCOMPILE	libsodium/src/libsodium/Makefile	/^CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CPPFLAGS	Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	demo/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/contrib/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/dist-build/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/msvc-scripts/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/src/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/src/libsodium/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/src/libsodium/include/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/test/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	libsodium/test/default/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	zcash/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS	zcash/secp256k1/Makefile	/^CPPFLAGS = $/;"	m
CPPFLAGS_FOR_BUILD	zcash/secp256k1/Makefile	/^CPPFLAGS_FOR_BUILD =  $(am__append_8)$/;"	m
CPP_FOR_BUILD	zcash/secp256k1/Makefile	/^CPP_FOR_BUILD = gcc -E$/;"	m
CPUFeatures	libsodium/src/libsodium/sodium/runtime.c	/^} CPUFeatures;$/;"	t	typeref:struct:CPUFeatures_	file:
CPUFeatures_	libsodium/src/libsodium/sodium/runtime.c	/^typedef struct CPUFeatures_ {$/;"	s	file:
CPUID_EBX_AVX2	libsodium/src/libsodium/sodium/runtime.c	25;"	d	file:
CPUID_ECX_AESNI	libsodium/src/libsodium/sodium/runtime.c	31;"	d	file:
CPUID_ECX_AVX	libsodium/src/libsodium/sodium/runtime.c	34;"	d	file:
CPUID_ECX_OSXSAVE	libsodium/src/libsodium/sodium/runtime.c	33;"	d	file:
CPUID_ECX_PCLMUL	libsodium/src/libsodium/sodium/runtime.c	28;"	d	file:
CPUID_ECX_SSE3	libsodium/src/libsodium/sodium/runtime.c	27;"	d	file:
CPUID_ECX_SSE41	libsodium/src/libsodium/sodium/runtime.c	30;"	d	file:
CPUID_ECX_SSSE3	libsodium/src/libsodium/sodium/runtime.c	29;"	d	file:
CPUID_ECX_XSAVE	libsodium/src/libsodium/sodium/runtime.c	32;"	d	file:
CPUID_EDX_SSE2	libsodium/src/libsodium/sodium/runtime.c	36;"	d	file:
CPrivKey	zcash/key.h	/^typedef std::vector<unsigned char, secure_allocator<unsigned char> > CPrivKey;$/;"	t
CPubKey	zcash/pubkey.h	/^    CPubKey()$/;"	f	class:CPubKey
CPubKey	zcash/pubkey.h	/^    CPubKey(const T pbegin, const T pend)$/;"	f	class:CPubKey
CPubKey	zcash/pubkey.h	/^    CPubKey(const std::vector<unsigned char>& vch)$/;"	f	class:CPubKey
CPubKey	zcash/pubkey.h	/^class CPubKey$/;"	c
CRIPEMD160	zcash/crypto/ripemd160.cpp	/^CRIPEMD160::CRIPEMD160() : bytes(0)$/;"	f	class:CRIPEMD160
CRIPEMD160	zcash/crypto/ripemd160.h	/^class CRIPEMD160$/;"	c
CRYPTO_ALIGN	libsodium/src/libsodium/include/sodium/export.h	38;"	d
CRYPTO_ALIGN	libsodium/src/libsodium/include/sodium/export.h	40;"	d
CRYPTO_ALIGN	libsodium/src/libsodium/include/sodium/private/common.h	189;"	d
CRYPTO_ALIGN	libsodium/src/libsodium/include/sodium/private/common.h	191;"	d
CRYPTO_CFLAGS	zcash/secp256k1/Makefile	/^CRYPTO_CFLAGS = $/;"	m
CRYPTO_LIBS	zcash/secp256k1/Makefile	/^CRYPTO_LIBS = -lcrypto$/;"	m
CSCOPE	Makefile	/^CSCOPE = cscope$/;"	m
CSCOPE	libsodium/Makefile	/^CSCOPE = cscope$/;"	m
CSCOPE	zcash/secp256k1/Makefile	/^CSCOPE = cscope$/;"	m
CSHA1	zcash/crypto/sha1.cpp	/^CSHA1::CSHA1() : bytes(0)$/;"	f	class:CSHA1
CSHA1	zcash/crypto/sha1.h	/^class CSHA1$/;"	c
CSHA256	zcash/crypto/sha256.cpp	/^CSHA256::CSHA256() : bytes(0)$/;"	f	class:CSHA256
CSHA256	zcash/crypto/sha256.h	/^class CSHA256$/;"	c
CSHA512	zcash/crypto/sha512.cpp	/^CSHA512::CSHA512() : bytes(0)$/;"	f	class:CSHA512
CSHA512	zcash/crypto/sha512.h	/^class CSHA512$/;"	c
CScript	zcash/script/script.h	/^    CScript() { }$/;"	f	class:CScript
CScript	zcash/script/script.h	/^    CScript(const CScript& b) : std::vector<unsigned char>(b.begin(), b.end()) { }$/;"	f	class:CScript
CScript	zcash/script/script.h	/^    CScript(const unsigned char* pbegin, const unsigned char* pend) : std::vector<unsigned char>(pbegin, pend) { }$/;"	f	class:CScript
CScript	zcash/script/script.h	/^    CScript(const_iterator pbegin, const_iterator pend) : std::vector<unsigned char>(pbegin, pend) { }$/;"	f	class:CScript
CScript	zcash/script/script.h	/^    CScript(int64_t b)        { operator<<(b); }$/;"	f	class:CScript
CScript	zcash/script/script.h	/^    explicit CScript(const CScriptNum& b) { operator<<(b); }$/;"	f	class:CScript
CScript	zcash/script/script.h	/^    explicit CScript(const std::vector<unsigned char>& b) { operator<<(b); }$/;"	f	class:CScript
CScript	zcash/script/script.h	/^    explicit CScript(opcodetype b)     { operator<<(b); }$/;"	f	class:CScript
CScript	zcash/script/script.h	/^class CScript : public std::vector<unsigned char>$/;"	c
CScriptID	zcash/script/standard.cpp	/^CScriptID::CScriptID(const CScript& in) : uint160(Hash160(in.begin(), in.end())) {}$/;"	f	class:CScriptID
CScriptID	zcash/script/standard.h	/^    CScriptID() : uint160() {}$/;"	f	class:CScriptID
CScriptID	zcash/script/standard.h	/^    CScriptID(const uint160& in) : uint160(in) {}$/;"	f	class:CScriptID
CScriptID	zcash/script/standard.h	/^class CScriptID : public uint160$/;"	c
CScriptNum	zcash/script/script.h	/^    explicit CScriptNum(const int64_t& n)$/;"	f	class:CScriptNum
CScriptNum	zcash/script/script.h	/^    explicit CScriptNum(const std::vector<unsigned char>& vch, bool fRequireMinimal,$/;"	f	class:CScriptNum
CScriptNum	zcash/script/script.h	/^class CScriptNum$/;"	c
CScriptVisitor	zcash/script/standard.cpp	/^    CScriptVisitor(CScript *scriptin) { script = scriptin; }$/;"	f	class:__anon22::CScriptVisitor
CScriptVisitor	zcash/script/standard.cpp	/^class CScriptVisitor : public boost::static_visitor<bool>$/;"	c	namespace:__anon22	file:
CSemaphore	zcash/sync.h	/^    CSemaphore(int init) : value(init) {}$/;"	f	class:CSemaphore
CSemaphore	zcash/sync.h	/^class CSemaphore$/;"	c
CSemaphoreGrant	zcash/sync.h	/^    CSemaphoreGrant() : sem(NULL), fHaveGrant(false) {}$/;"	f	class:CSemaphoreGrant
CSemaphoreGrant	zcash/sync.h	/^    CSemaphoreGrant(CSemaphore& sema, bool fTry = false) : sem(&sema), fHaveGrant(false)$/;"	f	class:CSemaphoreGrant
CSemaphoreGrant	zcash/sync.h	/^class CSemaphoreGrant$/;"	c
CSerActionSerialize	zcash/serialize.h	/^struct CSerActionSerialize$/;"	s
CSerActionUnserialize	zcash/serialize.h	/^struct CSerActionUnserialize$/;"	s
CSerializeData	zcash/support/allocators/zeroafterfree.h	/^typedef std::vector<char, zero_after_free_allocator<char> > CSerializeData;$/;"	t
CSignatureCache	zcash/script/sigcache.cpp	/^class CSignatureCache$/;"	c	namespace:__anon24	file:
CSizeComputer	zcash/serialize.h	/^    CSizeComputer(int nTypeIn, int nVersionIn) : nSize(0), nType(nTypeIn), nVersion(nVersionIn) {}$/;"	f	class:CSizeComputer
CSizeComputer	zcash/serialize.h	/^class CSizeComputer$/;"	c
CTAGS	Makefile	/^CTAGS = ctags$/;"	m
CTAGS	demo/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/src/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/src/libsodium/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/src/libsodium/include/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/test/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	libsodium/test/default/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	zcash/Makefile	/^CTAGS = ctags$/;"	m
CTAGS	zcash/secp256k1/Makefile	/^CTAGS = ctags$/;"	m
CTransaction	zcash/primitives/transaction.cpp	/^CTransaction::CTransaction() : nVersion(CTransaction::MIN_CURRENT_VERSION), vin(), vout(), nLockTime(0), vjoinsplit(), joinSplitPubKey(), joinSplitSig() { }$/;"	f	class:CTransaction
CTransaction	zcash/primitives/transaction.cpp	/^CTransaction::CTransaction(const CMutableTransaction &tx) : nVersion(tx.nVersion), vin(tx.vin), vout(tx.vout), nLockTime(tx.nLockTime), vjoinsplit(tx.vjoinsplit),$/;"	f	class:CTransaction
CTransaction	zcash/primitives/transaction.h	/^class CTransaction$/;"	c
CTransactionSignatureSerializer	zcash/script/interpreter.cpp	/^    CTransactionSignatureSerializer(const CTransaction &txToIn, const CScript &scriptCodeIn, unsigned int nInIn, int nHashTypeIn) :$/;"	f	class:__anon21::CTransactionSignatureSerializer
CTransactionSignatureSerializer	zcash/script/interpreter.cpp	/^class CTransactionSignatureSerializer {$/;"	c	namespace:__anon21	file:
CTranslationInterface	zcash/zcashutil.h	/^class CTranslationInterface$/;"	c
CTxDestination	zcash/script/standard.h	/^typedef boost::variant<CNoDestination, CKeyID, CScriptID> CTxDestination;$/;"	t
CTxIn	zcash/primitives/transaction.cpp	/^CTxIn::CTxIn(COutPoint prevoutIn, CScript scriptSigIn, uint32_t nSequenceIn)$/;"	f	class:CTxIn
CTxIn	zcash/primitives/transaction.cpp	/^CTxIn::CTxIn(uint256 hashPrevTx, uint32_t nOut, CScript scriptSigIn, uint32_t nSequenceIn)$/;"	f	class:CTxIn
CTxIn	zcash/primitives/transaction.h	/^    CTxIn()$/;"	f	class:CTxIn
CTxIn	zcash/primitives/transaction.h	/^class CTxIn$/;"	c
CTxOut	zcash/primitives/transaction.cpp	/^CTxOut::CTxOut(const CAmount& nValueIn, CScript scriptPubKeyIn)$/;"	f	class:CTxOut
CTxOut	zcash/primitives/transaction.h	/^    CTxOut()$/;"	f	class:CTxOut
CTxOut	zcash/primitives/transaction.h	/^class CTxOut$/;"	c
CURRENT_VERSION	zcash/primitives/block.h	/^    static const int32_t CURRENT_VERSION=4;$/;"	m	class:CBlockHeader
CURVE	libsnark/Makefile	/^CURVE = ALT_BN128$/;"	m
CURVE_B	zcash/secp256k1/src/group_impl.h	/^const int CURVE_B = 2;$/;"	v
CURVE_B	zcash/secp256k1/src/group_impl.h	/^const int CURVE_B = 4;$/;"	v
CURVE_B	zcash/secp256k1/src/group_impl.h	/^const int CURVE_B = 7;$/;"	v
CURVE_UTILS_HPP_	libsnark/src/algebra/curves/curve_utils.hpp	9;"	d
CURVE_UTILS_TCC_	libsnark/src/algebra/curves/curve_utils.tcc	9;"	d	file:
CValidationState	zcash/consensus/validation.h	/^    CValidationState() : mode(MODE_VALID), nDoS(0), chRejectCode(0), corruptionPossible(false) {}$/;"	f	class:CValidationState
CValidationState	zcash/consensus/validation.h	/^class CValidationState {$/;"	c
CVarInt	zcash/serialize.h	/^    CVarInt(I& nIn) : n(nIn) { }$/;"	f	class:CVarInt
CVarInt	zcash/serialize.h	/^class CVarInt$/;"	c
CWFLAGS	libsodium/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum -Wno-type-limits$/;"	m
CWFLAGS	libsodium/contrib/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum -Wno-type-limits$/;"	m
CWFLAGS	libsodium/dist-build/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum -Wno-type-limits$/;"	m
CWFLAGS	libsodium/msvc-scripts/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum -Wno-type-limits$/;"	m
CWFLAGS	libsodium/src/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum -Wno-type-limits$/;"	m
CWFLAGS	libsodium/src/libsodium/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum -Wno-type-limits$/;"	m
CWFLAGS	libsodium/src/libsodium/include/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum -Wno-type-limits$/;"	m
CWFLAGS	libsodium/test/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum -Wno-type-limits$/;"	m
CWFLAGS	libsodium/test/default/Makefile	/^CWFLAGS =  -Wall -Wextra -Wbad-function-cast -Wcast-align -Wcast-qual -Wduplicated-cond -Wfloat-equal -Wformat=2 -Wmissing-declarations -Wmissing-prototypes -Wnested-externs -Wno-unknown-pragmas -Wnormalized=id -Wnull-dereference -Wpointer-arith -Wredundant-decls -Wstrict-prototypes -Wswitch-enum -Wno-type-limits$/;"	m
CWaitableCriticalSection	zcash/sync.h	/^typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;$/;"	t
CXX	Makefile	/^CXX = g++$/;"	m
CXX	demo/Makefile	/^CXX = g++$/;"	m
CXX	zcash/Makefile	/^CXX = g++$/;"	m
CXXCOMPILE	demo/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCOMPILE	zcash/Makefile	/^CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\$/;"	m
CXXCPP	Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	demo/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXCPP	zcash/Makefile	/^CXXCPP = g++ -E$/;"	m
CXXDEPMODE	Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	demo/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXDEPMODE	zcash/Makefile	/^CXXDEPMODE = depmode=gcc3$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	demo/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXFLAGS	zcash/Makefile	/^CXXFLAGS = -g -O2$/;"	m
CXXLD	demo/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLD	zcash/Makefile	/^CXXLD = $(CXX)$/;"	m
CXXLINK	demo/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CXXLINK	zcash/Makefile	/^CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \\$/;"	m
CYGPATH_W	Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	demo/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/contrib/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/dist-build/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/msvc-scripts/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/src/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/src/libsodium/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/src/libsodium/include/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/test/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	libsodium/test/default/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	zcash/Makefile	/^CYGPATH_W = echo$/;"	m
CYGPATH_W	zcash/secp256k1/Makefile	/^CYGPATH_W = echo$/;"	m
C_in_Lagrange_basis	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::vector<std::map<size_t, FieldT> > C_in_Lagrange_basis;$/;"	m	class:libsnark::qap_instance
C_query	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    knowledge_commitment_vector<G1<ppT>, G1<ppT> > C_query;$/;"	m	class:libsnark::r1cs_ppzksnark_proving_key
CachingTransactionSignatureChecker	zcash/script/sigcache.h	/^    CachingTransactionSignatureChecker(const CTransaction* txToIn, unsigned int nInIn, bool storeIn=true) : TransactionSignatureChecker(txToIn, nInIn), store(storeIn) {}$/;"	f	class:CachingTransactionSignatureChecker
CachingTransactionSignatureChecker	zcash/script/sigcache.h	/^class CachingTransactionSignatureChecker : public TransactionSignatureChecker$/;"	c
CalculateModifiedSize	zcash/primitives/transaction.cpp	/^unsigned int CTransaction::CalculateModifiedSize(unsigned int nTxSize) const$/;"	f	class:CTransaction
CastToBool	zcash/script/interpreter.cpp	/^bool CastToBool(const valtype& vch)$/;"	f
Ch	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^Ch = lambda x, y, z: (z ^ (x & (y ^ z)))$/;"	v
Ch	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	74;"	d	file:
Ch	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	90;"	d	file:
Ch	zcash/crypto/sha256.cpp	/^uint32_t inline Ch(uint32_t x, uint32_t y, uint32_t z) { return z ^ (x & (y ^ z)); }$/;"	f	namespace:__anon29::sha256
Ch	zcash/crypto/sha512.cpp	/^uint64_t inline Ch(uint64_t x, uint64_t y, uint64_t z) { return z ^ (x & (y ^ z)); }$/;"	f	namespace:__anon31::sha512
Ch	zcash/secp256k1/src/hash_impl.h	16;"	d
Ch	zcash/secp256k1/src/hash_impl.h	279;"	d
ChainCode	zcash/hash.h	/^typedef uint256 ChainCode;$/;"	t
ChainCode	zcash/pubkey.h	/^typedef uint256 ChainCode;$/;"	t
Check	zcash/key.cpp	/^bool CKey::Check(const unsigned char *vch) {$/;"	f	class:CKey
CheckLockTime	zcash/script/interpreter.cpp	/^bool TransactionSignatureChecker::CheckLockTime(const CScriptNum& nLockTime) const$/;"	f	class:TransactionSignatureChecker
CheckLockTime	zcash/script/interpreter.h	/^    virtual bool CheckLockTime(const CScriptNum& nLockTime) const$/;"	f	class:BaseSignatureChecker
CheckLowS	zcash/pubkey.cpp	/^\/* static *\/ bool CPubKey::CheckLowS(const std::vector<unsigned char>& vchSig) {$/;"	f	class:CPubKey
CheckMerkleBranch	zcash/primitives/block.cpp	/^uint256 CBlock::CheckMerkleBranch(uint256 hash, const std::vector<uint256>& vMerkleBranch, int nIndex)$/;"	f	class:CBlock
CheckMinimalPush	zcash/script/interpreter.cpp	/^bool static CheckMinimalPush(const valtype& data, opcodetype opcode) {$/;"	f	file:
CheckPubKeyEncoding	zcash/script/interpreter.cpp	/^bool static CheckPubKeyEncoding(const valtype &vchSig, unsigned int flags, ScriptError* serror) {$/;"	f	file:
CheckSig	zcash/script/interpreter.cpp	/^bool TransactionSignatureChecker::CheckSig(const vector<unsigned char>& vchSigIn, const vector<unsigned char>& vchPubKey, const CScript& scriptCode) const$/;"	f	class:TransactionSignatureChecker
CheckSig	zcash/script/interpreter.h	/^    virtual bool CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode) const$/;"	f	class:BaseSignatureChecker
CheckSig	zcash/script/sign.cpp	/^    bool CheckSig(const std::vector<unsigned char>& scriptSig, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode) const$/;"	f	class:__anon15::DummySignatureChecker
CheckSignatureEncoding	zcash/script/interpreter.cpp	/^bool static CheckSignatureEncoding(const valtype &vchSig, unsigned int flags, ScriptError* serror) {$/;"	f	file:
Checker	zcash/script/sign.cpp	/^const BaseSignatureChecker& DummySignatureCreator::Checker() const$/;"	f	class:DummySignatureCreator
Checker	zcash/script/sign.h	/^    const BaseSignatureChecker& Checker() const { return checker; }$/;"	f	class:TransactionSignatureCreator
Ciphertext	zcash/NoteEncryption.hpp	/^    typedef boost::array<unsigned char, CLEN> Ciphertext;$/;"	t	class:libzcash::NoteDecryption
Ciphertext	zcash/NoteEncryption.hpp	/^    typedef boost::array<unsigned char, CLEN> Ciphertext;$/;"	t	class:libzcash::NoteEncryption
ClearDatadirCache	zcash/zcashutil.cpp	/^void ClearDatadirCache()$/;"	f
CollideBranches	zcash/crypto/equihash.cpp	/^void CollideBranches(std::vector<FullStepRow<WIDTH>>& X, const size_t hlen, const size_t lenIndices, const unsigned int clen, const unsigned int ilen, const eh_trunc lt, const eh_trunc rt)$/;"	f
CombineMultisig	zcash/script/sign.cpp	/^static CScript CombineMultisig(const CScript& scriptPubKey, const BaseSignatureChecker& checker,$/;"	f	file:
CombineSignatures	zcash/script/sign.cpp	/^CScript CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,$/;"	f
CombineSignatures	zcash/script/sign.cpp	/^CScript CombineSignatures(const CScript& scriptPubKey, const CTransaction& txTo, unsigned int nIn,$/;"	f
CombineSignatures	zcash/script/sign.cpp	/^static CScript CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,$/;"	f	file:
Compact	zcash/streams.h	/^    inline void Compact()$/;"	f	class:CBaseDataStream
CompareSR	zcash/crypto/equihash.h	/^    CompareSR(size_t l) : len {l} { }$/;"	f	class:CompareSR
CompareSR	zcash/crypto/equihash.h	/^class CompareSR$/;"	c
CompareTo	zcash/arith_uint256.cpp	/^int base_uint<BITS>::CompareTo(const base_uint<BITS>& b) const$/;"	f	class:base_uint
CompressArray	zcash/crypto/equihash.cpp	/^void CompressArray(const unsigned char* in, size_t in_len,$/;"	f
CompressedG1	zcash/Proof.cpp	/^CompressedG1::CompressedG1(curve_G1 point)$/;"	f	class:libzcash::CompressedG1
CompressedG1	zcash/Proof.hpp	/^    CompressedG1() : y_lsb(false), x() { }$/;"	f	class:libzcash::CompressedG1
CompressedG1	zcash/Proof.hpp	/^class CompressedG1 {$/;"	c	namespace:libzcash
CompressedG2	zcash/Proof.cpp	/^CompressedG2::CompressedG2(curve_G2 point)$/;"	f	class:libzcash::CompressedG2
CompressedG2	zcash/Proof.hpp	/^    CompressedG2() : y_gt(false), x() { }$/;"	f	class:libzcash::CompressedG2
CompressedG2	zcash/Proof.hpp	/^class CompressedG2 {$/;"	c	namespace:libzcash
ComputePriority	zcash/primitives/transaction.cpp	/^double CTransaction::ComputePriority(double dPriorityInputs, unsigned int nTxSize) const$/;"	f	class:CTransaction
Consensus	zcash/consensus/params.h	/^namespace Consensus {$/;"	n
CorruptionPossible	zcash/consensus/validation.h	/^    virtual bool CorruptionPossible() const {$/;"	f	class:CValidationState
CreateInstance	zcash/support/pagelocker.h	/^    static void CreateInstance()$/;"	f	class:LockedPageManager
CreatePidFile	zcash/zcashutil.cpp	/^void CreatePidFile(const boost::filesystem::path &path, pid_t pid)$/;"	f
CreateProcess	libsodium/build-aux/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	libsodium/libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	zcash/secp256k1/build-aux/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateProcess	zcash/secp256k1/libtool	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CreateSig	zcash/script/sign.cpp	/^bool DummySignatureCreator::CreateSig(std::vector<unsigned char>& vchSig, const CKeyID& keyid, const CScript& scriptCode) const$/;"	f	class:DummySignatureCreator
CreateSig	zcash/script/sign.cpp	/^bool TransactionSignatureCreator::CreateSig(std::vector<unsigned char>& vchSig, const CKeyID& address, const CScript& scriptCode) const$/;"	f	class:TransactionSignatureCreator
CryptedKeyMap	zcash/keystore.h	/^typedef std::map<CKeyID, std::pair<CPubKey, std::vector<unsigned char> > > CryptedKeyMap;$/;"	t
CryptedSpendingKeyMap	zcash/keystore.h	/^typedef std::map<libzcash::PaymentAddress, std::vector<unsigned char> > CryptedSpendingKeyMap;$/;"	t
Ct	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::vector<FieldT> At, Bt, Ct, Ht;$/;"	m	class:libsnark::qap_instance_evaluation
DATA	libsodium/Makefile	/^DATA = $(pkgconfig_DATA)$/;"	m
DATA	libsodium/src/libsodium/Makefile	/^DATA = $(defexec_DATA)$/;"	m
DATA	zcash/secp256k1/Makefile	/^DATA = $(pkgconfig_DATA)$/;"	m
DEBUG	libsnark/Makefile	/^        DEBUG = 1$/;"	m
DECIMAL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	281;"	d	file:
DECIMAL	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	365;"	d	file:
DECIMAL_U32	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	292;"	d	file:
DECLARE_MESSAGE_WORDS	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	114;"	d
DEFAULT_INCLUDES	demo/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	libsodium/src/libsodium/Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_INCLUDES	libsodium/test/default/Makefile	/^DEFAULT_INCLUDES = -I.$/;"	m
DEFAULT_INCLUDES	zcash/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)$/;"	m
DEFAULT_INCLUDES	zcash/secp256k1/Makefile	/^DEFAULT_INCLUDES = -I. -I$(top_builddir)\/src$/;"	m
DEFAULT_LOGIPS	zcash/zcashutil.h	/^static const bool DEFAULT_LOGIPS        = false;$/;"	v
DEFAULT_LOGTIMEMICROS	zcash/zcashutil.h	/^static const bool DEFAULT_LOGTIMEMICROS = false;$/;"	v
DEFAULT_LOGTIMESTAMPS	zcash/zcashutil.h	/^static const bool DEFAULT_LOGTIMESTAMPS = true;$/;"	v
DEFS	Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	demo/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	libsodium/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.13\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.13\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.13\\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_CATCHABLE_SEGV=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_ATOMIC_OPS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_NANOSLEEP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1 -DCONFIGURED=1$/;"	m
DEFS	libsodium/contrib/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.13\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.13\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.13\\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_CATCHABLE_SEGV=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_ATOMIC_OPS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_NANOSLEEP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1 -DCONFIGURED=1$/;"	m
DEFS	libsodium/dist-build/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.13\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.13\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.13\\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_CATCHABLE_SEGV=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_ATOMIC_OPS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_NANOSLEEP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1 -DCONFIGURED=1$/;"	m
DEFS	libsodium/msvc-scripts/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.13\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.13\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.13\\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_CATCHABLE_SEGV=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_ATOMIC_OPS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_NANOSLEEP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1 -DCONFIGURED=1$/;"	m
DEFS	libsodium/src/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.13\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.13\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.13\\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_CATCHABLE_SEGV=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_ATOMIC_OPS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_NANOSLEEP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1 -DCONFIGURED=1$/;"	m
DEFS	libsodium/src/libsodium/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.13\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.13\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.13\\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_CATCHABLE_SEGV=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_ATOMIC_OPS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_NANOSLEEP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1 -DCONFIGURED=1$/;"	m
DEFS	libsodium/src/libsodium/include/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.13\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.13\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.13\\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_CATCHABLE_SEGV=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_ATOMIC_OPS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_NANOSLEEP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1 -DCONFIGURED=1$/;"	m
DEFS	libsodium/test/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.13\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.13\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.13\\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_CATCHABLE_SEGV=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_ATOMIC_OPS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_NANOSLEEP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1 -DCONFIGURED=1$/;"	m
DEFS	libsodium/test/default/Makefile	/^DEFS = -DPACKAGE_NAME=\\"libsodium\\" -DPACKAGE_TARNAME=\\"libsodium\\" -DPACKAGE_VERSION=\\"1.0.13\\" -DPACKAGE_STRING=\\"libsodium\\ 1.0.13\\" -DPACKAGE_BUGREPORT=\\"https:\/\/github.com\/jedisct1\/libsodium\/issues\\" -DPACKAGE_URL=\\"https:\/\/github.com\/jedisct1\/libsodium\\" -DPACKAGE=\\"libsodium\\" -DVERSION=\\"1.0.13\\" -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -D__EXTENSIONS__=1 -D_ALL_SOURCE=1 -D_GNU_SOURCE=1 -D_POSIX_PTHREAD_SEMANTICS=1 -D_TANDEM_SOURCE=1 -DHAVE_CATCHABLE_SEGV=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\\".libs\/\\" -DHAVE_MMINTRIN_H=1 -DHAVE_EMMINTRIN_H=1 -DHAVE_PMMINTRIN_H=1 -DHAVE_TMMINTRIN_H=1 -DHAVE_SMMINTRIN_H=1 -DHAVE_AVXINTRIN_H=1 -DHAVE_AVX2INTRIN_H=1 -DHAVE_WMMINTRIN_H=1 -DHAVE_SYS_MMAN_H=1 -DNATIVE_LITTLE_ENDIAN=1 -DHAVE_AMD64_ASM=1 -DHAVE_AVX_ASM=1 -DHAVE_TI_MODE=1 -DHAVE_CPUID=1 -DASM_HIDE_SYMBOL=.hidden -DHAVE_WEAK_SYMBOLS=1 -DCPU_UNALIGNED_ACCESS=1 -DHAVE_ATOMIC_OPS=1 -DHAVE_MMAP=1 -DHAVE_MLOCK=1 -DHAVE_MADVISE=1 -DHAVE_MPROTECT=1 -DHAVE_NANOSLEEP=1 -DHAVE_POSIX_MEMALIGN=1 -DHAVE_GETPID=1 -DCONFIGURED=1$/;"	m
DEFS	zcash/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEFS	zcash/secp256k1/Makefile	/^DEFS = -DHAVE_CONFIG_H$/;"	m
DEPDIR	Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	demo/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/contrib/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/dist-build/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/msvc-scripts/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/src/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/src/libsodium/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/src/libsodium/include/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/test/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	libsodium/test/default/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	zcash/Makefile	/^DEPDIR = .deps$/;"	m
DEPDIR	zcash/secp256k1/Makefile	/^DEPDIR = .deps$/;"	m
DEPINST	libsnark/Makefile	/^DEPINST = depinst$/;"	m
DEPINST_EXISTS	libsnark/Makefile	/^DEPINST_EXISTS = $(DEPINST)\/.exists$/;"	m
DEPSRC	libsnark/Makefile	/^DEPSRC = depsrc$/;"	m
DESKTOPTARGETSFILE	libsodium/packaging/dotnet-core/prepare.py	/^DESKTOPTARGETSFILE = 'desktop.targets'$/;"	v
DIAGONALIZE	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h	59;"	d
DIAGONALIZE	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h	59;"	d
DIAGONALIZE	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	73;"	d
DIAGONALIZE_1	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	68;"	d
DIAGONALIZE_2	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	79;"	d
DIGEST_SELECTOR_GADGET_HPP_	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.hpp	8;"	d
DIGEST_SELECTOR_GADGET_TCC_	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.tcc	8;"	d	file:
DISTCLEANFILES	libsodium/Makefile	/^DISTCLEANFILES = $(pkgconfig_DATA)$/;"	m
DISTCLEANFILES	libsodium/test/default/Makefile	/^DISTCLEANFILES = \\$/;"	m
DISTFILES	Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	demo/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/contrib/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/dist-build/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/msvc-scripts/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/src/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/src/libsodium/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/src/libsodium/include/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/test/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	libsodium/test/default/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	zcash/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DISTFILES	zcash/secp256k1/Makefile	/^DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)$/;"	m
DIST_ARCHIVES	Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_ARCHIVES	libsodium/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz $(distdir).tar.bz2$/;"	m
DIST_ARCHIVES	zcash/secp256k1/Makefile	/^DIST_ARCHIVES = $(distdir).tar.gz$/;"	m
DIST_COMMON	Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_COMMON	demo/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_COMMON	libsodium/contrib/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/dist-build/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/msvc-scripts/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/src/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/src/libsodium/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(noinst_HEADERS) \\$/;"	m
DIST_COMMON	libsodium/src/libsodium/include/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__nobase_include_HEADERS_DIST) \\$/;"	m
DIST_COMMON	libsodium/test/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	libsodium/test/default/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	zcash/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(am__DIST_COMMON)$/;"	m
DIST_COMMON	zcash/secp256k1/Makefile	/^DIST_COMMON = $(srcdir)\/Makefile.am $(top_srcdir)\/configure \\$/;"	m
DIST_SOURCES	Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	demo/Makefile	/^DIST_SOURCES = $(circuit_SOURCES)$/;"	m
DIST_SOURCES	libsodium/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/contrib/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/dist-build/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/msvc-scripts/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/src/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/src/libsodium/Makefile	/^DIST_SOURCES = $(libaesni_la_SOURCES) $(libavx2_la_SOURCES) \\$/;"	m
DIST_SOURCES	libsodium/src/libsodium/include/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/test/Makefile	/^DIST_SOURCES =$/;"	m
DIST_SOURCES	libsodium/test/default/Makefile	/^DIST_SOURCES = aead_aes256gcm.c aead_chacha20poly1305.c \\$/;"	m
DIST_SOURCES	zcash/Makefile	/^DIST_SOURCES = $(createjs_SOURCES) $(generate_SOURCES)$/;"	m
DIST_SOURCES	zcash/secp256k1/Makefile	/^DIST_SOURCES = $(libsecp256k1_la_SOURCES) \\$/;"	m
DIST_SUBDIRS	Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	libsodium/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	libsodium/src/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	libsodium/src/libsodium/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_SUBDIRS	libsodium/test/Makefile	/^DIST_SUBDIRS = $(SUBDIRS)$/;"	m
DIST_TARGETS	Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DIST_TARGETS	libsodium/Makefile	/^DIST_TARGETS = dist-bzip2 dist-gzip$/;"	m
DIST_TARGETS	zcash/secp256k1/Makefile	/^DIST_TARGETS = dist-gzip$/;"	m
DLLTOOL	libsodium/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/contrib/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/dist-build/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/msvc-scripts/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/src/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/src/libsodium/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/src/libsodium/include/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/test/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	libsodium/test/default/Makefile	/^DLLTOOL = false$/;"	m
DLLTOOL	zcash/secp256k1/Makefile	/^DLLTOOL = false$/;"	m
DLL_VERSION	libsodium/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/contrib/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/dist-build/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/msvc-scripts/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/src/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/src/libsodium/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/src/libsodium/include/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/test/Makefile	/^DLL_VERSION = 8$/;"	m
DLL_VERSION	libsodium/test/default/Makefile	/^DLL_VERSION = 8$/;"	m
DOCKER	libsodium/packaging/dotnet-core/prepare.py	/^DOCKER = 'sudo docker'$/;"	v
DOCS	libsnark/Makefile	/^DOCS = README.html$/;"	m
DSYMUTIL	libsodium/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/contrib/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/dist-build/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/msvc-scripts/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/src/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/src/libsodium/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/src/libsodium/include/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/test/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	libsodium/test/default/Makefile	/^DSYMUTIL = $/;"	m
DSYMUTIL	zcash/secp256k1/Makefile	/^DSYMUTIL = $/;"	m
DUMPBIN	libsodium/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/contrib/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/dist-build/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/msvc-scripts/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/src/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/src/libsodium/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/src/libsodium/include/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/test/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	libsodium/test/default/Makefile	/^DUMPBIN = $/;"	m
DUMPBIN	zcash/secp256k1/Makefile	/^DUMPBIN = $/;"	m
DateTimeStrFormat	zcash/utiltime.cpp	/^std::string DateTimeStrFormat(const char* pszFormat, int64_t nTime)$/;"	f
Debug	libsodium/test/default/wintest.bat	/^:Debug$/;"	l
DebugDLL	libsodium/test/default/wintest.bat	/^:DebugDLL$/;"	l
DebugPrintInit	zcash/zcashutil.cpp	/^static void DebugPrintInit()$/;"	f	file:
Decode	zcash/key.cpp	/^void CExtKey::Decode(const unsigned char code[74]) {$/;"	f	class:CExtKey
Decode	zcash/pubkey.cpp	/^void CExtPubKey::Decode(const unsigned char code[74]) {$/;"	f	class:CExtPubKey
DecodeBase32	zcash/utilstrencodings.cpp	/^string DecodeBase32(const string& str)$/;"	f
DecodeBase32	zcash/utilstrencodings.cpp	/^vector<unsigned char> DecodeBase32(const char* p, bool* pfInvalid)$/;"	f
DecodeBase64	zcash/utilstrencodings.cpp	/^string DecodeBase64(const string& str)$/;"	f
DecodeBase64	zcash/utilstrencodings.cpp	/^vector<unsigned char> DecodeBase64(const char* p, bool* pfInvalid)$/;"	f
DecodeOP_N	zcash/script/script.h	/^    static int DecodeOP_N(opcodetype opcode)$/;"	f	class:CScript
Decompress	zcash/pubkey.cpp	/^bool CPubKey::Decompress() {$/;"	f	class:CPubKey
Derive	zcash/key.cpp	/^bool CExtKey::Derive(CExtKey &out, unsigned int nChild) const {$/;"	f	class:CExtKey
Derive	zcash/key.cpp	/^bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const ChainCode& cc) const {$/;"	f	class:CKey
Derive	zcash/pubkey.cpp	/^bool CExtPubKey::Derive(CExtPubKey &out, unsigned int nChild) const {$/;"	f	class:CExtPubKey
Derive	zcash/pubkey.cpp	/^bool CPubKey::Derive(CPubKey& pubkeyChild, ChainCode &ccChild, unsigned int nChild, const ChainCode& cc) const {$/;"	f	class:CPubKey
Disabled	zcash/Proof.cpp	/^ProofVerifier ProofVerifier::Disabled() {$/;"	f	class:libzcash::ProofVerifier
DistinctIndices	zcash/crypto/equihash.tcc	/^bool DistinctIndices(const FullStepRow<WIDTH>& a, const FullStepRow<WIDTH>& b, size_t len, size_t lenIndices)$/;"	f
DoS	zcash/consensus/validation.h	/^    virtual bool DoS(int level, bool ret = false,$/;"	f	class:CValidationState
DummySignatureChecker	zcash/script/sign.cpp	/^    DummySignatureChecker() {}$/;"	f	class:__anon15::DummySignatureChecker
DummySignatureChecker	zcash/script/sign.cpp	/^class DummySignatureChecker : public BaseSignatureChecker$/;"	c	namespace:__anon15	file:
DummySignatureCreator	zcash/script/sign.h	/^    DummySignatureCreator(const CKeyStore* keystoreIn) : BaseSignatureCreator(keystoreIn) {}$/;"	f	class:DummySignatureCreator
DummySignatureCreator	zcash/script/sign.h	/^class DummySignatureCreator : public BaseSignatureCreator {$/;"	c
DynamicMemoryUsage	zcash/IncrementalMerkleTree.hpp	/^    size_t DynamicMemoryUsage() const {$/;"	f	class:libzcash::IncrementalMerkleTree
ECCVerifyHandle	zcash/pubkey.cpp	/^ECCVerifyHandle::ECCVerifyHandle()$/;"	f	class:ECCVerifyHandle
ECCVerifyHandle	zcash/pubkey.h	/^class ECCVerifyHandle$/;"	c
ECC_InitSanityCheck	zcash/key.cpp	/^bool ECC_InitSanityCheck() {$/;"	f
ECC_Start	zcash/key.cpp	/^void ECC_Start() {$/;"	f
ECC_Stop	zcash/key.cpp	/^void ECC_Stop() {$/;"	f
ECCryptoClosure	zcash/script/zcashconsensus.cpp	/^struct ECCryptoClosure$/;"	s	namespace:__anon18	file:
ECHO_C	Makefile	/^ECHO_C = $/;"	m
ECHO_C	demo/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/contrib/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/dist-build/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/msvc-scripts/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/src/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/src/libsodium/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/src/libsodium/include/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/test/Makefile	/^ECHO_C = $/;"	m
ECHO_C	libsodium/test/default/Makefile	/^ECHO_C = $/;"	m
ECHO_C	zcash/Makefile	/^ECHO_C = $/;"	m
ECHO_C	zcash/secp256k1/Makefile	/^ECHO_C = $/;"	m
ECHO_N	Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	demo/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/contrib/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/dist-build/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/msvc-scripts/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/src/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/src/libsodium/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/src/libsodium/include/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/test/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	libsodium/test/default/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	zcash/Makefile	/^ECHO_N = -n$/;"	m
ECHO_N	zcash/secp256k1/Makefile	/^ECHO_N = -n$/;"	m
ECHO_T	Makefile	/^ECHO_T = $/;"	m
ECHO_T	demo/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/contrib/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/dist-build/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/msvc-scripts/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/src/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/src/libsodium/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/src/libsodium/include/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/test/Makefile	/^ECHO_T = $/;"	m
ECHO_T	libsodium/test/default/Makefile	/^ECHO_T = $/;"	m
ECHO_T	zcash/Makefile	/^ECHO_T = $/;"	m
ECHO_T	zcash/secp256k1/Makefile	/^ECHO_T = $/;"	m
ECMULT_CONST_TABLE_GET_GE	zcash/secp256k1/src/ecmult_const_impl.h	23;"	d
ECMULT_TABLE_GET_GE	zcash/secp256k1/src/ecmult_impl.h	134;"	d
ECMULT_TABLE_GET_GE_STORAGE	zcash/secp256k1/src/ecmult_impl.h	145;"	d
ECMULT_TABLE_SIZE	zcash/secp256k1/src/ecmult_impl.h	45;"	d
EC_PP_HPP_	libsnark/src/common/default_types/ec_pp.hpp	14;"	d
EGREP	Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	demo/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/contrib/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/dist-build/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/msvc-scripts/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/src/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/src/libsodium/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/src/libsodium/include/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/test/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	libsodium/test/default/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	zcash/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
EGREP	zcash/secp256k1/Makefile	/^EGREP = \/bin\/grep -E$/;"	m
ENABLE_MODULE_RECOVERY	zcash/secp256k1/src/libsecp256k1-config.h	18;"	d
ENABLE_OPENSSL_TESTS	zcash/secp256k1/src/libsecp256k1-config.h	21;"	d
ENABLE_VALGRIND_drd	libsodium/Makefile	/^ENABLE_VALGRIND_drd = no$/;"	m
ENABLE_VALGRIND_drd	libsodium/contrib/Makefile	/^ENABLE_VALGRIND_drd = no$/;"	m
ENABLE_VALGRIND_drd	libsodium/dist-build/Makefile	/^ENABLE_VALGRIND_drd = no$/;"	m
ENABLE_VALGRIND_drd	libsodium/msvc-scripts/Makefile	/^ENABLE_VALGRIND_drd = no$/;"	m
ENABLE_VALGRIND_drd	libsodium/src/Makefile	/^ENABLE_VALGRIND_drd = no$/;"	m
ENABLE_VALGRIND_drd	libsodium/src/libsodium/Makefile	/^ENABLE_VALGRIND_drd = no$/;"	m
ENABLE_VALGRIND_drd	libsodium/src/libsodium/include/Makefile	/^ENABLE_VALGRIND_drd = no$/;"	m
ENABLE_VALGRIND_drd	libsodium/test/Makefile	/^ENABLE_VALGRIND_drd = no$/;"	m
ENABLE_VALGRIND_drd	libsodium/test/default/Makefile	/^ENABLE_VALGRIND_drd = no$/;"	m
ENABLE_VALGRIND_helgrind	libsodium/Makefile	/^ENABLE_VALGRIND_helgrind = no$/;"	m
ENABLE_VALGRIND_helgrind	libsodium/contrib/Makefile	/^ENABLE_VALGRIND_helgrind = no$/;"	m
ENABLE_VALGRIND_helgrind	libsodium/dist-build/Makefile	/^ENABLE_VALGRIND_helgrind = no$/;"	m
ENABLE_VALGRIND_helgrind	libsodium/msvc-scripts/Makefile	/^ENABLE_VALGRIND_helgrind = no$/;"	m
ENABLE_VALGRIND_helgrind	libsodium/src/Makefile	/^ENABLE_VALGRIND_helgrind = no$/;"	m
ENABLE_VALGRIND_helgrind	libsodium/src/libsodium/Makefile	/^ENABLE_VALGRIND_helgrind = no$/;"	m
ENABLE_VALGRIND_helgrind	libsodium/src/libsodium/include/Makefile	/^ENABLE_VALGRIND_helgrind = no$/;"	m
ENABLE_VALGRIND_helgrind	libsodium/test/Makefile	/^ENABLE_VALGRIND_helgrind = no$/;"	m
ENABLE_VALGRIND_helgrind	libsodium/test/default/Makefile	/^ENABLE_VALGRIND_helgrind = no$/;"	m
ENABLE_VALGRIND_memcheck	libsodium/Makefile	/^ENABLE_VALGRIND_memcheck = no$/;"	m
ENABLE_VALGRIND_memcheck	libsodium/contrib/Makefile	/^ENABLE_VALGRIND_memcheck = no$/;"	m
ENABLE_VALGRIND_memcheck	libsodium/dist-build/Makefile	/^ENABLE_VALGRIND_memcheck = no$/;"	m
ENABLE_VALGRIND_memcheck	libsodium/msvc-scripts/Makefile	/^ENABLE_VALGRIND_memcheck = no$/;"	m
ENABLE_VALGRIND_memcheck	libsodium/src/Makefile	/^ENABLE_VALGRIND_memcheck = no$/;"	m
ENABLE_VALGRIND_memcheck	libsodium/src/libsodium/Makefile	/^ENABLE_VALGRIND_memcheck = no$/;"	m
ENABLE_VALGRIND_memcheck	libsodium/src/libsodium/include/Makefile	/^ENABLE_VALGRIND_memcheck = no$/;"	m
ENABLE_VALGRIND_memcheck	libsodium/test/Makefile	/^ENABLE_VALGRIND_memcheck = no$/;"	m
ENABLE_VALGRIND_memcheck	libsodium/test/default/Makefile	/^ENABLE_VALGRIND_memcheck = no$/;"	m
ENABLE_VALGRIND_sgcheck	libsodium/Makefile	/^ENABLE_VALGRIND_sgcheck = no$/;"	m
ENABLE_VALGRIND_sgcheck	libsodium/contrib/Makefile	/^ENABLE_VALGRIND_sgcheck = no$/;"	m
ENABLE_VALGRIND_sgcheck	libsodium/dist-build/Makefile	/^ENABLE_VALGRIND_sgcheck = no$/;"	m
ENABLE_VALGRIND_sgcheck	libsodium/msvc-scripts/Makefile	/^ENABLE_VALGRIND_sgcheck = no$/;"	m
ENABLE_VALGRIND_sgcheck	libsodium/src/Makefile	/^ENABLE_VALGRIND_sgcheck = no$/;"	m
ENABLE_VALGRIND_sgcheck	libsodium/src/libsodium/Makefile	/^ENABLE_VALGRIND_sgcheck = no$/;"	m
ENABLE_VALGRIND_sgcheck	libsodium/src/libsodium/include/Makefile	/^ENABLE_VALGRIND_sgcheck = no$/;"	m
ENABLE_VALGRIND_sgcheck	libsodium/test/Makefile	/^ENABLE_VALGRIND_sgcheck = no$/;"	m
ENABLE_VALGRIND_sgcheck	libsodium/test/default/Makefile	/^ENABLE_VALGRIND_sgcheck = no$/;"	m
END	libsodium/test/default/wintest.bat	/^:END$/;"	l
END	zcash/utilstrencodings.h	17;"	d
ENOSYS	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	33;"	d	file:
ENOSYS	libsodium/src/libsodium/sodium/utils.c	28;"	d	file:
ENTER_CRITICAL_SECTION	zcash/sync.h	169;"	d
EQ	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	57;"	d	file:
ETAGS	Makefile	/^ETAGS = etags$/;"	m
ETAGS	demo/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/src/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/src/libsodium/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/src/libsodium/include/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/test/Makefile	/^ETAGS = etags$/;"	m
ETAGS	libsodium/test/default/Makefile	/^ETAGS = etags$/;"	m
ETAGS	zcash/Makefile	/^ETAGS = etags$/;"	m
ETAGS	zcash/secp256k1/Makefile	/^ETAGS = etags$/;"	m
EVALUATION_DOMAIN_HPP_	libsnark/src/algebra/evaluation_domain/evaluation_domain.hpp	27;"	d
EVALUATION_DOMAIN_TCC_	libsnark/src/algebra/evaluation_domain/evaluation_domain.tcc	20;"	d	file:
EXCLUSIVE_LOCKS_REQUIRED	zcash/threadsafety.h	31;"	d
EXCLUSIVE_LOCKS_REQUIRED	zcash/threadsafety.h	50;"	d
EXCLUSIVE_LOCK_FUNCTION	zcash/sync.h	/^    CMutexLock(Mutex& mutexIn, const char* pszName, const char* pszFile, int nLine, bool fTry = false) EXCLUSIVE_LOCK_FUNCTION(mutexIn) : lock(mutexIn, boost::defer_lock)$/;"	f	class:CMutexLock
EXCLUSIVE_LOCK_FUNCTION	zcash/sync.h	/^    CMutexLock(Mutex* pmutexIn, const char* pszName, const char* pszFile, int nLine, bool fTry = false) EXCLUSIVE_LOCK_FUNCTION(pmutexIn)$/;"	f	class:CMutexLock
EXCLUSIVE_LOCK_FUNCTION	zcash/sync.h	/^    void lock() EXCLUSIVE_LOCK_FUNCTION()$/;"	f	class:AnnotatedMixin
EXCLUSIVE_LOCK_FUNCTION	zcash/threadsafety.h	24;"	d
EXCLUSIVE_LOCK_FUNCTION	zcash/threadsafety.h	43;"	d
EXCLUSIVE_TRYLOCK_FUNCTION	zcash/sync.h	/^    bool try_lock() EXCLUSIVE_TRYLOCK_FUNCTION(true)$/;"	f	class:AnnotatedMixin
EXCLUSIVE_TRYLOCK_FUNCTION	zcash/threadsafety.h	26;"	d
EXCLUSIVE_TRYLOCK_FUNCTION	zcash/threadsafety.h	45;"	d
EXECUTABLES	libsnark/Makefile	/^EXECUTABLES = \\$/;"	m
EXEC_OBJS	libsnark/Makefile	/^EXEC_OBJS =$(patsubst %,%.o,$(EXECUTABLES) $(EXECUTABLES_WITH_GTEST) $(EXECUTABLES_WITH_SUPERCOP))$/;"	m
EXEEXT	Makefile	/^EXEEXT = $/;"	m
EXEEXT	demo/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/contrib/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/dist-build/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/msvc-scripts/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/src/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/src/libsodium/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/src/libsodium/include/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/test/Makefile	/^EXEEXT = $/;"	m
EXEEXT	libsodium/test/default/Makefile	/^EXEEXT = $/;"	m
EXEEXT	zcash/Makefile	/^EXEEXT = $/;"	m
EXEEXT	zcash/secp256k1/Makefile	/^EXEEXT = $/;"	m
EXHAUSTIVE_TEST_LAMBDA	zcash/secp256k1/src/tests_exhaustive.c	21;"	d	file:
EXHAUSTIVE_TEST_ORDER	zcash/secp256k1/src/tests_exhaustive.c	20;"	d	file:
EXPAND_KEY_1	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	70;"	d	file:
EXPAND_KEY_2	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	79;"	d	file:
EXPB0	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	8;"	d
EXPB0	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const unsigned char EXPB0[16] = { 0x03, 0x03, 0x03, 0x03, 0x07, 0x07,$/;"	v
EXPECT	zcash/secp256k1/src/util.h	40;"	d
EXPECT	zcash/secp256k1/src/util.h	42;"	d
EXPONENTIATION_HPP_	libsnark/src/algebra/exponentiation/exponentiation.hpp	13;"	d
EXPONENTIATION_TCC_	libsnark/src/algebra/exponentiation/exponentiation.tcc	15;"	d	file:
EXPORT_SYMBOL	zcash/script/zcashconsensus.h	14;"	d
EXPORT_SYMBOL	zcash/script/zcashconsensus.h	16;"	d
EXPORT_SYMBOL	zcash/script/zcashconsensus.h	20;"	d
EXPORT_SYMBOL	zcash/script/zcashconsensus.h	23;"	d
EXPORT_SYMBOL	zcash/script/zcashconsensus.h	27;"	d
EXPORT_SYMBOL	zcash/script/zcashconsensus.h	66;"	d
EXTRAS	libsodium/packaging/dotnet-core/prepare.py	/^EXTRAS = [ 'LICENSE', 'AUTHORS', 'ChangeLog' ]$/;"	v
EXTRA_DIST	libsodium/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	libsodium/contrib/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	libsodium/dist-build/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	libsodium/msvc-scripts/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	libsodium/test/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	libsodium/test/default/Makefile	/^EXTRA_DIST = \\$/;"	m
EXTRA_DIST	zcash/secp256k1/Makefile	/^EXTRA_DIST = autogen.sh src\/gen_context.c src\/basic-config.h $(JAVA_FILES)$/;"	m
EXTRA_SRC	libsodium/src/libsodium/include/Makefile	/^EXTRA_SRC = $(SODIUM_EXPORT) \\$/;"	m
EhIndexToArray	zcash/crypto/equihash.cpp	/^void EhIndexToArray(const eh_index i, unsigned char* array)$/;"	f
EhInitialiseState	zcash/crypto/equihash.h	203;"	d
EhIsValidSolution	zcash/crypto/equihash.h	266;"	d
EhSolverCancelCheck	zcash/crypto/equihash.h	/^enum EhSolverCancelCheck$/;"	g
EhSolverCancelledException	zcash/crypto/equihash.h	/^class EhSolverCancelledException : public std::exception$/;"	c
EmptyMerkleRoots	zcash/IncrementalMerkleTree.hpp	/^    EmptyMerkleRoots() {$/;"	f	class:libzcash::EmptyMerkleRoots
EmptyMerkleRoots	zcash/IncrementalMerkleTree.hpp	/^class EmptyMerkleRoots {$/;"	c	namespace:libzcash
Encode	zcash/key.cpp	/^void CExtKey::Encode(unsigned char code[74]) const {$/;"	f	class:CExtKey
Encode	zcash/pubkey.cpp	/^void CExtPubKey::Encode(unsigned char code[74]) const {$/;"	f	class:CExtPubKey
EncodeBase32	zcash/utilstrencodings.cpp	/^string EncodeBase32(const string& str)$/;"	f
EncodeBase32	zcash/utilstrencodings.cpp	/^string EncodeBase32(const unsigned char* pch, size_t len)$/;"	f
EncodeBase64	zcash/utilstrencodings.cpp	/^string EncodeBase64(const string& str)$/;"	f
EncodeBase64	zcash/utilstrencodings.cpp	/^string EncodeBase64(const unsigned char* pch, size_t len)$/;"	f
EncodeOP_N	zcash/script/script.h	/^    static opcodetype EncodeOP_N(int n)$/;"	f	class:CScript
Enter	zcash/sync.h	/^    void Enter(const char* pszName, const char* pszFile, int nLine)$/;"	f	class:CMutexLock
EnterCritical	zcash/sync.cpp	/^void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry)$/;"	f
EnterCritical	zcash/sync.h	/^void static inline EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false) {}$/;"	f
EqualTo	zcash/arith_uint256.cpp	/^bool base_uint<BITS>::EqualTo(uint64_t b) const$/;"	f	class:base_uint
Equihash	zcash/crypto/equihash.h	/^class Equihash$/;"	c
Error	zcash/consensus/validation.h	/^    virtual bool Error(const std::string& strRejectReasonIn) {$/;"	f	class:CValidationState
EvalScript	zcash/script/interpreter.cpp	/^bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror)$/;"	f
ExpandArray	zcash/crypto/equihash.cpp	/^void ExpandArray(const unsigned char* in, size_t in_len,$/;"	f
ExtraItem	libsodium/packaging/dotnet-core/prepare.py	/^class ExtraItem:$/;"	c
ExtractDestination	zcash/script/standard.cpp	/^bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)$/;"	f
ExtractDestinations	zcash/script/standard.cpp	/^bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, vector<CTxDestination>& addressRet, int& nRequiredRet)$/;"	f
FDELT_TYPE	config.h	8;"	d
FD_SETSIZE	zcash/compat.h	25;"	d
FD_SETSIZE	zcash/compat.h	27;"	d
FEATUREFLAGS	libsnark/Makefile	/^FEATUREFLAGS = -DUSE_ASM -DMONTGOMERY_OUTPUT$/;"	m
FFT	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^void basic_radix2_domain<FieldT>::FFT(std::vector<FieldT> &a)$/;"	f	class:libsnark::basic_radix2_domain
FGREP	libsodium/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/contrib/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/dist-build/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/msvc-scripts/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/src/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/src/libsodium/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/src/libsodium/include/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/test/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	libsodium/test/default/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FGREP	zcash/secp256k1/Makefile	/^FGREP = \/bin\/grep -F$/;"	m
FIELD_UTILS_HPP_	libsnark/src/algebra/fields/field_utils.hpp	9;"	d
FIELD_UTILS_TCC_	libsnark/src/algebra/fields/field_utils.tcc	11;"	d	file:
FLATDATA	zcash/serialize.h	377;"	d
FMT	libsnark/src/common/utils.hpp	41;"	d
FMT	libsnark/src/common/utils.hpp	43;"	d
FORMAT	libsnark/src/common/utils.cpp	/^std::string FORMAT(const std::string &prefix, const char* format, ...)$/;"	f	namespace:libsnark
FP12_2OVER3OVER2_HPP_	libsnark/src/algebra/fields/fp12_2over3over2.hpp	11;"	d
FP12_2OVER3OVER2_TCC_	libsnark/src/algebra/fields/fp12_2over3over2.tcc	11;"	d	file:
FP2_HPP_	libsnark/src/algebra/fields/fp2.hpp	11;"	d
FP2_TCC_	libsnark/src/algebra/fields/fp2.tcc	11;"	d	file:
FP3_HPP_	libsnark/src/algebra/fields/fp3.hpp	11;"	d
FP3_TCC_	libsnark/src/algebra/fields/fp3.tcc	11;"	d	file:
FP6_3OVER2_HPP_	libsnark/src/algebra/fields/fp6_3over2.hpp	11;"	d
FP6_3OVER2_TCC_	libsnark/src/algebra/fields/fp6_3over2.tcc	11;"	d	file:
FP_AUX_TCC_	libsnark/src/algebra/fields/fp_aux.tcc	14;"	d	file:
FP_HPP_	libsnark/src/algebra/fields/fp.hpp	11;"	d
FP_TCC_	libsnark/src/algebra/fields/fp.tcc	11;"	d	file:
FUNC	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	176;"	d	file:
FieldT	zcash/JoinSplit.cpp	/^    typedef Fr<ppzksnark_ppT> FieldT;$/;"	t	class:libzcash::JoinSplitCircuit	file:
FileCommit	zcash/zcashutil.cpp	/^void FileCommit(FILE *fileout)$/;"	f
FileWriteStr	zcash/zcashutil.cpp	/^static int FileWriteStr(const std::string &str, FILE *fp)$/;"	f	file:
Fill	zcash/streams.h	/^    bool Fill() {$/;"	f	class:CBufferedFile
FinalColliding	zcash/crypto/equihash.h	/^    FinalColliding,$/;"	e	enum:EhSolverCancelCheck
FinalSorting	zcash/crypto/equihash.h	/^    FinalSorting,$/;"	e	enum:EhSolverCancelCheck
Finalize	zcash/crypto/hmac_sha256.cpp	/^void CHMAC_SHA256::Finalize(unsigned char hash[OUTPUT_SIZE])$/;"	f	class:CHMAC_SHA256
Finalize	zcash/crypto/hmac_sha512.cpp	/^void CHMAC_SHA512::Finalize(unsigned char hash[OUTPUT_SIZE])$/;"	f	class:CHMAC_SHA512
Finalize	zcash/crypto/ripemd160.cpp	/^void CRIPEMD160::Finalize(unsigned char hash[OUTPUT_SIZE])$/;"	f	class:CRIPEMD160
Finalize	zcash/crypto/sha1.cpp	/^void CSHA1::Finalize(unsigned char hash[OUTPUT_SIZE])$/;"	f	class:CSHA1
Finalize	zcash/crypto/sha256.cpp	/^void CSHA256::Finalize(unsigned char hash[OUTPUT_SIZE])$/;"	f	class:CSHA256
Finalize	zcash/crypto/sha512.cpp	/^void CSHA512::Finalize(unsigned char hash[OUTPUT_SIZE])$/;"	f	class:CSHA512
Finalize	zcash/hash.h	/^    void Finalize(unsigned char hash[OUTPUT_SIZE]) {$/;"	f	class:CHash160
Finalize	zcash/hash.h	/^    void Finalize(unsigned char hash[OUTPUT_SIZE]) {$/;"	f	class:CHash256
FinalizeNoPadding	zcash/crypto/sha256.cpp	/^void CSHA256::FinalizeNoPadding(unsigned char hash[OUTPUT_SIZE], bool enforce_compression)$/;"	f	class:CSHA256
FinalizeNoPadding	zcash/crypto/sha256.h	/^    void FinalizeNoPadding(unsigned char hash[OUTPUT_SIZE]) {$/;"	f	class:CSHA256
FindByte	zcash/streams.h	/^    void FindByte(char ch) {$/;"	f	class:CBufferedFile
ForRead	zcash/serialize.h	/^    bool ForRead() const { return false; }$/;"	f	struct:CSerActionSerialize
ForRead	zcash/serialize.h	/^    bool ForRead() const { return true; }$/;"	f	struct:CSerActionUnserialize
FormatArg	zcash/tinyformat.h	/^        FormatArg() {}$/;"	f	class:tinyformat::detail::FormatArg
FormatArg	zcash/tinyformat.h	/^        FormatArg(const T& value)$/;"	f	class:tinyformat::detail::FormatArg
FormatArg	zcash/tinyformat.h	/^class FormatArg$/;"	c	namespace:tinyformat::detail
FormatException	zcash/zcashutil.cpp	/^static std::string FormatException(const std::exception* pex, const char* pszThread)$/;"	f	file:
FormatList	zcash/tinyformat.h	/^        FormatList(detail::FormatArg* formatters, int N)$/;"	f	class:tinyformat::FormatList
FormatList	zcash/tinyformat.h	/^class FormatList$/;"	c	namespace:tinyformat
FormatListN	zcash/tinyformat.h	/^        FormatListN(const Args&... args)$/;"	f	class:tinyformat::detail::FormatListN
FormatListN	zcash/tinyformat.h	/^    public: FormatListN() : FormatList(0, 0) {}$/;"	f	class:tinyformat::detail::FormatListN
FormatListN	zcash/tinyformat.h	/^class FormatListN : public FormatList$/;"	c	namespace:tinyformat::detail
FormatListN	zcash/tinyformat.h	/^template<> class FormatListN<0> : public FormatList$/;"	c	namespace:tinyformat::detail
FormatListRef	zcash/tinyformat.h	/^typedef const FormatList& FormatListRef;$/;"	t	namespace:tinyformat
FormatParagraph	zcash/utilstrencodings.cpp	/^std::string FormatParagraph(const std::string& in, size_t width, size_t indent)$/;"	f
Fp12_2over3over2_model	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    Fp12_2over3over2_model() {};$/;"	f	class:libsnark::Fp12_2over3over2_model
Fp12_2over3over2_model	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    Fp12_2over3over2_model(const my_Fp6& c0, const my_Fp6& c1) : c0(c0), c1(c1) {};$/;"	f	class:libsnark::Fp12_2over3over2_model
Fp12_2over3over2_model	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^class Fp12_2over3over2_model {$/;"	c	namespace:libsnark
Fp2_model	libsnark/src/algebra/fields/fp2.hpp	/^    Fp2_model() {};$/;"	f	class:libsnark::Fp2_model
Fp2_model	libsnark/src/algebra/fields/fp2.hpp	/^    Fp2_model(const my_Fp& c0, const my_Fp& c1) : c0(c0), c1(c1) {};$/;"	f	class:libsnark::Fp2_model
Fp2_model	libsnark/src/algebra/fields/fp2.hpp	/^class Fp2_model {$/;"	c	namespace:libsnark
Fp3_model	libsnark/src/algebra/fields/fp3.hpp	/^    Fp3_model() {};$/;"	f	class:libsnark::Fp3_model
Fp3_model	libsnark/src/algebra/fields/fp3.hpp	/^    Fp3_model(const my_Fp& c0, const my_Fp& c1, const my_Fp& c2) : c0(c0), c1(c1), c2(c2) {};$/;"	f	class:libsnark::Fp3_model
Fp3_model	libsnark/src/algebra/fields/fp3.hpp	/^class Fp3_model {$/;"	c	namespace:libsnark
Fp6_3over2_model	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    Fp6_3over2_model() {};$/;"	f	class:libsnark::Fp6_3over2_model
Fp6_3over2_model	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    Fp6_3over2_model(const my_Fp2& c0, const my_Fp2& c1, const my_Fp2& c2) : c0(c0), c1(c1), c2(c2) {};$/;"	f	class:libsnark::Fp6_3over2_model
Fp6_3over2_model	libsnark/src/algebra/fields/fp6_3over2.hpp	/^class Fp6_3over2_model {$/;"	c	namespace:libsnark
Fp_model	libsnark/src/algebra/fields/fp.hpp	/^    Fp_model() {};$/;"	f	class:libsnark::Fp_model
Fp_model	libsnark/src/algebra/fields/fp.hpp	/^class Fp_model {$/;"	c	namespace:libsnark
Fp_model	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus>::Fp_model(const bigint<n> &b)$/;"	f	class:libsnark::Fp_model
Fp_model	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus>::Fp_model(const long x, const bool is_unsigned)$/;"	f	class:libsnark::Fp_model
Fp_type	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    typedef alt_bn128_Fr Fp_type;$/;"	t	class:libsnark::alt_bn128_pp
Fq	zcash/Proof.cpp	/^Fq::Fq(curve_Fq element) : data()$/;"	f	class:libzcash::Fq
Fq	zcash/Proof.hpp	/^    Fq() : data() { }$/;"	f	class:libzcash::Fq
Fq	zcash/Proof.hpp	/^class Fq {$/;"	c	namespace:libzcash
Fq2	zcash/Proof.cpp	/^Fq2::Fq2(curve_Fq2 element) : data()$/;"	f	class:libzcash::Fq2
Fq2	zcash/Proof.hpp	/^    Fq2() : data() { }$/;"	f	class:libzcash::Fq2
Fq2	zcash/Proof.hpp	/^class Fq2 {$/;"	c	namespace:libzcash
Fq_type	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    typedef alt_bn128_Fq Fq_type;$/;"	t	class:libsnark::alt_bn128_pp
Fqe_type	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    typedef alt_bn128_Fq2 Fqe_type;$/;"	t	class:libsnark::alt_bn128_pp
Fqk_type	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    typedef alt_bn128_Fq12 Fqk_type;$/;"	t	class:libsnark::alt_bn128_pp
Frobenius_coeffs_c1	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    static Fp2_model<n, modulus> Frobenius_coeffs_c1[12]; \/\/ non_residue^((modulus^i-1)\/6) for i=0,...,11$/;"	m	class:libsnark::Fp12_2over3over2_model
Frobenius_coeffs_c1	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^Fp2_model<n, modulus> Fp12_2over3over2_model<n, modulus>::Frobenius_coeffs_c1[12];$/;"	m	class:libsnark::Fp12_2over3over2_model
Frobenius_coeffs_c1	libsnark/src/algebra/fields/fp2.hpp	/^    static my_Fp Frobenius_coeffs_c1[2]; \/\/ non_residue^((modulus^i-1)\/2) for i=0,1$/;"	m	class:libsnark::Fp2_model
Frobenius_coeffs_c1	libsnark/src/algebra/fields/fp2.hpp	/^Fp_model<n, modulus> Fp2_model<n, modulus>::Frobenius_coeffs_c1[2];$/;"	m	class:libsnark::Fp2_model
Frobenius_coeffs_c1	libsnark/src/algebra/fields/fp3.hpp	/^    static my_Fp Frobenius_coeffs_c1[3]; \/\/ non_residue^((modulus^i-1)\/3)   for i=0,1,2$/;"	m	class:libsnark::Fp3_model
Frobenius_coeffs_c1	libsnark/src/algebra/fields/fp3.hpp	/^Fp_model<n, modulus> Fp3_model<n, modulus>::Frobenius_coeffs_c1[3];$/;"	m	class:libsnark::Fp3_model
Frobenius_coeffs_c1	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    static my_Fp2 Frobenius_coeffs_c1[6]; \/\/ non_residue^((modulus^i-1)\/3)   for i=0,1,2,3,4,5$/;"	m	class:libsnark::Fp6_3over2_model
Frobenius_coeffs_c1	libsnark/src/algebra/fields/fp6_3over2.hpp	/^Fp2_model<n, modulus> Fp6_3over2_model<n, modulus>::Frobenius_coeffs_c1[6];$/;"	m	class:libsnark::Fp6_3over2_model
Frobenius_coeffs_c2	libsnark/src/algebra/fields/fp3.hpp	/^    static my_Fp Frobenius_coeffs_c2[3]; \/\/ non_residue^((2*modulus^i-2)\/3) for i=0,1,2$/;"	m	class:libsnark::Fp3_model
Frobenius_coeffs_c2	libsnark/src/algebra/fields/fp3.hpp	/^Fp_model<n, modulus> Fp3_model<n, modulus>::Frobenius_coeffs_c2[3];$/;"	m	class:libsnark::Fp3_model
Frobenius_coeffs_c2	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    static my_Fp2 Frobenius_coeffs_c2[6]; \/\/ non_residue^((2*modulus^i-2)\/3) for i=0,1,2,3,4,5$/;"	m	class:libsnark::Fp6_3over2_model
Frobenius_coeffs_c2	libsnark/src/algebra/fields/fp6_3over2.hpp	/^Fp2_model<n, modulus> Fp6_3over2_model<n, modulus>::Frobenius_coeffs_c2[6];$/;"	m	class:libsnark::Fp6_3over2_model
Frobenius_map	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::Frobenius_map(unsigned long power) const$/;"	f	class:libsnark::Fp12_2over3over2_model
Frobenius_map	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::Frobenius_map(unsigned long power) const$/;"	f	class:libsnark::Fp2_model
Frobenius_map	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::Frobenius_map(unsigned long power) const$/;"	f	class:libsnark::Fp3_model
Frobenius_map	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::Frobenius_map(unsigned long power) const$/;"	f	class:libsnark::Fp6_3over2_model
FullStepRow	zcash/crypto/equihash.cpp	/^FullStepRow<WIDTH>::FullStepRow(const FullStepRow<W>& a, const FullStepRow<W>& b, size_t len, size_t lenIndices, int trim) :$/;"	f	class:FullStepRow
FullStepRow	zcash/crypto/equihash.cpp	/^FullStepRow<WIDTH>::FullStepRow(const unsigned char* hashIn, size_t hInLen,$/;"	f	class:FullStepRow
FullStepRow	zcash/crypto/equihash.h	/^    FullStepRow(const FullStepRow<WIDTH>& a) : StepRow<WIDTH> {a} { }$/;"	f	class:FullStepRow
FullStepRow	zcash/crypto/equihash.h	/^class FullStepRow : public StepRow<WIDTH>$/;"	c
G	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c	51;"	d	file:
G	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c	89;"	d	file:
G	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h	15;"	d
G1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h	21;"	d
G1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h	21;"	d
G1	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	31;"	d
G1_AVX2	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	12;"	d
G1_PREFIX_MASK	zcash/Proof.hpp	/^const unsigned char G1_PREFIX_MASK = 0x02;$/;"	m	namespace:libzcash
G1_one	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::G1_one;$/;"	m	class:libsnark::alt_bn128_G1	file:
G1_one	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    static alt_bn128_G1 G1_one;$/;"	m	class:libsnark::alt_bn128_G1
G1_precomp_type	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    typedef alt_bn128_G1_precomp G1_precomp_type;$/;"	t	class:libsnark::alt_bn128_pp
G1_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t G1_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_proof
G1_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t G1_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_proving_key
G1_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t G1_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_verification_key
G1_sparse_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t G1_sparse_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_proving_key
G1_type	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    typedef alt_bn128_G1 G1_type;$/;"	t	class:libsnark::alt_bn128_pp
G1_zero	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::G1_zero;$/;"	m	class:libsnark::alt_bn128_G1	file:
G1_zero	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    static alt_bn128_G1 G1_zero;$/;"	m	class:libsnark::alt_bn128_G1
G2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h	40;"	d
G2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h	40;"	d
G2	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	52;"	d
G2_AVX2	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	41;"	d
G2_PREFIX_MASK	zcash/Proof.hpp	/^const unsigned char G2_PREFIX_MASK = 0x0a;$/;"	m	namespace:libzcash
G2_one	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::G2_one;$/;"	m	class:libsnark::alt_bn128_G2	file:
G2_one	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    static alt_bn128_G2 G2_one;$/;"	m	class:libsnark::alt_bn128_G2
G2_precomp_type	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    typedef alt_bn128_G2_precomp G2_precomp_type;$/;"	t	class:libsnark::alt_bn128_pp
G2_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t G2_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_proof
G2_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t G2_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_proving_key
G2_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t G2_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_verification_key
G2_sparse_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t G2_sparse_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_proving_key
G2_type	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    typedef alt_bn128_G2 G2_type;$/;"	t	class:libsnark::alt_bn128_pp
G2_zero	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::G2_zero;$/;"	m	class:libsnark::alt_bn128_G2	file:
G2_zero	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    static alt_bn128_G2 G2_zero;$/;"	m	class:libsnark::alt_bn128_G2
GADGET_FROM_R1CS_HPP_	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.hpp	13;"	d
GADGET_FROM_R1CS_TCC_	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.tcc	15;"	d	file:
GADGET_HPP_	libsnark/src/gadgetlib1/gadget.hpp	9;"	d
GADGET_TCC_	libsnark/src/gadgetlib1/gadget.tcc	9;"	d	file:
GARBAGE_VALUE	libsodium/src/libsodium/sodium/utils.c	37;"	d	file:
GE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	60;"	d	file:
GETHEADERS_VERSION	zcash/version.h	/^static const int GETHEADERS_VERSION = 31800;$/;"	v
GREP	Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	demo/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/contrib/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/dist-build/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/msvc-scripts/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/src/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/src/libsodium/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/src/libsodium/include/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/test/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	libsodium/test/default/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	zcash/Makefile	/^GREP = \/bin\/grep$/;"	m
GREP	zcash/secp256k1/Makefile	/^GREP = \/bin\/grep$/;"	m
GT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	59;"	d	file:
GTESTDIR	libsnark/Makefile	/^	GTESTDIR=\/usr\/src\/gtest$/;"	m
GT_type	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    typedef alt_bn128_GT GT_type;$/;"	t	class:libsnark::alt_bn128_pp
GUARDED_BY	zcash/threadsafety.h	18;"	d
GUARDED_BY	zcash/threadsafety.h	37;"	d
GUARDED_VAR	zcash/threadsafety.h	19;"	d
GUARDED_VAR	zcash/threadsafety.h	38;"	d
GZIP_ENV	Makefile	/^GZIP_ENV = --best$/;"	m
GZIP_ENV	libsodium/Makefile	/^GZIP_ENV = --best$/;"	m
GZIP_ENV	zcash/secp256k1/Makefile	/^GZIP_ENV = --best$/;"	m
Gamma0	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^Gamma0 = lambda x: (S(x, 7) ^ S(x, 18) ^ R(x, 3))$/;"	v
Gamma1	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^Gamma1 = lambda x: (S(x, 17) ^ S(x, 19) ^ R(x, 10))$/;"	v
GenIdentity	zcash/random.cpp	/^int GenIdentity(int n)$/;"	f
Generate	zcash/JoinSplit.cpp	/^JoinSplit<NumInputs, NumOutputs>* JoinSplit<NumInputs, NumOutputs>::Generate()$/;"	f	class:libzcash::JoinSplit
GenerateHash	zcash/crypto/equihash.cpp	/^void GenerateHash(const eh_HashState& base_state, eh_index g,$/;"	f
Get	zcash/script/sigcache.cpp	/^    Get(const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubKey)$/;"	f	class:__anon24::CSignatureCache
Get	zcash/streams.h	/^    FILE* Get() const           { return file; }$/;"	f	class:CAutoFile
GetAndClear	zcash/streams.h	/^    void GetAndClear(CSerializeData &d) {$/;"	f	class:CBaseDataStream
GetArg	zcash/zcashutil.cpp	/^int64_t GetArg(const std::string& strArg, int64_t nDefault)$/;"	f
GetArg	zcash/zcashutil.cpp	/^std::string GetArg(const std::string& strArg, const std::string& strDefault)$/;"	f
GetBlockHeader	zcash/primitives/block.h	/^    CBlockHeader GetBlockHeader() const$/;"	f	class:CBlock
GetBlockTime	zcash/primitives/block.h	/^    int64_t GetBlockTime() const$/;"	f	class:CBlockHeader
GetBoolArg	zcash/zcashutil.cpp	/^bool GetBoolArg(const std::string& strArg, bool fDefault)$/;"	f
GetCScript	zcash/keystore.cpp	/^bool CBasicKeyStore::GetCScript(const CScriptID &hash, CScript& redeemScriptOut) const$/;"	f	class:CBasicKeyStore
GetCheapHash	zcash/uint256.h	/^    uint64_t GetCheapHash() const$/;"	f	class:uint256
GetCompact	zcash/arith_uint256.cpp	/^uint32_t arith_uint256::GetCompact(bool fNegative) const$/;"	f	class:arith_uint256
GetConfigFile	zcash/zcashutil.cpp	/^boost::filesystem::path GetConfigFile()$/;"	f
GetDataDir	zcash/zcashutil.cpp	/^const boost::filesystem::path &GetDataDir(bool fNetSpecific)$/;"	f
GetDefaultDataDir	zcash/zcashutil.cpp	/^boost::filesystem::path GetDefaultDataDir()$/;"	f
GetDustThreshold	zcash/primitives/transaction.h	/^    CAmount GetDustThreshold(const CFeeRate &minRelayTxFee) const$/;"	f	class:CTxOut
GetExportDir	zcash/zcashutil.cpp	/^const boost::filesystem::path GetExportDir()$/;"	f
GetFee	zcash/amount.cpp	/^CAmount CFeeRate::GetFee(size_t nSize) const$/;"	f	class:CFeeRate
GetFeePerK	zcash/amount.h	/^    CAmount GetFeePerK() const { return GetFee(1000); } \/\/ satoshis-per-1000-bytes$/;"	f	class:CFeeRate
GetHash	zcash/Address.cpp	/^uint256 PaymentAddress::GetHash() const {$/;"	f	class:libzcash::PaymentAddress
GetHash	zcash/hash.h	/^    uint256 GetHash() {$/;"	f	class:CHashWriter
GetHash	zcash/primitives/block.cpp	/^uint256 CBlockHeader::GetHash() const$/;"	f	class:CBlockHeader
GetHash	zcash/primitives/transaction.cpp	/^uint256 CMutableTransaction::GetHash() const$/;"	f	class:CMutableTransaction
GetHash	zcash/primitives/transaction.cpp	/^uint256 CTxOut::GetHash() const$/;"	f	class:CTxOut
GetHash	zcash/primitives/transaction.h	/^    const uint256& GetHash() const {$/;"	f	class:CTransaction
GetHash	zcash/pubkey.h	/^    uint256 GetHash() const$/;"	f	class:CPubKey
GetHash	zcash/uint256.cpp	/^uint64_t uint256::GetHash(const uint256& salt) const$/;"	f	class:uint256
GetHex	zcash/arith_uint256.cpp	/^std::string base_uint<BITS>::GetHex() const$/;"	f	class:base_uint
GetHex	zcash/crypto/equihash.h	/^    std::string GetHex(size_t len) { return HexStr(hash, hash+len); }$/;"	f	class:StepRow
GetHex	zcash/uint256.cpp	/^std::string base_blob<BITS>::GetHex() const$/;"	f	class:base_blob
GetID	zcash/pubkey.h	/^    CKeyID GetID() const$/;"	f	class:CPubKey
GetIndices	zcash/crypto/equihash.cpp	/^std::vector<unsigned char> FullStepRow<WIDTH>::GetIndices(size_t len, size_t lenIndices,$/;"	f	class:FullStepRow
GetIndicesFromMinimal	zcash/crypto/equihash.cpp	/^std::vector<eh_index> GetIndicesFromMinimal(std::vector<unsigned char> minimal,$/;"	f
GetJoinSplitValueIn	zcash/primitives/transaction.cpp	/^CAmount CTransaction::GetJoinSplitValueIn() const$/;"	f	class:CTransaction
GetKey	zcash/keystore.h	/^    bool GetKey(const CKeyID &address, CKey &keyOut) const$/;"	f	class:CBasicKeyStore
GetKeys	zcash/keystore.h	/^    void GetKeys(std::set<CKeyID> &setAddress) const$/;"	f	class:CBasicKeyStore
GetLastFoundersRewardBlockHeight	zcash/consensus/params.h	/^    int GetLastFoundersRewardBlockHeight() const {$/;"	f	struct:Consensus::Params
GetLen	zcash/pubkey.h	/^    unsigned int static GetLen(unsigned char chHeader)$/;"	f	class:CPubKey
GetLockedPageCount	zcash/support/pagelocker.h	/^    int GetLockedPageCount()$/;"	f	class:LockedPageManagerBase
GetLow64	zcash/arith_uint256.h	/^    uint64_t GetLow64() const$/;"	f	class:base_uint
GetMerkleBranch	zcash/primitives/block.cpp	/^std::vector<uint256> CBlock::GetMerkleBranch(int nIndex) const$/;"	f	class:CBlock
GetMinimalFromIndices	zcash/crypto/equihash.cpp	/^std::vector<unsigned char> GetMinimalFromIndices(std::vector<eh_index> indices,$/;"	f
GetNoteDecryptor	zcash/keystore.h	/^    bool GetNoteDecryptor(const libzcash::PaymentAddress &address, ZCNoteDecryption &decOut) const$/;"	f	class:CBasicKeyStore
GetNumCores	zcash/zcashutil.cpp	/^int GetNumCores()$/;"	f
GetOp	zcash/script/script.h	/^    bool GetOp(const_iterator& pc, opcodetype& opcodeRet) const$/;"	f	class:CScript
GetOp	zcash/script/script.h	/^    bool GetOp(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet) const$/;"	f	class:CScript
GetOp	zcash/script/script.h	/^    bool GetOp(iterator& pc, opcodetype& opcodeRet)$/;"	f	class:CScript
GetOp	zcash/script/script.h	/^    bool GetOp(iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>& vchRet)$/;"	f	class:CScript
GetOp2	zcash/script/script.h	/^    bool GetOp2(const_iterator& pc, opcodetype& opcodeRet, std::vector<unsigned char>* pvchRet) const$/;"	f	class:CScript
GetOpName	zcash/script/script.cpp	/^const char* GetOpName(opcodetype opcode)$/;"	f
GetPaymentAddresses	zcash/keystore.h	/^    void GetPaymentAddresses(std::set<libzcash::PaymentAddress> &setAddress) const$/;"	f	class:CBasicKeyStore
GetPerformanceCounter	zcash/random.cpp	/^static inline int64_t GetPerformanceCounter()$/;"	f	file:
GetPidFile	zcash/zcashutil.cpp	/^boost::filesystem::path GetPidFile()$/;"	f
GetPos	zcash/streams.h	/^    uint64_t GetPos() {$/;"	f	class:CBufferedFile
GetPrivKey	zcash/key.cpp	/^CPrivKey CKey::GetPrivKey() const {$/;"	f	class:CKey
GetPubKey	zcash/key.cpp	/^CPubKey CKey::GetPubKey() const {$/;"	f	class:CKey
GetPubKey	zcash/keystore.cpp	/^bool CKeyStore::GetPubKey(const CKeyID &address, CPubKey &vchPubKeyOut) const$/;"	f	class:CKeyStore
GetRand	zcash/random.cpp	/^uint64_t GetRand(uint64_t nMax)$/;"	f
GetRandBytes	zcash/random.cpp	/^void GetRandBytes(unsigned char* buf, size_t num)$/;"	f
GetRandHash	zcash/random.cpp	/^uint256 GetRandHash()$/;"	f
GetRandInt	zcash/random.cpp	/^int GetRandInt(int nMax)$/;"	f
GetRejectCode	zcash/consensus/validation.h	/^    virtual unsigned char GetRejectCode() const { return chRejectCode; }$/;"	f	class:CValidationState
GetRejectReason	zcash/consensus/validation.h	/^    virtual std::string GetRejectReason() const { return strRejectReason; }$/;"	f	class:CValidationState
GetScriptForDestination	zcash/script/standard.cpp	/^CScript GetScriptForDestination(const CTxDestination& dest)$/;"	f
GetScriptForMultisig	zcash/script/standard.cpp	/^CScript GetScriptForMultisig(int nRequired, const std::vector<CPubKey>& keys)$/;"	f
GetSerializeSize	zcash/pubkey.h	/^    unsigned int GetSerializeSize(int nType, int nVersion) const$/;"	f	class:CPubKey
GetSerializeSize	zcash/serialize.h	/^    unsigned int GetSerializeSize(int, int) const {$/;"	f	class:CVarInt
GetSerializeSize	zcash/serialize.h	/^    unsigned int GetSerializeSize(int, int=0) const$/;"	f	class:CFlatData
GetSerializeSize	zcash/serialize.h	/^    unsigned int GetSerializeSize(int, int=0) const$/;"	f	class:LimitedString
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(bool a, int, int=0)                          { return sizeof(char); }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(char a,      int, int=0) { return 1; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(const CScript& v, int nType, int nVersion)$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(const T& a, long nType, int nVersion)$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(const std::vector<T, A>& v, int nType, int nVersion)$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(double a,    int, int=0) { return 8; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(float a,     int, int=0) { return 4; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(int16_t a,   int, int=0) { return 2; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(int32_t a,   int, int=0) { return 4; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(int64_t a,   int, int=0) { return 8; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(int8_t a,    int, int=0) { return 1; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(uint16_t a,  int, int=0) { return 2; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(uint32_t a,  int, int=0) { return 4; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(uint64_t a,  int, int=0) { return 8; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^inline unsigned int GetSerializeSize(uint8_t a,   int, int=0) { return 1; }$/;"	f
GetSerializeSize	zcash/serialize.h	/^unsigned int GetSerializeSize(const boost::array<T, N> &item, int nType, int nVersion)$/;"	f
GetSerializeSize	zcash/serialize.h	/^unsigned int GetSerializeSize(const boost::optional<T> &item, int nType, int nVersion)$/;"	f
GetSerializeSize	zcash/serialize.h	/^unsigned int GetSerializeSize(const std::basic_string<C>& str, int, int)$/;"	f
GetSerializeSize	zcash/serialize.h	/^unsigned int GetSerializeSize(const std::list<T, A>& l, int nType, int nVersion)$/;"	f
GetSerializeSize	zcash/serialize.h	/^unsigned int GetSerializeSize(const std::map<K, T, Pred, A>& m, int nType, int nVersion)$/;"	f
GetSerializeSize	zcash/serialize.h	/^unsigned int GetSerializeSize(const std::pair<K, T>& item, int nType, int nVersion)$/;"	f
GetSerializeSize	zcash/serialize.h	/^unsigned int GetSerializeSize(const std::set<K, Pred, A>& m, int nType, int nVersion)$/;"	f
GetSerializeSize	zcash/streams.h	/^    unsigned int GetSerializeSize(const T& obj)$/;"	f	class:CAutoFile
GetSerializeSize	zcash/streams.h	/^    unsigned int GetSerializeSize(const T& obj)$/;"	f	class:CBaseDataStream
GetSerializeSize	zcash/uint256.h	/^    unsigned int GetSerializeSize(int nType, int nVersion) const$/;"	f	class:base_blob
GetSerializeSize_impl	zcash/serialize.h	/^unsigned int GetSerializeSize_impl(const std::vector<T, A>& v, int nType, int nVersion, const V&)$/;"	f
GetSerializeSize_impl	zcash/serialize.h	/^unsigned int GetSerializeSize_impl(const std::vector<T, A>& v, int nType, int nVersion, const unsigned char&)$/;"	f
GetSigOpCount	zcash/script/script.cpp	/^unsigned int CScript::GetSigOpCount(bool fAccurate) const$/;"	f	class:CScript
GetSigOpCount	zcash/script/script.cpp	/^unsigned int CScript::GetSigOpCount(const CScript& scriptSig) const$/;"	f	class:CScript
GetSizeOfCompactSize	zcash/serialize.h	/^inline unsigned int GetSizeOfCompactSize(uint64_t nSize)$/;"	f
GetSizeOfVarInt	zcash/serialize.h	/^inline unsigned int GetSizeOfVarInt(I n)$/;"	f
GetSpecialFolderPath	zcash/zcashutil.cpp	/^boost::filesystem::path GetSpecialFolderPath(int nFolder, bool fCreate)$/;"	f
GetSpendingKey	zcash/keystore.h	/^    bool GetSpendingKey(const libzcash::PaymentAddress &address, libzcash::SpendingKey &skOut) const$/;"	f	class:CBasicKeyStore
GetSystemPageSize	zcash/support/pagelocker.cpp	/^static inline size_t GetSystemPageSize()$/;"	f	file:
GetTempPath	zcash/zcashutil.cpp	/^boost::filesystem::path GetTempPath() {$/;"	f
GetTime	zcash/utiltime.cpp	/^int64_t GetTime()$/;"	f
GetTimeMicros	zcash/utiltime.cpp	/^int64_t GetTimeMicros()$/;"	f
GetTimeMillis	zcash/utiltime.cpp	/^int64_t GetTimeMillis()$/;"	f
GetTruncatedIndices	zcash/crypto/equihash.cpp	/^std::shared_ptr<eh_trunc> TruncatedStepRow<WIDTH>::GetTruncatedIndices(size_t len, size_t lenIndices) const$/;"	f	class:TruncatedStepRow
GetTxnOutputType	zcash/script/standard.cpp	/^const char* GetTxnOutputType(txnouttype t)$/;"	f
GetType	zcash/streams.h	/^    int GetType()                { return nType; }$/;"	f	class:CAutoFile
GetType	zcash/streams.h	/^    int GetType()                { return nType; }$/;"	f	class:CBaseDataStream
GetValueOut	zcash/primitives/transaction.cpp	/^CAmount CTransaction::GetValueOut() const$/;"	f	class:CTransaction
GetVersion	zcash/streams.h	/^    int GetVersion()             { return nVersion; }$/;"	f	class:CAutoFile
GetVersion	zcash/streams.h	/^    int GetVersion()             { return nVersion; }$/;"	f	class:CBaseDataStream
H	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^    CRYPTO_ALIGN(16) unsigned char H[16];$/;"	m	struct:context	file:
HASH_BLOCK_SIZE	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	52;"	d	file:
HASH_BYTES	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^HASH_BYTES = HASH_LEN \/\/ 8$/;"	v
HASH_IO_HPP_	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.hpp	8;"	d
HASH_IO_TCC_	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.tcc	8;"	d	file:
HASH_LEN	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^HASH_LEN = 256$/;"	v
HAVE_ALIGNED_MALLOC	libsodium/src/libsodium/sodium/utils.c	47;"	d	file:
HAVE_AMD64_ASM_V	libsodium/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/contrib/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/dist-build/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/msvc-scripts/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/src/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/src/libsodium/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/src/libsodium/include/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/test/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_AMD64_ASM_V	libsodium/test/default/Makefile	/^HAVE_AMD64_ASM_V = 1$/;"	m
HAVE_ARPA_INET_H	config.h	11;"	d
HAVE_AVX2INTRIN_H	libsodium/src/libsodium/include/sodium/private/common.h	211;"	d
HAVE_AVXINTRIN_H	libsodium/src/libsodium/include/sodium/private/common.h	206;"	d
HAVE_AVX_ASM_V	libsodium/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/contrib/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/dist-build/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/msvc-scripts/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/src/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/src/libsodium/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/src/libsodium/include/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/test/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_AVX_ASM_V	libsodium/test/default/Makefile	/^HAVE_AVX_ASM_V = 1$/;"	m
HAVE_BOOST	config.h	14;"	d
HAVE_BOOST_CHRONO	config.h	17;"	d
HAVE_BOOST_FILESYSTEM	config.h	20;"	d
HAVE_BOOST_PROGRAM_OPTIONS	config.h	23;"	d
HAVE_BOOST_SYSTEM	config.h	26;"	d
HAVE_BOOST_THREAD	config.h	29;"	d
HAVE_BUILTIN_EXPECT	zcash/secp256k1/src/libsecp256k1-config.h	24;"	d
HAVE_BYTESWAP_H	config.h	32;"	d
HAVE_CLOCK_GETTIME	config.h	35;"	d
HAVE_CPUID_V	libsodium/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/contrib/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/dist-build/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/msvc-scripts/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/src/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/src/libsodium/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/src/libsodium/include/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/test/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_CPUID_V	libsodium/test/default/Makefile	/^HAVE_CPUID_V = 1$/;"	m
HAVE_DECL_BE16TOH	config.h	39;"	d
HAVE_DECL_BE32TOH	config.h	43;"	d
HAVE_DECL_BE64TOH	config.h	47;"	d
HAVE_DECL_BSWAP_16	config.h	51;"	d
HAVE_DECL_BSWAP_32	config.h	55;"	d
HAVE_DECL_BSWAP_64	config.h	59;"	d
HAVE_DECL_HTOBE16	config.h	63;"	d
HAVE_DECL_HTOBE32	config.h	67;"	d
HAVE_DECL_HTOBE64	config.h	71;"	d
HAVE_DECL_HTOLE16	config.h	75;"	d
HAVE_DECL_HTOLE32	config.h	79;"	d
HAVE_DECL_HTOLE64	config.h	83;"	d
HAVE_DECL_LE16TOH	config.h	87;"	d
HAVE_DECL_LE32TOH	config.h	91;"	d
HAVE_DECL_LE64TOH	config.h	95;"	d
HAVE_DECL_STRNLEN	config.h	99;"	d
HAVE_DLFCN_H	zcash/secp256k1/src/libsecp256k1-config.h	27;"	d
HAVE_EMMINTRIN_H	libsodium/src/libsodium/include/sodium/private/common.h	202;"	d
HAVE_ENDIAN_H	config.h	102;"	d
HAVE_FCNTL_H	config.h	105;"	d
HAVE_GETADDRINFO_A	config.h	108;"	d
HAVE_GETTIMEOFDAY	config.h	111;"	d
HAVE_INET_PTON	config.h	114;"	d
HAVE_INTRIN_H	libsodium/src/libsodium/include/sodium/private/common.h	200;"	d
HAVE_INTTYPES_H	config.h	117;"	d
HAVE_INTTYPES_H	zcash/secp256k1/src/libsecp256k1-config.h	30;"	d
HAVE_LIBCRYPTO	config.h	120;"	d
HAVE_LIBCRYPTO	zcash/secp256k1/src/libsecp256k1-config.h	33;"	d
HAVE_LIBDL	config.h	123;"	d
HAVE_LIBGMP	config.h	126;"	d
HAVE_LIBGMP	zcash/secp256k1/src/libsecp256k1-config.h	36;"	d
HAVE_LIBPTHREAD	config.h	129;"	d
HAVE_LIBRT	config.h	132;"	d
HAVE_LIMITS_H	config.h	135;"	d
HAVE_MALLOC_H	config.h	138;"	d
HAVE_MEMCHR	config.h	141;"	d
HAVE_MEMMOVE	config.h	144;"	d
HAVE_MEMORY_H	config.h	147;"	d
HAVE_MEMORY_H	zcash/secp256k1/src/libsecp256k1-config.h	39;"	d
HAVE_MEMSET	config.h	150;"	d
HAVE_MMINTRIN_H	libsodium/src/libsodium/include/sodium/private/common.h	201;"	d
HAVE_MPROTECT	libsodium/src/libsodium/sodium/utils.c	51;"	d	file:
HAVE_MUNMAP	config.h	153;"	d
HAVE_NETDB_H	config.h	156;"	d
HAVE_NETINET_IN_H	config.h	159;"	d
HAVE_PAGE_PROTECTION	libsodium/src/libsodium/sodium/utils.c	55;"	d	file:
HAVE_PMMINTRIN_H	libsodium/src/libsodium/include/sodium/private/common.h	203;"	d
HAVE_POW	config.h	162;"	d
HAVE_SAFE_ARC4RANDOM	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	55;"	d	file:
HAVE_SAFE_ARC4RANDOM	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	48;"	d	file:
HAVE_SMMINTRIN_H	libsodium/src/libsodium/include/sodium/private/common.h	205;"	d
HAVE_SQRT	config.h	165;"	d
HAVE_STDDEF_H	config.h	168;"	d
HAVE_STDINT_H	config.h	171;"	d
HAVE_STDINT_H	zcash/secp256k1/src/libsecp256k1-config.h	42;"	d
HAVE_STDIO_H	config.h	174;"	d
HAVE_STDLIB_H	config.h	177;"	d
HAVE_STDLIB_H	zcash/secp256k1/src/libsecp256k1-config.h	45;"	d
HAVE_STRINGS_H	config.h	180;"	d
HAVE_STRINGS_H	zcash/secp256k1/src/libsecp256k1-config.h	48;"	d
HAVE_STRING_H	config.h	183;"	d
HAVE_STRING_H	zcash/secp256k1/src/libsecp256k1-config.h	51;"	d
HAVE_STRTOL	config.h	186;"	d
HAVE_STRTOUL	config.h	189;"	d
HAVE_SYS_PRCTL_H	config.h	195;"	d
HAVE_SYS_SELECT_H	config.h	198;"	d
HAVE_SYS_SOCKET_H	config.h	201;"	d
HAVE_SYS_STAT_H	config.h	204;"	d
HAVE_SYS_STAT_H	zcash/secp256k1/src/libsecp256k1-config.h	54;"	d
HAVE_SYS_TIME_H	config.h	207;"	d
HAVE_SYS_TYPES_H	config.h	210;"	d
HAVE_SYS_TYPES_H	zcash/secp256k1/src/libsecp256k1-config.h	57;"	d
HAVE_TI_MODE_V	libsodium/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/contrib/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/dist-build/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/msvc-scripts/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/src/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/src/libsodium/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/src/libsodium/include/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/test/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TI_MODE_V	libsodium/test/default/Makefile	/^HAVE_TI_MODE_V = 1$/;"	m
HAVE_TMMINTRIN_H	libsodium/src/libsodium/include/sodium/private/common.h	204;"	d
HAVE_UNISTD_H	config.h	213;"	d
HAVE_UNISTD_H	zcash/secp256k1/src/libsecp256k1-config.h	60;"	d
HAVE_WMMINTRIN_H	libsodium/src/libsodium/include/sodium/private/common.h	208;"	d
HAVE_WORKING_BOOST_SLEEP_FOR	config.h	219;"	d
HAVE___INT128	zcash/secp256k1/src/libsecp256k1-config.h	63;"	d
HChaCha20TV	libsodium/test/default/xchacha20.c	/^} HChaCha20TV;$/;"	t	typeref:struct:HChaCha20TV_	file:
HChaCha20TV_	libsodium/test/default/xchacha20.c	/^typedef struct HChaCha20TV_ {$/;"	s	file:
HEADERS	libsodium/src/libsodium/Makefile	/^HEADERS = $(noinst_HEADERS)$/;"	m
HEADERS	libsodium/src/libsodium/include/Makefile	/^HEADERS = $(nobase_include_HEADERS) $(nobase_nodist_include_HEADERS)$/;"	m
HEADERS	zcash/secp256k1/Makefile	/^HEADERS = $(include_HEADERS) $(noinst_HEADERS)$/;"	m
HEADERS_DEST	libsnark/Makefile	/^HEADERS_DEST=$(patsubst src\/%,$(PREFIX)\/include\/libsnark\/%,$(HEADERS_SRC))$/;"	m
HEADERS_SRC	libsnark/Makefile	/^HEADERS_SRC=$(shell find src -name '*.hpp' -o -name '*.tcc')$/;"	m
HEADER_SIZE	zcash/primitives/block.h	/^    static const size_t HEADER_SIZE=4+32+32+32+4+4+32; \/\/ excluding Equihash solution$/;"	m	class:CBlockHeader
H_bytes	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^def H_bytes(x):$/;"	f
H_query	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G1_vector<ppT> H_query;$/;"	m	class:libsnark::r1cs_ppzksnark_proving_key
HasCollision	zcash/crypto/equihash.cpp	/^bool HasCollision(StepRow<WIDTH>& a, StepRow<WIDTH>& b, int l)$/;"	f
Hash	zcash/hash.h	/^inline uint256 Hash(const T1 p1begin, const T1 p1end,$/;"	f
Hash	zcash/hash.h	/^inline uint256 Hash(const T1 pbegin, const T1 pend)$/;"	f
Hash160	zcash/hash.h	/^inline uint160 Hash160(const T1 pbegin, const T1 pend)$/;"	f
Hash160	zcash/hash.h	/^inline uint160 Hash160(const std::vector<unsigned char>& vch)$/;"	f
HashFinal	zcash/uint256.cpp	/^static void inline HashFinal(uint32_t& a, uint32_t& b, uint32_t& c)$/;"	f	file:
HashMix	zcash/uint256.cpp	/^static void inline HashMix(uint32_t& a, uint32_t& b, uint32_t& c)$/;"	f	file:
HaveCScript	zcash/keystore.cpp	/^bool CBasicKeyStore::HaveCScript(const CScriptID& hash) const$/;"	f	class:CBasicKeyStore
HaveKey	zcash/keystore.h	/^    bool HaveKey(const CKeyID &address) const$/;"	f	class:CBasicKeyStore
HaveSpendingKey	zcash/keystore.h	/^    bool HaveSpendingKey(const libzcash::PaymentAddress &address) const$/;"	f	class:CBasicKeyStore
HaveWatchOnly	zcash/keystore.cpp	/^bool CBasicKeyStore::HaveWatchOnly() const$/;"	f	class:CBasicKeyStore
HaveWatchOnly	zcash/keystore.cpp	/^bool CBasicKeyStore::HaveWatchOnly(const CScript &dest) const$/;"	f	class:CBasicKeyStore
HelpMessageGroup	zcash/zcashutil.cpp	/^std::string HelpMessageGroup(const std::string &message) {$/;"	f
HelpMessageOpt	zcash/zcashutil.cpp	/^std::string HelpMessageOpt(const std::string &option, const std::string &message) {$/;"	f
HexDigit	zcash/utilstrencodings.cpp	/^signed char HexDigit(char c)$/;"	f
HexStr	zcash/utilstrencodings.h	/^inline std::string HexStr(const T& vch, bool fSpaces=false)$/;"	f
HexStr	zcash/utilstrencodings.h	/^std::string HexStr(const T itbegin, const T itend, bool fSpaces=false)$/;"	f
Histogram	zcash/support/pagelocker.h	/^    typedef std::map<size_t, int> Histogram;$/;"	t	class:LockedPageManagerBase
Ht	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::vector<FieldT> At, Bt, Ct, Ht;$/;"	m	class:libsnark::qap_instance_evaluation
I64FORMAT	zcash/secp256k1/src/util.h	100;"	d
I64FORMAT	zcash/secp256k1/src/util.h	97;"	d
I64uFORMAT	zcash/secp256k1/src/util.h	101;"	d
I64uFORMAT	zcash/secp256k1/src/util.h	98;"	d
INCLUDE	demo/Makefile	/^INCLUDE = -I$(top_srcdir)\/libsnark\/src -I$(top_srcdir)\/libsnark\/depinst\/include -I$(top_srcdir)\/libsodium\/src\/libsodium\/include -I$(top_srcdir)\/zcash\/secp256k1\/include -I$(top_srcdir)\/zcash$/;"	m
INCLUDE	zcash/Makefile	/^INCLUDE = -I$(top_srcdir)\/libsnark\/src -I$(top_srcdir)\/libsnark\/depinst\/include -I$(top_srcdir)\/libsodium\/src\/libsodium\/include -I$(top_srcdir)\/zcash\/secp256k1\/include -I$(top_srcdir)\/zcash -I$(top_srcdir)$/;"	m
INCREMENTAL_MERKLE_TREE_DEPTH	zcash/Zcash.h	6;"	d
INCREMENTAL_MERKLE_TREE_DEPTH_TESTING	zcash/Zcash.h	7;"	d
INIT_PROTO_VERSION	zcash/version.h	/^static const int INIT_PROTO_VERSION = 209;$/;"	v
INSTALL	Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	demo/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/contrib/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/dist-build/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/msvc-scripts/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/src/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/src/libsodium/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/src/libsodium/include/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/test/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	libsodium/test/default/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	zcash/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL	zcash/secp256k1/Makefile	/^INSTALL = \/usr\/bin\/install -c$/;"	m
INSTALL_DATA	Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	demo/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/contrib/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/dist-build/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/msvc-scripts/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/src/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/src/libsodium/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/src/libsodium/include/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/test/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	libsodium/test/default/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	zcash/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_DATA	zcash/secp256k1/Makefile	/^INSTALL_DATA = ${INSTALL} -m 644$/;"	m
INSTALL_HEADER	Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	demo/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/contrib/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/dist-build/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/msvc-scripts/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/src/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/src/libsodium/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/src/libsodium/include/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/test/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	libsodium/test/default/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	zcash/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_HEADER	zcash/secp256k1/Makefile	/^INSTALL_HEADER = $(INSTALL_DATA)$/;"	m
INSTALL_LIBS	libsnark/Makefile	/^INSTALL_LIBS = $(LIB_FILE)$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	demo/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/contrib/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/dist-build/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/msvc-scripts/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/src/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/src/libsodium/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/src/libsodium/include/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/test/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	libsodium/test/default/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	zcash/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_PROGRAM	zcash/secp256k1/Makefile	/^INSTALL_PROGRAM = ${INSTALL}$/;"	m
INSTALL_SCRIPT	Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	demo/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/contrib/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/dist-build/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/msvc-scripts/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/src/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/src/libsodium/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/src/libsodium/include/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/test/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	libsodium/test/default/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	zcash/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_SCRIPT	zcash/secp256k1/Makefile	/^INSTALL_SCRIPT = ${INSTALL}$/;"	m
INSTALL_STRIP_PROGRAM	Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	demo/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/contrib/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/dist-build/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/msvc-scripts/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/src/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/src/libsodium/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/src/libsodium/include/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/test/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	libsodium/test/default/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	zcash/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INSTALL_STRIP_PROGRAM	zcash/secp256k1/Makefile	/^INSTALL_STRIP_PROGRAM = $(install_sh) -c -s$/;"	m
INVALID_SOCKET	zcash/compat.h	63;"	d
IN_SANDY2X	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/sandy2x.S	/^#define IN_SANDY2X$/;"	d
ISODATE	libsodium/Makefile	/^ISODATE = 2017-07-16$/;"	m
ISODATE	libsodium/contrib/Makefile	/^ISODATE = 2017-07-16$/;"	m
ISODATE	libsodium/dist-build/Makefile	/^ISODATE = 2017-07-16$/;"	m
ISODATE	libsodium/msvc-scripts/Makefile	/^ISODATE = 2017-07-16$/;"	m
ISODATE	libsodium/src/Makefile	/^ISODATE = 2017-07-16$/;"	m
ISODATE	libsodium/src/libsodium/Makefile	/^ISODATE = 2017-07-16$/;"	m
ISODATE	libsodium/src/libsodium/include/Makefile	/^ISODATE = 2017-07-16$/;"	m
ISODATE	libsodium/test/Makefile	/^ISODATE = 2017-07-16$/;"	m
ISODATE	libsodium/test/default/Makefile	/^ISODATE = 2017-07-16$/;"	m
InBasisChange	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	553;"	d
IncrementalMerkleTree	zcash/IncrementalMerkleTree.hpp	/^    IncrementalMerkleTree() { }$/;"	f	class:libzcash::IncrementalMerkleTree
IncrementalMerkleTree	zcash/IncrementalMerkleTree.hpp	/^class IncrementalMerkleTree {$/;"	c	namespace:libzcash
IncrementalWitness	zcash/IncrementalMerkleTree.hpp	/^    IncrementalWitness() {}$/;"	f	class:libzcash::IncrementalWitness
IncrementalWitness	zcash/IncrementalMerkleTree.hpp	/^    IncrementalWitness(IncrementalMerkleTree<Depth, Hash> tree) : tree(tree) {}$/;"	f	class:libzcash::IncrementalWitness
IncrementalWitness	zcash/IncrementalMerkleTree.hpp	/^class IncrementalWitness {$/;"	c	namespace:libzcash
IndicesBefore	zcash/crypto/equihash.h	/^    inline bool IndicesBefore(const FullStepRow<WIDTH>& a, size_t len, size_t lenIndices) const { return memcmp(hash+len, a.hash+len, lenIndices) < 0; }$/;"	f	class:FullStepRow
IndicesBefore	zcash/crypto/equihash.h	/^    inline bool IndicesBefore(const TruncatedStepRow<WIDTH>& a, size_t len, size_t lenIndices) const { return memcmp(hash+len, a.hash+len, lenIndices) < 0; }$/;"	f	class:TruncatedStepRow
Init	zcash/streams.h	/^    void Init(int nTypeIn, int nVersionIn)$/;"	f	class:CBaseDataStream
InitialiseState	zcash/crypto/equihash.cpp	/^int Equihash<N,K>::InitialiseState(eh_HashState& base_state)$/;"	f	class:Equihash
Initialize	zcash/crypto/ripemd160.cpp	/^void inline Initialize(uint32_t* s)$/;"	f	namespace:__anon28::ripemd160
Initialize	zcash/crypto/sha1.cpp	/^void inline Initialize(uint32_t* s)$/;"	f	namespace:__anon30::sha1
Initialize	zcash/crypto/sha256.cpp	/^void inline Initialize(uint32_t* s)$/;"	f	namespace:__anon29::sha256
Initialize	zcash/crypto/sha512.cpp	/^void inline Initialize(uint64_t* s)$/;"	f	namespace:__anon31::sha512
Instance	zcash/support/pagelocker.h	/^    static LockedPageManager& Instance()$/;"	f	class:LockedPageManager
InterpretNegativeSetting	zcash/zcashutil.cpp	/^static void InterpretNegativeSetting(string name, map<string, string>& mapSettingsRet)$/;"	f	file:
Inv_GF16	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	670;"	d
Inv_GF256	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	686;"	d
Invalid	zcash/consensus/validation.h	/^    virtual bool Invalid(bool ret = false,$/;"	f	class:CValidationState
Invalidate	zcash/pubkey.h	/^    void Invalidate()$/;"	f	class:CPubKey
IsCoinBase	zcash/primitives/transaction.h	/^    bool IsCoinBase() const$/;"	f	class:CTransaction
IsCompressed	zcash/key.h	/^    bool IsCompressed() const { return fCompressed; }$/;"	f	class:CKey
IsCompressed	zcash/pubkey.h	/^    bool IsCompressed() const$/;"	f	class:CPubKey
IsCompressedOrUncompressedPubKey	zcash/script/interpreter.cpp	/^bool static IsCompressedOrUncompressedPubKey(const valtype &vchPubKey) {$/;"	f	file:
IsDefinedHashtypeSignature	zcash/script/interpreter.cpp	/^bool static IsDefinedHashtypeSignature(const valtype &vchSig) {$/;"	f	file:
IsDust	zcash/primitives/transaction.h	/^    bool IsDust(const CFeeRate &minRelayTxFee) const$/;"	f	class:CTxOut
IsError	zcash/consensus/validation.h	/^    virtual bool IsError() const {$/;"	f	class:CValidationState
IsFinal	zcash/primitives/transaction.h	/^    bool IsFinal() const$/;"	f	class:CTxIn
IsFullyValid	zcash/pubkey.cpp	/^bool CPubKey::IsFullyValid() const {$/;"	f	class:CPubKey
IsHex	zcash/utilstrencodings.cpp	/^bool IsHex(const string& str)$/;"	f
IsInvalid	zcash/consensus/validation.h	/^    virtual bool IsInvalid() const {$/;"	f	class:CValidationState
IsInvalid	zcash/consensus/validation.h	/^    virtual bool IsInvalid(int &nDoSOut) const {$/;"	f	class:CValidationState
IsLowDERSignature	zcash/script/interpreter.cpp	/^bool static IsLowDERSignature(const valtype &vchSig, ScriptError* serror) {$/;"	f	file:
IsNull	zcash/primitives/block.h	/^    bool IsNull() const$/;"	f	class:CBlockHeader
IsNull	zcash/primitives/block.h	/^    bool IsNull() const$/;"	f	struct:CBlockLocator
IsNull	zcash/primitives/transaction.h	/^    bool IsNull() const { return (hash.IsNull() && n == (uint32_t) -1); }$/;"	f	class:COutPoint
IsNull	zcash/primitives/transaction.h	/^    bool IsNull() const {$/;"	f	class:CTransaction
IsNull	zcash/primitives/transaction.h	/^    bool IsNull() const$/;"	f	class:CTxOut
IsNull	zcash/streams.h	/^    bool IsNull() const         { return (file == NULL); }$/;"	f	class:CAutoFile
IsNull	zcash/uint256.h	/^    bool IsNull() const$/;"	f	class:base_blob
IsPayToScriptHash	zcash/script/script.cpp	/^bool CScript::IsPayToScriptHash() const$/;"	f	class:CScript
IsProbablyDuplicate	zcash/crypto/equihash.tcc	/^bool IsProbablyDuplicate(std::shared_ptr<eh_trunc> indices, size_t lenIndices)$/;"	f
IsPushOnly	zcash/script/script.cpp	/^bool CScript::IsPushOnly() const$/;"	f	class:CScript
IsSelectableSocket	zcash/compat.h	/^bool static inline IsSelectableSocket(SOCKET s) {$/;"	f
IsStandard	zcash/script/standard.cpp	/^bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType)$/;"	f
IsSwitchChar	zcash/zcashutil.h	/^inline bool IsSwitchChar(char c)$/;"	f
IsUnspendable	zcash/script/script.h	/^    bool IsUnspendable() const$/;"	f	class:CScript
IsValid	zcash/consensus/validation.h	/^    virtual bool IsValid() const {$/;"	f	class:CValidationState
IsValid	zcash/key.h	/^    bool IsValid() const { return fValid; }$/;"	f	class:CKey
IsValid	zcash/pubkey.h	/^    bool IsValid() const$/;"	f	class:CPubKey
IsValidBranch	zcash/crypto/equihash.tcc	/^bool IsValidBranch(const FullStepRow<WIDTH>& a, const size_t len, const unsigned int ilen, const eh_trunc t)$/;"	f
IsValidSignatureEncoding	zcash/script/interpreter.cpp	/^bool static IsValidSignatureEncoding(const std::vector<unsigned char> &sig) {$/;"	f	file:
IsValidSolution	zcash/crypto/equihash.cpp	/^bool Equihash<N,K>::IsValidSolution(const eh_HashState& base_state, std::vector<unsigned char> soln)$/;"	f	class:Equihash
IsZero	zcash/crypto/equihash.cpp	/^bool StepRow<WIDTH>::IsZero(size_t len)$/;"	f	class:StepRow
JAVAORG	zcash/secp256k1/Makefile	/^JAVAORG = org\/bitcoin$/;"	m
JAVAROOT	zcash/secp256k1/Makefile	/^JAVAROOT = src\/java$/;"	m
JAVA_FILES	zcash/secp256k1/Makefile	/^JAVA_FILES = \\$/;"	m
JAVA_GUAVA	zcash/secp256k1/Makefile	/^JAVA_GUAVA = $(srcdir)\/$(JAVAROOT)\/guava\/guava-18.0.jar$/;"	m
JNI_INCLUDES	zcash/secp256k1/Makefile	/^JNI_INCLUDES = $/;"	m
JNI_LIB	zcash/secp256k1/Makefile	/^JNI_LIB = $/;"	m
JSDescription	zcash/primitives/transaction.cpp	/^JSDescription::JSDescription(ZCJoinSplit& params,$/;"	f	class:JSDescription
JSDescription	zcash/primitives/transaction.h	/^    JSDescription(): vpub_old(0), vpub_new(0) { }$/;"	f	class:JSDescription
JSDescription	zcash/primitives/transaction.h	/^class JSDescription$/;"	c
JSInput	zcash/JoinSplit.cpp	/^JSInput::JSInput() : witness(ZCIncrementalMerkleTree().witness()),$/;"	f	class:libzcash::JSInput
JSInput	zcash/JoinSplit.hpp	/^    JSInput(ZCIncrementalWitness witness,$/;"	f	class:libzcash::JSInput
JSInput	zcash/JoinSplit.hpp	/^class JSInput {$/;"	c	namespace:libzcash
JSOutput	zcash/JoinSplit.cpp	/^JSOutput::JSOutput() : addr(uint256(), uint256()), value(0) {$/;"	f	class:libzcash::JSOutput
JSOutput	zcash/JoinSplit.hpp	/^    JSOutput(PaymentAddress addr, uint64_t value) : addr(addr), value(value) { }$/;"	f	class:libzcash::JSOutput
JSOutput	zcash/JoinSplit.hpp	/^class JSOutput {$/;"	c	namespace:libzcash
Java_org_bitcoin_NativeSecp256k1_secp256k1_1context_1randomize	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jint JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1context_1randomize$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ctx_1clone	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jlong JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ctx_1clone$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1destroy_1context	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API void JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1destroy_1context$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1pubkey_1create	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1pubkey_1create$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1seckey_1verify	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jint JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ec_1seckey_1verify$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdh	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdh$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1pubkey_1combine	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jlong JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1pubkey_1combine$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1sign	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1sign$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1verify	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jint JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1ecdsa_1verify$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1add	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1add$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1mul	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1privkey_1tweak_1mul$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1add	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1add$/;"	f
Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1mul	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c	/^SECP256K1_API jobjectArray JNICALL Java_org_bitcoin_NativeSecp256k1_secp256k1_1pubkey_1tweak_1mul$/;"	f
Java_org_bitcoin_Secp256k1Context_secp256k1_1init_1context	zcash/secp256k1/src/java/org_bitcoin_Secp256k1Context.c	/^SECP256K1_API jlong JNICALL Java_org_bitcoin_Secp256k1Context_secp256k1_1init_1context$/;"	f
JoinSplit	zcash/JoinSplit.hpp	/^    JoinSplit() {}$/;"	f	class:libzcash::JoinSplit
JoinSplit	zcash/JoinSplit.hpp	/^class JoinSplit {$/;"	c	namespace:libzcash
JoinSplitCircuit	zcash/JoinSplit.cpp	/^    JoinSplitCircuit() {}$/;"	f	class:libzcash::JoinSplitCircuit
JoinSplitCircuit	zcash/JoinSplit.cpp	/^class JoinSplitCircuit : public JoinSplit<NumInputs, NumOutputs> {$/;"	c	namespace:libzcash	file:
K	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    long K;$/;"	m	class:libsnark::sha256_round_function_gadget
KC_MULTIEXP_HPP_	libsnark/src/algebra/scalar_multiplication/kc_multiexp.hpp	9;"	d
KC_MULTIEXP_TCC_	libsnark/src/algebra/scalar_multiplication/kc_multiexp.tcc	9;"	d	file:
KDF	zcash/NoteEncryption.cpp	/^void KDF(unsigned char K[NOTEENCRYPTION_CIPHER_KEYSIZE],$/;"	f
KNOWLEDGE_COMMITMENT_HPP_	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.hpp	15;"	d
KNOWLEDGE_COMMITMENT_TCC_	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	17;"	d	file:
K_query	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G1_vector<ppT> K_query;$/;"	m	class:libsnark::r1cs_ppzksnark_proving_key
KeyMap	zcash/keystore.h	/^typedef std::map<CKeyID, CKey> KeyMap;$/;"	t
KeyStore	zcash/script/sign.h	/^    const CKeyStore& KeyStore() const { return *keystore; };$/;"	f	class:BaseSignatureCreator
KeygenTV	libsodium/test/default/keygen.c	/^} KeygenTV;$/;"	t	typeref:struct:KeygenTV_	file:
KeygenTV_	libsodium/test/default/keygen.c	/^typedef struct KeygenTV_ {$/;"	s	file:
Krnd	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^static const uint32_t Krnd[64] = {$/;"	v	file:
Krnd	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^static const uint64_t Krnd[80] = {$/;"	v	file:
LD	libsodium/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/contrib/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/dist-build/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/msvc-scripts/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/src/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/src/libsodium/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/src/libsodium/include/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/test/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	libsodium/test/default/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LD	zcash/secp256k1/Makefile	/^LD = \/usr\/bin\/ld -m elf_x86_64$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	demo/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	libsodium/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/contrib/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/dist-build/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/msvc-scripts/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/src/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/src/libsodium/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/src/libsodium/include/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/test/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	libsodium/test/default/Makefile	/^LDFLAGS =  -pie -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack$/;"	m
LDFLAGS	zcash/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS	zcash/secp256k1/Makefile	/^LDFLAGS = $/;"	m
LDFLAGS_FOR_BUILD	zcash/secp256k1/Makefile	/^LDFLAGS_FOR_BUILD = $/;"	m
LE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	62;"	d	file:
LEAVE_CRITICAL_SECTION	zcash/sync.h	175;"	d
LIBGTEST_A	libsnark/Makefile	/^LIBGTEST_A = $(DEPINST)\/lib\/libgtest.a$/;"	m
LIBOBJS	Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	demo/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/contrib/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/dist-build/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/msvc-scripts/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/src/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/src/libsodium/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/src/libsodium/include/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/test/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	libsodium/test/default/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	zcash/Makefile	/^LIBOBJS = $/;"	m
LIBOBJS	zcash/secp256k1/Makefile	/^LIBOBJS = $/;"	m
LIBPATH	demo/Makefile	/^LIBPATH = -L$(top_srcdir)\/libsnark -L$(top_srcdir)\/libsnark\/depinst\/lib -L$(top_srcdir)\/libsodium\/src\/libsodium\/.libs -L$(top_srcdir)\/zcash\/secp256k1\/.libs$/;"	m
LIBPATH	zcash/Makefile	/^LIBPATH = -L$(top_srcdir)\/libsnark -L$(top_srcdir)\/libsnark\/depinst\/lib -L$(top_srcdir)\/libsodium\/src\/libsodium\/.libs -L$(top_srcdir)\/zcash\/secp256k1\/.libs$/;"	m
LIBRARY	libsodium/packaging/dotnet-core/prepare.py	/^LIBRARY = 'libsodium'$/;"	v
LIBS	Makefile	/^LIBS = -lrt -lanl -lpthread -lgmp -ldl -lcrypto $/;"	m
LIBS	demo/Makefile	/^LIBS = -lrt -lanl -lpthread -lgmp -ldl -lcrypto $/;"	m
LIBS	libsodium/Makefile	/^LIBS =  $/;"	m
LIBS	libsodium/contrib/Makefile	/^LIBS =  $/;"	m
LIBS	libsodium/dist-build/Makefile	/^LIBS =  $/;"	m
LIBS	libsodium/msvc-scripts/Makefile	/^LIBS =  $/;"	m
LIBS	libsodium/src/Makefile	/^LIBS =  $/;"	m
LIBS	libsodium/src/libsodium/Makefile	/^LIBS =  $/;"	m
LIBS	libsodium/src/libsodium/include/Makefile	/^LIBS =  $/;"	m
LIBS	libsodium/test/Makefile	/^LIBS =  $/;"	m
LIBS	libsodium/test/default/Makefile	/^LIBS =  $/;"	m
LIBS	zcash/Makefile	/^LIBS = -lrt -lanl -lpthread -lgmp -ldl -lcrypto $/;"	m
LIBS	zcash/secp256k1/Makefile	/^LIBS = $/;"	m
LIBSECP256K1_CONFIG_H	zcash/secp256k1/src/libsecp256k1-config.h	6;"	d
LIBSNARK_A	libsnark/Makefile	/^LIBSNARK_A = libsnark.a$/;"	m
LIBTOOL	libsodium/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/contrib/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/dist-build/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/msvc-scripts/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/src/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/src/libsodium/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/src/libsodium/include/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/test/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	libsodium/test/default/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL	zcash/secp256k1/Makefile	/^LIBTOOL = $(SHELL) $(top_builddir)\/libtool$/;"	m
LIBTOOL_DEPS	libsodium/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/contrib/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/dist-build/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/msvc-scripts/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/src/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/src/libsodium/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/src/libsodium/include/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/test/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_DEPS	libsodium/test/default/Makefile	/^LIBTOOL_DEPS = build-aux\/ltmain.sh$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 21:0:3$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/contrib/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 21:0:3$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/dist-build/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 21:0:3$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/msvc-scripts/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 21:0:3$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/src/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 21:0:3$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/src/libsodium/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 21:0:3$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/src/libsodium/include/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 21:0:3$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/test/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 21:0:3$/;"	m
LIBTOOL_EXTRA_FLAGS	libsodium/test/default/Makefile	/^LIBTOOL_EXTRA_FLAGS =  -version-info 21:0:3$/;"	m
LIB_FILE	libsnark/Makefile	/^LIB_FILE = $(LIBSNARK_A)$/;"	m
LIB_FILE	libsnark/Makefile	/^LIB_FILE = libsnark.so$/;"	m
LIB_OBJS	libsnark/Makefile	/^LIB_OBJS  =$(patsubst %.cpp,%.o,$(LIB_SRCS))$/;"	m
LIB_SRCS	libsnark/Makefile	/^LIB_SRCS = \\$/;"	m
LIMITED_STRING	zcash/serialize.h	379;"	d
LINK	libsodium/src/libsodium/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	libsodium/test/default/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINK	zcash/secp256k1/Makefile	/^LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LINUX	libsodium/packaging/dotnet-core/prepare.py	/^LINUX = [$/;"	v
LIPO	libsodium/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/contrib/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/dist-build/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/msvc-scripts/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/src/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/src/libsodium/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/src/libsodium/include/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/test/Makefile	/^LIPO = $/;"	m
LIPO	libsodium/test/default/Makefile	/^LIPO = $/;"	m
LIPO	zcash/secp256k1/Makefile	/^LIPO = $/;"	m
LN_S	libsodium/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/contrib/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/dist-build/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/msvc-scripts/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/src/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/src/libsodium/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/src/libsodium/include/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/test/Makefile	/^LN_S = ln -s$/;"	m
LN_S	libsodium/test/default/Makefile	/^LN_S = ln -s$/;"	m
LN_S	zcash/secp256k1/Makefile	/^LN_S = ln -s$/;"	m
LO	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	16;"	d
LOAD	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	11;"	d
LOAD128	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	5;"	d
LOAD32_BE	libsodium/src/libsodium/include/sodium/private/common.h	149;"	d
LOAD32_LE	libsodium/src/libsodium/include/sodium/private/common.h	77;"	d
LOAD64_BE	libsodium/src/libsodium/include/sodium/private/common.h	110;"	d
LOAD64_LE	libsodium/src/libsodium/include/sodium/private/common.h	38;"	d
LOADU	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	14;"	d
LOADU	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h	5;"	d
LOADU	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h	5;"	d
LOADU128	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	8;"	d
LOADU64	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	/^LOADU64(const void *p)$/;"	f
LOAD_MSG_0_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	19;"	d
LOAD_MSG_0_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	19;"	d
LOAD_MSG_0_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	22;"	d
LOAD_MSG_0_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	25;"	d
LOAD_MSG_0_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	25;"	d
LOAD_MSG_0_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	31;"	d
LOAD_MSG_0_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	28;"	d
LOAD_MSG_0_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	37;"	d
LOAD_MSG_10_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	139;"	d
LOAD_MSG_10_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	259;"	d
LOAD_MSG_10_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	142;"	d
LOAD_MSG_10_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	265;"	d
LOAD_MSG_10_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	145;"	d
LOAD_MSG_10_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	271;"	d
LOAD_MSG_10_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	148;"	d
LOAD_MSG_10_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	277;"	d
LOAD_MSG_11_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	151;"	d
LOAD_MSG_11_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	283;"	d
LOAD_MSG_11_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	154;"	d
LOAD_MSG_11_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	289;"	d
LOAD_MSG_11_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	157;"	d
LOAD_MSG_11_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	295;"	d
LOAD_MSG_11_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	160;"	d
LOAD_MSG_11_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	301;"	d
LOAD_MSG_1_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	31;"	d
LOAD_MSG_1_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	43;"	d
LOAD_MSG_1_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	34;"	d
LOAD_MSG_1_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	49;"	d
LOAD_MSG_1_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	37;"	d
LOAD_MSG_1_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	55;"	d
LOAD_MSG_1_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	40;"	d
LOAD_MSG_1_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	61;"	d
LOAD_MSG_2_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	43;"	d
LOAD_MSG_2_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	67;"	d
LOAD_MSG_2_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	46;"	d
LOAD_MSG_2_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	73;"	d
LOAD_MSG_2_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	49;"	d
LOAD_MSG_2_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	79;"	d
LOAD_MSG_2_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	52;"	d
LOAD_MSG_2_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	85;"	d
LOAD_MSG_3_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	55;"	d
LOAD_MSG_3_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	91;"	d
LOAD_MSG_3_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	58;"	d
LOAD_MSG_3_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	97;"	d
LOAD_MSG_3_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	61;"	d
LOAD_MSG_3_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	103;"	d
LOAD_MSG_3_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	64;"	d
LOAD_MSG_3_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	109;"	d
LOAD_MSG_4_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	67;"	d
LOAD_MSG_4_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	115;"	d
LOAD_MSG_4_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	70;"	d
LOAD_MSG_4_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	121;"	d
LOAD_MSG_4_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	73;"	d
LOAD_MSG_4_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	127;"	d
LOAD_MSG_4_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	76;"	d
LOAD_MSG_4_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	133;"	d
LOAD_MSG_5_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	79;"	d
LOAD_MSG_5_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	139;"	d
LOAD_MSG_5_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	82;"	d
LOAD_MSG_5_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	145;"	d
LOAD_MSG_5_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	85;"	d
LOAD_MSG_5_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	151;"	d
LOAD_MSG_5_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	88;"	d
LOAD_MSG_5_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	157;"	d
LOAD_MSG_6_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	91;"	d
LOAD_MSG_6_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	163;"	d
LOAD_MSG_6_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	94;"	d
LOAD_MSG_6_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	169;"	d
LOAD_MSG_6_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	97;"	d
LOAD_MSG_6_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	175;"	d
LOAD_MSG_6_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	100;"	d
LOAD_MSG_6_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	181;"	d
LOAD_MSG_7_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	103;"	d
LOAD_MSG_7_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	187;"	d
LOAD_MSG_7_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	106;"	d
LOAD_MSG_7_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	193;"	d
LOAD_MSG_7_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	109;"	d
LOAD_MSG_7_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	199;"	d
LOAD_MSG_7_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	112;"	d
LOAD_MSG_7_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	205;"	d
LOAD_MSG_8_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	115;"	d
LOAD_MSG_8_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	211;"	d
LOAD_MSG_8_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	118;"	d
LOAD_MSG_8_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	217;"	d
LOAD_MSG_8_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	121;"	d
LOAD_MSG_8_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	223;"	d
LOAD_MSG_8_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	124;"	d
LOAD_MSG_8_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	229;"	d
LOAD_MSG_9_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	127;"	d
LOAD_MSG_9_1	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	235;"	d
LOAD_MSG_9_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	130;"	d
LOAD_MSG_9_2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	241;"	d
LOAD_MSG_9_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	133;"	d
LOAD_MSG_9_3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	247;"	d
LOAD_MSG_9_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	136;"	d
LOAD_MSG_9_4	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	253;"	d
LOADx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	415;"	d	file:
LOCK	zcash/sync.h	165;"	d
LOCK2	zcash/sync.h	166;"	d
LOCKABLE	zcash/threadsafety.h	16;"	d
LOCKABLE	zcash/threadsafety.h	35;"	d
LOCKS_EXCLUDED	zcash/threadsafety.h	30;"	d
LOCKS_EXCLUDED	zcash/threadsafety.h	49;"	d
LOCKTIME_MEDIAN_TIME_PAST	zcash/consensus/consensus.h	/^    LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),$/;"	e	enum:__anon59
LOCKTIME_THRESHOLD	zcash/script/script.h	/^static const unsigned int LOCKTIME_THRESHOLD = 500000000; \/\/ Tue Nov  5 00:53:20 1985 UTC$/;"	v
LOCK_RETURNED	zcash/threadsafety.h	29;"	d
LOCK_RETURNED	zcash/threadsafety.h	48;"	d
LOG_COMPILE	libsodium/test/default/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_COMPILE	zcash/secp256k1/Makefile	/^LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)$/;"	m
LOG_DRIVER	libsodium/test/default/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/build-aux\/test-driver$/;"	m
LOG_DRIVER	zcash/secp256k1/Makefile	/^LOG_DRIVER = $(SHELL) $(top_srcdir)\/build-aux\/test-driver$/;"	m
LOOPACCUMDRMD128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	727;"	d	file:
LOOPACCUMDRND128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	708;"	d	file:
LOOPDRMD128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	749;"	d	file:
LOOPDRND128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	717;"	d	file:
LOOPRMD128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	579;"	d	file:
LOOPRND128	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	568;"	d	file:
LT	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	61;"	d	file:
LTCCASCOMPILE	zcash/secp256k1/Makefile	/^LTCCASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	libsodium/src/libsodium/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	libsodium/test/default/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCOMPILE	zcash/secp256k1/Makefile	/^LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
LTCPPASCOMPILE	libsodium/src/libsodium/Makefile	/^LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \\$/;"	m
LTLIBOBJS	Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	demo/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/contrib/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/dist-build/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/msvc-scripts/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/src/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/src/libsodium/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/src/libsodium/include/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/test/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	libsodium/test/default/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	zcash/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBOBJS	zcash/secp256k1/Makefile	/^LTLIBOBJS = $/;"	m
LTLIBRARIES	libsodium/src/libsodium/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)$/;"	m
LTLIBRARIES	zcash/secp256k1/Makefile	/^LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)$/;"	m
LT_OBJDIR	zcash/secp256k1/src/libsecp256k1-config.h	66;"	d
LT_SYS_LIBRARY_PATH	libsodium/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/contrib/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/dist-build/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/msvc-scripts/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/src/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/src/libsodium/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/src/libsodium/include/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/test/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	libsodium/test/default/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LT_SYS_LIBRARY_PATH	zcash/secp256k1/Makefile	/^LT_SYS_LIBRARY_PATH = $/;"	m
LeaveCritical	zcash/sync.cpp	/^void LeaveCritical()$/;"	f
LeaveCritical	zcash/sync.h	/^void static inline LeaveCritical() {}$/;"	f
LimitedString	zcash/serialize.h	/^    LimitedString(std::string& string) : string(string) {}$/;"	f	class:LimitedString
LimitedString	zcash/serialize.h	/^class LimitedString$/;"	c
LinuxItem	libsodium/packaging/dotnet-core/prepare.py	/^class LinuxItem:$/;"	c
ListColliding	zcash/crypto/equihash.h	/^    ListColliding,$/;"	e	enum:EhSolverCancelCheck
ListGeneration	zcash/crypto/equihash.h	/^    ListGeneration,$/;"	e	enum:EhSolverCancelCheck
ListSorting	zcash/crypto/equihash.h	/^    ListSorting,$/;"	e	enum:EhSolverCancelCheck
Load	zcash/key.cpp	/^bool CKey::Load(CPrivKey &privkey, CPubKey &vchPubKey, bool fSkipCheck=false) {$/;"	f	class:CKey
Lock	zcash/support/pagelocker.cpp	/^bool MemoryPageLocker::Lock(const void* addr, size_t len)$/;"	f	class:MemoryPageLocker
LockObject	zcash/support/pagelocker.h	/^void LockObject(const T& t)$/;"	f
LockRange	zcash/support/pagelocker.h	/^    void LockRange(void* p, size_t size)$/;"	f	class:LockedPageManagerBase
LockStack	zcash/sync.cpp	/^typedef std::vector<std::pair<void*, CLockLocation> > LockStack;$/;"	t	file:
LockedPageManager	zcash/support/pagelocker.cpp	/^LockedPageManager::LockedPageManager() : LockedPageManagerBase<MemoryPageLocker>(GetSystemPageSize())$/;"	f	class:LockedPageManager
LockedPageManager	zcash/support/pagelocker.h	/^class LockedPageManager : public LockedPageManagerBase<MemoryPageLocker>$/;"	c
LockedPageManagerBase	zcash/support/pagelocker.h	/^    LockedPageManagerBase(size_t page_size) : page_size(page_size)$/;"	f	class:LockedPageManagerBase
LockedPageManagerBase	zcash/support/pagelocker.h	/^class LockedPageManagerBase$/;"	c
LocksHeld	zcash/sync.cpp	/^std::string LocksHeld()$/;"	f
LogAcceptCategory	zcash/zcashutil.cpp	/^bool LogAcceptCategory(const char* category)$/;"	f
LogPrint	zcash/zcashutil.h	/^static inline int LogPrint(const char* category, const char* format)$/;"	f
LogPrintStr	zcash/zcashutil.cpp	/^int LogPrintStr(const std::string &str)$/;"	f
LogPrintf	zcash/zcashutil.h	74;"	d
LogTimestampStr	zcash/zcashutil.cpp	/^static std::string LogTimestampStr(const std::string &str, bool *fStartedNewLine)$/;"	f	file:
M	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable_array<FieldT> M;$/;"	m	class:libsnark::sha256_message_schedule_gadget
M0	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	7;"	d
M0	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const unsigned char M0[16] = { 0x0f, 0x0b, 0x07, 0x03, 0x0e, 0x0a, 0x06, 0x02,$/;"	v
M0SWAP	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	10;"	d
M0SWAP	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const unsigned char M0SWAP[16] = { 0x0c, 0x08, 0x04, 0x00, 0x0d, 0x09,$/;"	v
MACOS	libsodium/packaging/dotnet-core/prepare.py	/^MACOS = [$/;"	v
MADV_DODUMP	libsodium/src/libsodium/sodium/utils.c	58;"	d	file:
MADV_DONTDUMP	libsodium/src/libsodium/sodium/utils.c	59;"	d	file:
MAINT	libsodium/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/contrib/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/dist-build/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/msvc-scripts/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/src/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/src/libsodium/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/src/libsodium/include/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/test/Makefile	/^MAINT = #$/;"	m
MAINT	libsodium/test/default/Makefile	/^MAINT = #$/;"	m
MAKE4	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	156;"	d	file:
MAKE8	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	162;"	d	file:
MAKEFILE	libsodium/packaging/dotnet-core/prepare.py	/^MAKEFILE = 'Makefile'$/;"	v
MAKEINFO	Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing makeinfo$/;"	m
MAKEINFO	demo/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing makeinfo$/;"	m
MAKEINFO	libsodium/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/contrib/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/dist-build/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/msvc-scripts/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/src/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/src/libsodium/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/src/libsodium/include/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/test/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	libsodium/test/default/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/missing makeinfo$/;"	m
MAKEINFO	zcash/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/missing makeinfo$/;"	m
MAKEINFO	zcash/secp256k1/Makefile	/^MAKEINFO = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1\/build-aux\/missing makeinfo$/;"	m
MAKE_ERROR_AND_LOG_FUNC	zcash/zcashutil.h	80;"	d
MAKE_RAII	zcash/support/events.h	14;"	d
MANDATORY_SCRIPT_VERIFY_FLAGS	zcash/script/standard.h	/^static const unsigned int MANDATORY_SCRIPT_VERIFY_FLAGS = SCRIPT_VERIFY_P2SH;$/;"	v
MANIFEST_TOOL	libsodium/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/contrib/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/dist-build/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/msvc-scripts/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/src/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/src/libsodium/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/src/libsodium/include/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/test/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	libsodium/test/default/Makefile	/^MANIFEST_TOOL = :$/;"	m
MANIFEST_TOOL	zcash/secp256k1/Makefile	/^MANIFEST_TOOL = :$/;"	m
MAP_ANON	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	34;"	d	file:
MAP_ANON	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	31;"	d	file:
MAP_ANON	libsodium/src/libsodium/sodium/utils.c	43;"	d	file:
MAP_NOCORE	libsodium/src/libsodium/sodium/utils.c	40;"	d	file:
MAXLEN	libsodium/test/default/generichash.c	5;"	d	file:
MAXLEN	libsodium/test/default/generichash2.c	8;"	d	file:
MAXLEN	libsodium/test/default/generichash3.c	8;"	d	file:
MAXLEN	libsodium/test/default/shorthash.c	5;"	d	file:
MAXLEN	libsodium/test/default/siphashx24.c	5;"	d	file:
MAX_BLOCK_SIGOPS	zcash/consensus/consensus.h	/^static const unsigned int MAX_BLOCK_SIGOPS = 20000;$/;"	v
MAX_BLOCK_SIZE	zcash/consensus/consensus.h	/^static const unsigned int MAX_BLOCK_SIZE = 2000000;$/;"	v
MAX_CURRENT_VERSION	zcash/primitives/transaction.h	/^    static const int32_t MAX_CURRENT_VERSION = 2;$/;"	m	class:CTransaction
MAX_MONEY	zcash/amount.h	/^static const CAmount MAX_MONEY = 21000000 * COIN;$/;"	v
MAX_OP_RETURN_RELAY	zcash/script/standard.h	/^static const unsigned int MAX_OP_RETURN_RELAY = 80;      \/\/! bytes$/;"	v
MAX_PATH	zcash/compat.h	73;"	d
MAX_SCRIPT_ELEMENT_SIZE	zcash/script/script.h	/^static const unsigned int MAX_SCRIPT_ELEMENT_SIZE = 520; \/\/ bytes$/;"	v
MAX_SCRIPT_SIZE	zcash/script/script.h	/^static const int MAX_SCRIPT_SIZE = 10000;$/;"	v
MAX_SIZE	zcash/serialize.h	/^static const unsigned int MAX_SIZE = 0x02000000;$/;"	v
MAX_TX_SIZE	zcash/consensus/consensus.h	/^static const unsigned int MAX_TX_SIZE = 100000;$/;"	v
MEMLIMIT	libsodium/test/default/pwhash.c	7;"	d	file:
MEMLIMIT	libsodium/test/default/pwhash_argon2id.c	7;"	d	file:
MEMLIMIT	libsodium/test/default/pwhash_scrypt.c	7;"	d	file:
MEMPOOL_GD_VERSION	zcash/version.h	/^static const int MEMPOOL_GD_VERSION = 60002;$/;"	v
MERKLE_AUTHENTICATION_PATH_VARIABLE_HPP_	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.hpp	9;"	d
MERKLE_AUTHENTICATION_PATH_VARIABLE_TCC_	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.tcc	9;"	d	file:
MERKLE_TREE_CHECK_READ_GADGET_HPP_	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	17;"	d
MERKLE_TREE_CHECK_READ_GADGET_TCC_	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.tcc	15;"	d	file:
MERKLE_TREE_CHECK_UPDATE_GADGET_HPP_	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	18;"	d
MERKLE_TREE_CHECK_UPDATE_GADGET_TCC_	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.tcc	15;"	d	file:
MERKLE_TREE_HPP_	libsnark/src/common/data_structures/merkle_tree.hpp	13;"	d
MERKLE_TREE_TCC	libsnark/src/common/data_structures/merkle_tree.tcc	15;"	d	file:
MESSAGE	libsodium/test/default/aead_chacha20poly1305.c	186;"	d	file:
MESSAGE	libsodium/test/default/aead_chacha20poly1305.c	187;"	d	file:
MESSAGE	libsodium/test/default/aead_xchacha20poly1305.c	21;"	d	file:
MESSAGE	libsodium/test/default/aead_xchacha20poly1305.c	22;"	d	file:
MIN_BLOCK_VERSION	zcash/consensus/consensus.h	/^static const int32_t MIN_BLOCK_VERSION = 4;$/;"	v
MIN_CURRENT_VERSION	zcash/primitives/transaction.h	/^    static const int32_t MIN_CURRENT_VERSION = 1;$/;"	m	class:CTransaction
MIN_PEER_PROTO_VERSION	zcash/version.h	/^static const int MIN_PEER_PROTO_VERSION = 170002;$/;"	v
MIN_TX_VERSION	zcash/consensus/consensus.h	/^static const int32_t MIN_TX_VERSION = 1;$/;"	v
MKDIR_P	Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	demo/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/contrib/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/dist-build/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/msvc-scripts/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/src/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/src/libsodium/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/src/libsodium/include/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/test/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	libsodium/test/default/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	zcash/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MKDIR_P	zcash/secp256k1/Makefile	/^MKDIR_P = \/bin\/mkdir -p$/;"	m
MLEN	libsodium/test/default/aead_chacha20poly1305.c	173;"	d	file:
MLEN	libsodium/test/default/aead_chacha20poly1305.c	174;"	d	file:
MLEN	libsodium/test/default/aead_chacha20poly1305.c	8;"	d	file:
MLEN	libsodium/test/default/aead_chacha20poly1305.c	9;"	d	file:
MLEN	libsodium/test/default/aead_xchacha20poly1305.c	8;"	d	file:
MLEN	libsodium/test/default/aead_xchacha20poly1305.c	9;"	d	file:
MODE_ERROR	zcash/consensus/validation.h	/^        MODE_ERROR,   \/\/! run-time error$/;"	e	enum:CValidationState::mode_state
MODE_INVALID	zcash/consensus/validation.h	/^        MODE_INVALID, \/\/! network rule violation (DoS value may be set)$/;"	e	enum:CValidationState::mode_state
MODE_VALID	zcash/consensus/validation.h	/^        MODE_VALID,   \/\/! everything ok$/;"	e	enum:CValidationState::mode_state
MONT_CMP	libsnark/src/algebra/fields/fp_aux.tcc	64;"	d	file:
MONT_FINALIZE	libsnark/src/algebra/fields/fp_aux.tcc	150;"	d	file:
MONT_FIRSTITER	libsnark/src/algebra/fields/fp_aux.tcc	98;"	d	file:
MONT_FIRSTSUB	libsnark/src/algebra/fields/fp_aux.tcc	70;"	d	file:
MONT_ITERFIRST	libsnark/src/algebra/fields/fp_aux.tcc	115;"	d	file:
MONT_ITERITER	libsnark/src/algebra/fields/fp_aux.tcc	131;"	d	file:
MONT_NEXTSUB	libsnark/src/algebra/fields/fp_aux.tcc	74;"	d	file:
MONT_PRECOMPUTE	libsnark/src/algebra/fields/fp_aux.tcc	85;"	d	file:
MSCH	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	93;"	d	file:
MSCH	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	109;"	d	file:
MSG_DONTWAIT	zcash/compat.h	50;"	d
MSG_NOSIGNAL	zcash/compat.h	78;"	d
MUL	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	12;"	d
MULREDUCE4	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	322;"	d	file:
MULTIEXP_HPP_	libsnark/src/algebra/scalar_multiplication/multiexp.hpp	13;"	d
MULTIEXP_TCC_	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	15;"	d	file:
MacOSItem	libsodium/packaging/dotnet-core/prepare.py	/^class MacOSItem:$/;"	c
Maj	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^Maj = lambda x, y, z: (((x | y) & z) | (x & y))$/;"	v
Maj	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	75;"	d	file:
Maj	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	91;"	d	file:
Maj	zcash/crypto/sha256.cpp	/^uint32_t inline Maj(uint32_t x, uint32_t y, uint32_t z) { return (x & y) | (z & (x | y)); }$/;"	f	namespace:__anon29::sha256
Maj	zcash/crypto/sha512.cpp	/^uint64_t inline Maj(uint64_t x, uint64_t y, uint64_t z) { return (x & y) | (z & (x | y)); }$/;"	f	namespace:__anon31::sha512
Maj	zcash/secp256k1/src/hash_impl.h	17;"	d
Maj	zcash/secp256k1/src/hash_impl.h	278;"	d
MakeNewKey	zcash/key.cpp	/^void CKey::MakeNewKey(bool fCompressedIn) {$/;"	f	class:CKey
MapShuffle	zcash/random.h	/^void MapShuffle(RandomAccessContainer& first,$/;"	f
MappedShuffle	zcash/random.h	/^void MappedShuffle(RandomAccessIterator first,$/;"	f
MaxActualTimespan	zcash/consensus/params.h	/^    int64_t MaxActualTimespan() const { return (AveragingWindowTimespan() * (100 + nPowMaxAdjustDown)) \/ 100; }$/;"	f	struct:Consensus::Params
MemoryPageLocker	zcash/support/pagelocker.h	/^class MemoryPageLocker$/;"	c
MerklePath	zcash/IncrementalMerkleTree.hpp	/^    MerklePath() { }$/;"	f	class:libzcash::MerklePath
MerklePath	zcash/IncrementalMerkleTree.hpp	/^    MerklePath(std::vector<std::vector<bool>> authentication_path, std::vector<bool> index)$/;"	f	class:libzcash::MerklePath
MerklePath	zcash/IncrementalMerkleTree.hpp	/^class MerklePath {$/;"	c	namespace:libzcash
MilliSleep	zcash/utiltime.cpp	/^void MilliSleep(int64_t n)$/;"	f
MinActualTimespan	zcash/consensus/params.h	/^    int64_t MinActualTimespan() const { return (AveragingWindowTimespan() * (100 - nPowMaxAdjustUp  )) \/ 100; }$/;"	f	struct:Consensus::Params
MoneyRange	zcash/amount.h	/^inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }$/;"	f
MoveTo	zcash/sync.h	/^    void MoveTo(CSemaphoreGrant& grant)$/;"	f	class:CSemaphoreGrant
Mul_GF16	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	622;"	d
Mul_GF16_2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	638;"	d
Mul_GF4	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	585;"	d
Mul_GF4_2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	605;"	d
Mul_GF4_N	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	595;"	d
MurmurHash3	zcash/hash.cpp	/^unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char>& vDataToHash)$/;"	f
MutableTransactionSignatureChecker	zcash/script/interpreter.h	/^    MutableTransactionSignatureChecker(const CMutableTransaction* txToIn, unsigned int nInIn) : TransactionSignatureChecker(&txTo, nInIn), txTo(*txToIn) {}$/;"	f	class:MutableTransactionSignatureChecker
MutableTransactionSignatureChecker	zcash/script/interpreter.h	/^class MutableTransactionSignatureChecker : public TransactionSignatureChecker$/;"	c
MutexName	zcash/sync.cpp	/^    std::string MutexName() const { return mutexName; }$/;"	f	struct:CLockLocation
N	libsnark/src/algebra/fields/bigint.hpp	/^    static const mp_size_t N = n;$/;"	m	class:libsnark::bigint
N1	libsodium/test/default/pwhash_scrypt_ll.c	/^static const uint64_t N1      = 16U;$/;"	v	file:
N2	libsodium/test/default/pwhash_scrypt_ll.c	/^static const uint64_t N2      = 1024U;$/;"	v	file:
N3	libsodium/test/default/pwhash_scrypt_ll.c	/^static const uint64_t N3      = 16384U;$/;"	v	file:
NCONST_PTR	zcash/serialize.h	/^inline T* NCONST_PTR(const T* val)$/;"	f
NM	libsodium/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/contrib/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/dist-build/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/msvc-scripts/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/src/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/src/libsodium/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/src/libsodium/include/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/test/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	libsodium/test/default/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NM	zcash/secp256k1/Makefile	/^NM = \/usr\/bin\/nm -B$/;"	m
NMEDIT	libsodium/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/contrib/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/dist-build/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/msvc-scripts/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/src/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/src/libsodium/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/src/libsodium/include/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/test/Makefile	/^NMEDIT = $/;"	m
NMEDIT	libsodium/test/default/Makefile	/^NMEDIT = $/;"	m
NMEDIT	zcash/secp256k1/Makefile	/^NMEDIT = $/;"	m
NOBLKS_VERSION_END	zcash/version.h	/^static const int NOBLKS_VERSION_END = 32400;$/;"	v
NOBLKS_VERSION_START	zcash/version.h	/^static const int NOBLKS_VERSION_START = 32000;$/;"	v
NOMINMAX	zcash/compat.h	22;"	d
NOMINMAX	zcash/support/pagelocker.cpp	18;"	d	file:
NOMINMAX	zcash/zcashutil.cpp	64;"	d	file:
NORMAL_INSTALL	Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	demo/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/contrib/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/dist-build/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/msvc-scripts/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/src/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/src/libsodium/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/src/libsodium/include/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/test/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	libsodium/test/default/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	zcash/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_INSTALL	zcash/secp256k1/Makefile	/^NORMAL_INSTALL = :$/;"	m
NORMAL_UNINSTALL	Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	demo/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/contrib/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/dist-build/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/msvc-scripts/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/src/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/src/libsodium/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/src/libsodium/include/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/test/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	libsodium/test/default/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	zcash/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NORMAL_UNINSTALL	zcash/secp256k1/Makefile	/^NORMAL_UNINSTALL = :$/;"	m
NOTEENCRYPTION_AUTH_BYTES	zcash/NoteEncryption.hpp	17;"	d
NOTEENCRYPTION_CIPHER_KEYSIZE	zcash/NoteEncryption.cpp	7;"	d	file:
NOT_AN_INPUT	zcash/script/interpreter.h	/^const unsigned int NOT_AN_INPUT = UINT_MAX;$/;"	v
NO_THREAD_SAFETY_ANALYSIS	zcash/threadsafety.h	33;"	d
NO_THREAD_SAFETY_ANALYSIS	zcash/threadsafety.h	52;"	d
NUM_LIMBS	zcash/secp256k1/src/num_gmp.h	12;"	d
NVDECLx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	129;"	d	file:
NVx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	132;"	d	file:
NativeSecp256k1	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^public class NativeSecp256k1 {$/;"	c
NativeSecp256k1Test	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^public class NativeSecp256k1Test {$/;"	c
NativeSecp256k1Util	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^public class NativeSecp256k1Util{$/;"	c
Neuter	zcash/key.cpp	/^CExtPubKey CExtKey::Neuter() const {$/;"	f	class:CExtKey
Note	zcash/Note.cpp	/^Note::Note() {$/;"	f	class:libzcash::Note
Note	zcash/Note.hpp	/^    Note(uint256 a_pk, uint64_t value, uint256 rho, uint256 r,$/;"	f	class:libzcash::Note
Note	zcash/Note.hpp	/^class Note {$/;"	c	namespace:libzcash
Note	zcash/secp256k1/src/asm/field_10x26_arm.s	/^	Note: do not read from a[] after here, it may overlap with r[]$/;"	d
Note	zcash/secp256k1/src/asm/field_10x26_arm.s	/^	Note: do not write to r[] here, it may overlap with a[]$/;"	d
NoteDecryption	zcash/NoteEncryption.cpp	/^NoteDecryption<MLEN>::NoteDecryption(uint256 sk_enc) : sk_enc(sk_enc) {$/;"	f	class:libzcash::NoteDecryption
NoteDecryption	zcash/NoteEncryption.hpp	/^    NoteDecryption() { }$/;"	f	class:libzcash::NoteDecryption
NoteDecryption	zcash/NoteEncryption.hpp	/^class NoteDecryption {$/;"	c	namespace:libzcash
NoteDecryptorMap	zcash/keystore.h	/^typedef std::map<libzcash::PaymentAddress, ZCNoteDecryption> NoteDecryptorMap;$/;"	t
NoteEncryption	zcash/NoteEncryption.cpp	/^NoteEncryption<MLEN>::NoteEncryption(uint256 hSig) : nonce(0), hSig(hSig) {$/;"	f	class:libzcash::NoteEncryption
NoteEncryption	zcash/NoteEncryption.hpp	/^class NoteEncryption {$/;"	c	namespace:libzcash
NotePlaintext	zcash/Note.cpp	/^NotePlaintext::NotePlaintext($/;"	f	class:libzcash::NotePlaintext
NotePlaintext	zcash/Note.hpp	/^    NotePlaintext() {}$/;"	f	class:libzcash::NotePlaintext
NotePlaintext	zcash/Note.hpp	/^class NotePlaintext {$/;"	c	namespace:libzcash
OBJDUMP	libsodium/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/contrib/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/dist-build/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/msvc-scripts/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/src/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/src/libsodium/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/src/libsodium/include/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/test/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	libsodium/test/default/Makefile	/^OBJDUMP = objdump$/;"	m
OBJDUMP	zcash/secp256k1/Makefile	/^OBJDUMP = objdump$/;"	m
OBJEXT	Makefile	/^OBJEXT = o$/;"	m
OBJEXT	demo/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/contrib/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/dist-build/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/msvc-scripts/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/src/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/src/libsodium/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/src/libsodium/include/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/test/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	libsodium/test/default/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	zcash/Makefile	/^OBJEXT = o$/;"	m
OBJEXT	zcash/secp256k1/Makefile	/^OBJEXT = o$/;"	m
ONE	libsnark/src/gadgetlib1/pb_variable.hpp	72;"	d
ONEOCTO	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	290;"	d
ONEOCTO	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	338;"	d
ONEOCTO	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h	423;"	d
ONEOCTO	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h	470;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	150;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	165;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	272;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	335;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u0.h	180;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u0.h	187;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u1.h	185;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u1.h	192;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h	523;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h	538;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h	405;"	d
ONEQUAD	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h	467;"	d
ONEQUAD_EXTRACT	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h	439;"	d
ONEQUAD_EXTRACT	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h	540;"	d
ONEQUAD_SHUFFLE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u0.h	164;"	d
ONEQUAD_SHUFFLE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u0.h	188;"	d
ONEQUAD_SHUFFLE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u1.h	165;"	d
ONEQUAD_SHUFFLE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u1.h	193;"	d
ONEQUAD_SHUFFLE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h	363;"	d
ONEQUAD_SHUFFLE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h	541;"	d
ONEQUAD_TRANSPOSE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	123;"	d
ONEQUAD_TRANSPOSE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	166;"	d
ONEQUAD_TRANSPOSE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	231;"	d
ONEQUAD_TRANSPOSE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	336;"	d
ONEQUAD_TRANSPOSE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h	501;"	d
ONEQUAD_TRANSPOSE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u4.h	539;"	d
ONEQUAD_TRANSPOSE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h	364;"	d
ONEQUAD_TRANSPOSE	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h	468;"	d
ONEQUAD_UNPCK	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	274;"	d
ONEQUAD_UNPCK	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	337;"	d
ONEQUAD_UNPCK	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h	407;"	d
ONEQUAD_UNPCK	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/u8.h	469;"	d
OPSLIMIT	libsodium/test/default/pwhash.c	6;"	d	file:
OPSLIMIT	libsodium/test/default/pwhash_argon2id.c	6;"	d	file:
OPSLIMIT	libsodium/test/default/pwhash_scrypt.c	6;"	d	file:
OPTFLAGS	libsnark/Makefile	/^        OPTFLAGS = -O3 -march=native -mtune=native$/;"	m
OPTFLAGS	libsnark/Makefile	/^OPTFLAGS = -O2 -march=native -mtune=native$/;"	m
OPTIONS	demo/Makefile	/^OPTIONS = -std=c++11 -DCURVE_ALT_BN128 -DNO_PROCPS -ggdb$/;"	m
OPTIONS	zcash/Makefile	/^OPTIONS = -std=c++11 -DCURVE_ALT_BN128 -DNO_PROCPS -ggdb$/;"	m
OP_0	zcash/script/script.h	/^    OP_0 = 0x00,$/;"	e	enum:opcodetype
OP_0NOTEQUAL	zcash/script/script.h	/^    OP_0NOTEQUAL = 0x92,$/;"	e	enum:opcodetype
OP_1	zcash/script/script.h	/^    OP_1 = 0x51,$/;"	e	enum:opcodetype
OP_10	zcash/script/script.h	/^    OP_10 = 0x5a,$/;"	e	enum:opcodetype
OP_11	zcash/script/script.h	/^    OP_11 = 0x5b,$/;"	e	enum:opcodetype
OP_12	zcash/script/script.h	/^    OP_12 = 0x5c,$/;"	e	enum:opcodetype
OP_13	zcash/script/script.h	/^    OP_13 = 0x5d,$/;"	e	enum:opcodetype
OP_14	zcash/script/script.h	/^    OP_14 = 0x5e,$/;"	e	enum:opcodetype
OP_15	zcash/script/script.h	/^    OP_15 = 0x5f,$/;"	e	enum:opcodetype
OP_16	zcash/script/script.h	/^    OP_16 = 0x60,$/;"	e	enum:opcodetype
OP_1ADD	zcash/script/script.h	/^    OP_1ADD = 0x8b,$/;"	e	enum:opcodetype
OP_1NEGATE	zcash/script/script.h	/^    OP_1NEGATE = 0x4f,$/;"	e	enum:opcodetype
OP_1SUB	zcash/script/script.h	/^    OP_1SUB = 0x8c,$/;"	e	enum:opcodetype
OP_2	zcash/script/script.h	/^    OP_2 = 0x52,$/;"	e	enum:opcodetype
OP_2DIV	zcash/script/script.h	/^    OP_2DIV = 0x8e,$/;"	e	enum:opcodetype
OP_2DROP	zcash/script/script.h	/^    OP_2DROP = 0x6d,$/;"	e	enum:opcodetype
OP_2DUP	zcash/script/script.h	/^    OP_2DUP = 0x6e,$/;"	e	enum:opcodetype
OP_2MUL	zcash/script/script.h	/^    OP_2MUL = 0x8d,$/;"	e	enum:opcodetype
OP_2OVER	zcash/script/script.h	/^    OP_2OVER = 0x70,$/;"	e	enum:opcodetype
OP_2ROT	zcash/script/script.h	/^    OP_2ROT = 0x71,$/;"	e	enum:opcodetype
OP_2SWAP	zcash/script/script.h	/^    OP_2SWAP = 0x72,$/;"	e	enum:opcodetype
OP_3	zcash/script/script.h	/^    OP_3 = 0x53,$/;"	e	enum:opcodetype
OP_3DUP	zcash/script/script.h	/^    OP_3DUP = 0x6f,$/;"	e	enum:opcodetype
OP_4	zcash/script/script.h	/^    OP_4 = 0x54,$/;"	e	enum:opcodetype
OP_5	zcash/script/script.h	/^    OP_5 = 0x55,$/;"	e	enum:opcodetype
OP_6	zcash/script/script.h	/^    OP_6 = 0x56,$/;"	e	enum:opcodetype
OP_7	zcash/script/script.h	/^    OP_7 = 0x57,$/;"	e	enum:opcodetype
OP_8	zcash/script/script.h	/^    OP_8 = 0x58,$/;"	e	enum:opcodetype
OP_9	zcash/script/script.h	/^    OP_9 = 0x59,$/;"	e	enum:opcodetype
OP_ABS	zcash/script/script.h	/^    OP_ABS = 0x90,$/;"	e	enum:opcodetype
OP_ADD	zcash/script/script.h	/^    OP_ADD = 0x93,$/;"	e	enum:opcodetype
OP_AND	zcash/script/script.h	/^    OP_AND = 0x84,$/;"	e	enum:opcodetype
OP_BOOLAND	zcash/script/script.h	/^    OP_BOOLAND = 0x9a,$/;"	e	enum:opcodetype
OP_BOOLOR	zcash/script/script.h	/^    OP_BOOLOR = 0x9b,$/;"	e	enum:opcodetype
OP_CAT	zcash/script/script.h	/^    OP_CAT = 0x7e,$/;"	e	enum:opcodetype
OP_CHECKLOCKTIMEVERIFY	zcash/script/script.h	/^    OP_CHECKLOCKTIMEVERIFY = OP_NOP2,$/;"	e	enum:opcodetype
OP_CHECKMULTISIG	zcash/script/script.h	/^    OP_CHECKMULTISIG = 0xae,$/;"	e	enum:opcodetype
OP_CHECKMULTISIGVERIFY	zcash/script/script.h	/^    OP_CHECKMULTISIGVERIFY = 0xaf,$/;"	e	enum:opcodetype
OP_CHECKSIG	zcash/script/script.h	/^    OP_CHECKSIG = 0xac,$/;"	e	enum:opcodetype
OP_CHECKSIGVERIFY	zcash/script/script.h	/^    OP_CHECKSIGVERIFY = 0xad,$/;"	e	enum:opcodetype
OP_CODESEPARATOR	zcash/script/script.h	/^    OP_CODESEPARATOR = 0xab,$/;"	e	enum:opcodetype
OP_DEPTH	zcash/script/script.h	/^    OP_DEPTH = 0x74,$/;"	e	enum:opcodetype
OP_DIV	zcash/script/script.h	/^    OP_DIV = 0x96,$/;"	e	enum:opcodetype
OP_DROP	zcash/script/script.h	/^    OP_DROP = 0x75,$/;"	e	enum:opcodetype
OP_DUP	zcash/script/script.h	/^    OP_DUP = 0x76,$/;"	e	enum:opcodetype
OP_ELSE	zcash/script/script.h	/^    OP_ELSE = 0x67,$/;"	e	enum:opcodetype
OP_ENDIF	zcash/script/script.h	/^    OP_ENDIF = 0x68,$/;"	e	enum:opcodetype
OP_EQUAL	zcash/script/script.h	/^    OP_EQUAL = 0x87,$/;"	e	enum:opcodetype
OP_EQUALVERIFY	zcash/script/script.h	/^    OP_EQUALVERIFY = 0x88,$/;"	e	enum:opcodetype
OP_FALSE	zcash/script/script.h	/^    OP_FALSE = OP_0,$/;"	e	enum:opcodetype
OP_FROMALTSTACK	zcash/script/script.h	/^    OP_FROMALTSTACK = 0x6c,$/;"	e	enum:opcodetype
OP_GREATERTHAN	zcash/script/script.h	/^    OP_GREATERTHAN = 0xa0,$/;"	e	enum:opcodetype
OP_GREATERTHANOREQUAL	zcash/script/script.h	/^    OP_GREATERTHANOREQUAL = 0xa2,$/;"	e	enum:opcodetype
OP_HASH160	zcash/script/script.h	/^    OP_HASH160 = 0xa9,$/;"	e	enum:opcodetype
OP_HASH256	zcash/script/script.h	/^    OP_HASH256 = 0xaa,$/;"	e	enum:opcodetype
OP_IF	zcash/script/script.h	/^    OP_IF = 0x63,$/;"	e	enum:opcodetype
OP_IFDUP	zcash/script/script.h	/^    OP_IFDUP = 0x73,$/;"	e	enum:opcodetype
OP_INVALIDOPCODE	zcash/script/script.h	/^    OP_INVALIDOPCODE = 0xff,$/;"	e	enum:opcodetype
OP_INVERT	zcash/script/script.h	/^    OP_INVERT = 0x83,$/;"	e	enum:opcodetype
OP_LEFT	zcash/script/script.h	/^    OP_LEFT = 0x80,$/;"	e	enum:opcodetype
OP_LESSTHAN	zcash/script/script.h	/^    OP_LESSTHAN = 0x9f,$/;"	e	enum:opcodetype
OP_LESSTHANOREQUAL	zcash/script/script.h	/^    OP_LESSTHANOREQUAL = 0xa1,$/;"	e	enum:opcodetype
OP_LSHIFT	zcash/script/script.h	/^    OP_LSHIFT = 0x98,$/;"	e	enum:opcodetype
OP_MAX	zcash/script/script.h	/^    OP_MAX = 0xa4,$/;"	e	enum:opcodetype
OP_MIN	zcash/script/script.h	/^    OP_MIN = 0xa3,$/;"	e	enum:opcodetype
OP_MOD	zcash/script/script.h	/^    OP_MOD = 0x97,$/;"	e	enum:opcodetype
OP_MUL	zcash/script/script.h	/^    OP_MUL = 0x95,$/;"	e	enum:opcodetype
OP_NEGATE	zcash/script/script.h	/^    OP_NEGATE = 0x8f,$/;"	e	enum:opcodetype
OP_NIP	zcash/script/script.h	/^    OP_NIP = 0x77,$/;"	e	enum:opcodetype
OP_NOP	zcash/script/script.h	/^    OP_NOP = 0x61,$/;"	e	enum:opcodetype
OP_NOP1	zcash/script/script.h	/^    OP_NOP1 = 0xb0,$/;"	e	enum:opcodetype
OP_NOP10	zcash/script/script.h	/^    OP_NOP10 = 0xb9,$/;"	e	enum:opcodetype
OP_NOP2	zcash/script/script.h	/^    OP_NOP2 = 0xb1,$/;"	e	enum:opcodetype
OP_NOP3	zcash/script/script.h	/^    OP_NOP3 = 0xb2,$/;"	e	enum:opcodetype
OP_NOP4	zcash/script/script.h	/^    OP_NOP4 = 0xb3,$/;"	e	enum:opcodetype
OP_NOP5	zcash/script/script.h	/^    OP_NOP5 = 0xb4,$/;"	e	enum:opcodetype
OP_NOP6	zcash/script/script.h	/^    OP_NOP6 = 0xb5,$/;"	e	enum:opcodetype
OP_NOP7	zcash/script/script.h	/^    OP_NOP7 = 0xb6,$/;"	e	enum:opcodetype
OP_NOP8	zcash/script/script.h	/^    OP_NOP8 = 0xb7,$/;"	e	enum:opcodetype
OP_NOP9	zcash/script/script.h	/^    OP_NOP9 = 0xb8,$/;"	e	enum:opcodetype
OP_NOT	zcash/script/script.h	/^    OP_NOT = 0x91,$/;"	e	enum:opcodetype
OP_NOTIF	zcash/script/script.h	/^    OP_NOTIF = 0x64,$/;"	e	enum:opcodetype
OP_NUMEQUAL	zcash/script/script.h	/^    OP_NUMEQUAL = 0x9c,$/;"	e	enum:opcodetype
OP_NUMEQUALVERIFY	zcash/script/script.h	/^    OP_NUMEQUALVERIFY = 0x9d,$/;"	e	enum:opcodetype
OP_NUMNOTEQUAL	zcash/script/script.h	/^    OP_NUMNOTEQUAL = 0x9e,$/;"	e	enum:opcodetype
OP_OR	zcash/script/script.h	/^    OP_OR = 0x85,$/;"	e	enum:opcodetype
OP_OVER	zcash/script/script.h	/^    OP_OVER = 0x78,$/;"	e	enum:opcodetype
OP_PICK	zcash/script/script.h	/^    OP_PICK = 0x79,$/;"	e	enum:opcodetype
OP_PUBKEY	zcash/script/script.h	/^    OP_PUBKEY = 0xfe,$/;"	e	enum:opcodetype
OP_PUBKEYHASH	zcash/script/script.h	/^    OP_PUBKEYHASH = 0xfd,$/;"	e	enum:opcodetype
OP_PUBKEYS	zcash/script/script.h	/^    OP_PUBKEYS = 0xfb,$/;"	e	enum:opcodetype
OP_PUSHDATA1	zcash/script/script.h	/^    OP_PUSHDATA1 = 0x4c,$/;"	e	enum:opcodetype
OP_PUSHDATA2	zcash/script/script.h	/^    OP_PUSHDATA2 = 0x4d,$/;"	e	enum:opcodetype
OP_PUSHDATA4	zcash/script/script.h	/^    OP_PUSHDATA4 = 0x4e,$/;"	e	enum:opcodetype
OP_RESERVED	zcash/script/script.h	/^    OP_RESERVED = 0x50,$/;"	e	enum:opcodetype
OP_RESERVED1	zcash/script/script.h	/^    OP_RESERVED1 = 0x89,$/;"	e	enum:opcodetype
OP_RESERVED2	zcash/script/script.h	/^    OP_RESERVED2 = 0x8a,$/;"	e	enum:opcodetype
OP_RETURN	zcash/script/script.h	/^    OP_RETURN = 0x6a,$/;"	e	enum:opcodetype
OP_RIGHT	zcash/script/script.h	/^    OP_RIGHT = 0x81,$/;"	e	enum:opcodetype
OP_RIPEMD160	zcash/script/script.h	/^    OP_RIPEMD160 = 0xa6,$/;"	e	enum:opcodetype
OP_ROLL	zcash/script/script.h	/^    OP_ROLL = 0x7a,$/;"	e	enum:opcodetype
OP_ROT	zcash/script/script.h	/^    OP_ROT = 0x7b,$/;"	e	enum:opcodetype
OP_RSHIFT	zcash/script/script.h	/^    OP_RSHIFT = 0x99,$/;"	e	enum:opcodetype
OP_SHA1	zcash/script/script.h	/^    OP_SHA1 = 0xa7,$/;"	e	enum:opcodetype
OP_SHA256	zcash/script/script.h	/^    OP_SHA256 = 0xa8,$/;"	e	enum:opcodetype
OP_SIZE	zcash/script/script.h	/^    OP_SIZE = 0x82,$/;"	e	enum:opcodetype
OP_SMALLDATA	zcash/script/script.h	/^    OP_SMALLDATA = 0xf9,$/;"	e	enum:opcodetype
OP_SMALLINTEGER	zcash/script/script.h	/^    OP_SMALLINTEGER = 0xfa,$/;"	e	enum:opcodetype
OP_SUB	zcash/script/script.h	/^    OP_SUB = 0x94,$/;"	e	enum:opcodetype
OP_SUBSTR	zcash/script/script.h	/^    OP_SUBSTR = 0x7f,$/;"	e	enum:opcodetype
OP_SWAP	zcash/script/script.h	/^    OP_SWAP = 0x7c,$/;"	e	enum:opcodetype
OP_TOALTSTACK	zcash/script/script.h	/^    OP_TOALTSTACK = 0x6b,$/;"	e	enum:opcodetype
OP_TRUE	zcash/script/script.h	/^    OP_TRUE=OP_1,$/;"	e	enum:opcodetype
OP_TUCK	zcash/script/script.h	/^    OP_TUCK = 0x7d,$/;"	e	enum:opcodetype
OP_VER	zcash/script/script.h	/^    OP_VER = 0x62,$/;"	e	enum:opcodetype
OP_VERIF	zcash/script/script.h	/^    OP_VERIF = 0x65,$/;"	e	enum:opcodetype
OP_VERIFY	zcash/script/script.h	/^    OP_VERIFY = 0x69,$/;"	e	enum:opcodetype
OP_VERNOTIF	zcash/script/script.h	/^    OP_VERNOTIF = 0x66,$/;"	e	enum:opcodetype
OP_WITHIN	zcash/script/script.h	/^    OP_WITHIN = 0xa5,$/;"	e	enum:opcodetype
OP_XOR	zcash/script/script.h	/^    OP_XOR = 0x86,$/;"	e	enum:opcodetype
OR	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	38;"	d
OTOOL	libsodium/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/contrib/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/dist-build/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/msvc-scripts/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/src/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/src/libsodium/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/src/libsodium/include/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/test/Makefile	/^OTOOL = $/;"	m
OTOOL	libsodium/test/default/Makefile	/^OTOOL = $/;"	m
OTOOL	zcash/secp256k1/Makefile	/^OTOOL = $/;"	m
OTOOL64	libsodium/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/contrib/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/dist-build/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/msvc-scripts/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/src/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/src/libsodium/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/src/libsodium/include/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/test/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	libsodium/test/default/Makefile	/^OTOOL64 = $/;"	m
OTOOL64	zcash/secp256k1/Makefile	/^OTOOL64 = $/;"	m
OUTPUT_NEWLINE	libsnark/src/common/serialization.hpp	64;"	d
OUTPUT_SEPARATOR	libsnark/src/common/serialization.hpp	65;"	d
OUTPUT_SIZE	zcash/crypto/hmac_sha256.h	/^    static const size_t OUTPUT_SIZE = 32;$/;"	m	class:CHMAC_SHA256
OUTPUT_SIZE	zcash/crypto/hmac_sha512.h	/^    static const size_t OUTPUT_SIZE = 64;$/;"	m	class:CHMAC_SHA512
OUTPUT_SIZE	zcash/crypto/ripemd160.h	/^    static const size_t OUTPUT_SIZE = 20;$/;"	m	class:CRIPEMD160
OUTPUT_SIZE	zcash/crypto/sha1.h	/^    static const size_t OUTPUT_SIZE = 20;$/;"	m	class:CSHA1
OUTPUT_SIZE	zcash/crypto/sha256.h	/^    static const size_t OUTPUT_SIZE = 32;$/;"	m	class:CSHA256
OUTPUT_SIZE	zcash/crypto/sha512.h	/^    static const size_t OUTPUT_SIZE = 64;$/;"	m	class:CSHA512
OUTPUT_SIZE	zcash/hash.h	/^    static const size_t OUTPUT_SIZE = CRIPEMD160::OUTPUT_SIZE;$/;"	m	class:CHash160
OUTPUT_SIZE	zcash/hash.h	/^    static const size_t OUTPUT_SIZE = CSHA256::OUTPUT_SIZE;$/;"	m	class:CHash256
OUT_LEN	libsodium/test/default/pwhash.c	5;"	d	file:
OUT_LEN	libsodium/test/default/pwhash_argon2id.c	5;"	d	file:
OUT_LEN	libsodium/test/default/pwhash_scrypt.c	5;"	d	file:
OpenDebugLog	zcash/zcashutil.cpp	/^void OpenDebugLog()$/;"	f
OptimisedSolve	zcash/crypto/equihash.cpp	/^bool Equihash<N,K>::OptimisedSolve(const eh_HashState& base_state,$/;"	f	class:Equihash
OutBasisChange	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	570;"	d
PACKAGE	Makefile	/^PACKAGE = full-package-name$/;"	m
PACKAGE	config.h	225;"	d
PACKAGE	demo/Makefile	/^PACKAGE = full-package-name$/;"	m
PACKAGE	libsodium/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/contrib/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/dist-build/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/msvc-scripts/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/packaging/dotnet-core/prepare.py	/^PACKAGE = 'libsodium'$/;"	v
PACKAGE	libsodium/src/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/src/libsodium/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/src/libsodium/include/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/test/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	libsodium/test/default/Makefile	/^PACKAGE = libsodium$/;"	m
PACKAGE	zcash/Makefile	/^PACKAGE = full-package-name$/;"	m
PACKAGE	zcash/secp256k1/Makefile	/^PACKAGE = libsecp256k1$/;"	m
PACKAGE	zcash/secp256k1/src/libsecp256k1-config.h	69;"	d
PACKAGE_BUGREPORT	Makefile	/^PACKAGE_BUGREPORT = BUG-REPORT-ADDRESS$/;"	m
PACKAGE_BUGREPORT	config.h	228;"	d
PACKAGE_BUGREPORT	demo/Makefile	/^PACKAGE_BUGREPORT = BUG-REPORT-ADDRESS$/;"	m
PACKAGE_BUGREPORT	libsodium/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/contrib/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/dist-build/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/msvc-scripts/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/src/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/src/libsodium/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/src/libsodium/include/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/test/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	libsodium/test/default/Makefile	/^PACKAGE_BUGREPORT = https:\/\/github.com\/jedisct1\/libsodium\/issues$/;"	m
PACKAGE_BUGREPORT	zcash/Makefile	/^PACKAGE_BUGREPORT = BUG-REPORT-ADDRESS$/;"	m
PACKAGE_BUGREPORT	zcash/secp256k1/Makefile	/^PACKAGE_BUGREPORT = $/;"	m
PACKAGE_BUGREPORT	zcash/secp256k1/src/libsecp256k1-config.h	72;"	d
PACKAGE_NAME	Makefile	/^PACKAGE_NAME = FULL-PACKAGE-NAME$/;"	m
PACKAGE_NAME	config.h	231;"	d
PACKAGE_NAME	demo/Makefile	/^PACKAGE_NAME = FULL-PACKAGE-NAME$/;"	m
PACKAGE_NAME	libsodium/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/contrib/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/dist-build/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/msvc-scripts/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/src/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/src/libsodium/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/src/libsodium/include/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/test/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	libsodium/test/default/Makefile	/^PACKAGE_NAME = libsodium$/;"	m
PACKAGE_NAME	zcash/Makefile	/^PACKAGE_NAME = FULL-PACKAGE-NAME$/;"	m
PACKAGE_NAME	zcash/secp256k1/Makefile	/^PACKAGE_NAME = libsecp256k1$/;"	m
PACKAGE_NAME	zcash/secp256k1/src/libsecp256k1-config.h	75;"	d
PACKAGE_STRING	Makefile	/^PACKAGE_STRING = FULL-PACKAGE-NAME VERSION$/;"	m
PACKAGE_STRING	config.h	234;"	d
PACKAGE_STRING	demo/Makefile	/^PACKAGE_STRING = FULL-PACKAGE-NAME VERSION$/;"	m
PACKAGE_STRING	libsodium/Makefile	/^PACKAGE_STRING = libsodium 1.0.13$/;"	m
PACKAGE_STRING	libsodium/contrib/Makefile	/^PACKAGE_STRING = libsodium 1.0.13$/;"	m
PACKAGE_STRING	libsodium/dist-build/Makefile	/^PACKAGE_STRING = libsodium 1.0.13$/;"	m
PACKAGE_STRING	libsodium/msvc-scripts/Makefile	/^PACKAGE_STRING = libsodium 1.0.13$/;"	m
PACKAGE_STRING	libsodium/src/Makefile	/^PACKAGE_STRING = libsodium 1.0.13$/;"	m
PACKAGE_STRING	libsodium/src/libsodium/Makefile	/^PACKAGE_STRING = libsodium 1.0.13$/;"	m
PACKAGE_STRING	libsodium/src/libsodium/include/Makefile	/^PACKAGE_STRING = libsodium 1.0.13$/;"	m
PACKAGE_STRING	libsodium/test/Makefile	/^PACKAGE_STRING = libsodium 1.0.13$/;"	m
PACKAGE_STRING	libsodium/test/default/Makefile	/^PACKAGE_STRING = libsodium 1.0.13$/;"	m
PACKAGE_STRING	zcash/Makefile	/^PACKAGE_STRING = FULL-PACKAGE-NAME VERSION$/;"	m
PACKAGE_STRING	zcash/secp256k1/Makefile	/^PACKAGE_STRING = libsecp256k1 0.1$/;"	m
PACKAGE_STRING	zcash/secp256k1/src/libsecp256k1-config.h	78;"	d
PACKAGE_TARNAME	Makefile	/^PACKAGE_TARNAME = full-package-name$/;"	m
PACKAGE_TARNAME	config.h	237;"	d
PACKAGE_TARNAME	demo/Makefile	/^PACKAGE_TARNAME = full-package-name$/;"	m
PACKAGE_TARNAME	libsodium/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/contrib/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/dist-build/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/msvc-scripts/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/src/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/src/libsodium/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/src/libsodium/include/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/test/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	libsodium/test/default/Makefile	/^PACKAGE_TARNAME = libsodium$/;"	m
PACKAGE_TARNAME	zcash/Makefile	/^PACKAGE_TARNAME = full-package-name$/;"	m
PACKAGE_TARNAME	zcash/secp256k1/Makefile	/^PACKAGE_TARNAME = libsecp256k1$/;"	m
PACKAGE_TARNAME	zcash/secp256k1/src/libsecp256k1-config.h	81;"	d
PACKAGE_URL	Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	config.h	240;"	d
PACKAGE_URL	demo/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	libsodium/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/contrib/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/dist-build/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/msvc-scripts/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/src/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/src/libsodium/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/src/libsodium/include/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/test/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	libsodium/test/default/Makefile	/^PACKAGE_URL = https:\/\/github.com\/jedisct1\/libsodium$/;"	m
PACKAGE_URL	zcash/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	zcash/secp256k1/Makefile	/^PACKAGE_URL = $/;"	m
PACKAGE_URL	zcash/secp256k1/src/libsecp256k1-config.h	84;"	d
PACKAGE_VERSION	Makefile	/^PACKAGE_VERSION = VERSION$/;"	m
PACKAGE_VERSION	config.h	243;"	d
PACKAGE_VERSION	demo/Makefile	/^PACKAGE_VERSION = VERSION$/;"	m
PACKAGE_VERSION	libsodium/Makefile	/^PACKAGE_VERSION = 1.0.13$/;"	m
PACKAGE_VERSION	libsodium/contrib/Makefile	/^PACKAGE_VERSION = 1.0.13$/;"	m
PACKAGE_VERSION	libsodium/dist-build/Makefile	/^PACKAGE_VERSION = 1.0.13$/;"	m
PACKAGE_VERSION	libsodium/msvc-scripts/Makefile	/^PACKAGE_VERSION = 1.0.13$/;"	m
PACKAGE_VERSION	libsodium/src/Makefile	/^PACKAGE_VERSION = 1.0.13$/;"	m
PACKAGE_VERSION	libsodium/src/libsodium/Makefile	/^PACKAGE_VERSION = 1.0.13$/;"	m
PACKAGE_VERSION	libsodium/src/libsodium/include/Makefile	/^PACKAGE_VERSION = 1.0.13$/;"	m
PACKAGE_VERSION	libsodium/test/Makefile	/^PACKAGE_VERSION = 1.0.13$/;"	m
PACKAGE_VERSION	libsodium/test/default/Makefile	/^PACKAGE_VERSION = 1.0.13$/;"	m
PACKAGE_VERSION	zcash/Makefile	/^PACKAGE_VERSION = VERSION$/;"	m
PACKAGE_VERSION	zcash/secp256k1/Makefile	/^PACKAGE_VERSION = 0.1$/;"	m
PACKAGE_VERSION	zcash/secp256k1/src/libsecp256k1-config.h	87;"	d
PAD	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^static const uint8_t PAD[64] = { 0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,$/;"	v	file:
PAD	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^static const uint8_t PAD[128] = {$/;"	v	file:
PAIRTYPE	zcash/utilstrencodings.h	23;"	d
PATH_SEPARATOR	Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	demo/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/contrib/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/dist-build/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/msvc-scripts/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/src/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/src/libsodium/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/src/libsodium/include/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/test/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	libsodium/test/default/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	zcash/Makefile	/^PATH_SEPARATOR = :$/;"	m
PATH_SEPARATOR	zcash/secp256k1/Makefile	/^PATH_SEPARATOR = :$/;"	m
PBKDF2_SHA256	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c	/^PBKDF2_SHA256(const uint8_t *passwd, size_t passwdlen, const uint8_t *salt,$/;"	f
PB_VARIABLE_HPP_	libsnark/src/gadgetlib1/pb_variable.hpp	9;"	d
PB_VARIABLE_TCC_	libsnark/src/gadgetlib1/pb_variable.tcc	9;"	d	file:
PKG_CONFIG	zcash/secp256k1/Makefile	/^PKG_CONFIG = \/usr\/bin\/pkg-config$/;"	m
PKG_CONFIG_LIBDIR	zcash/secp256k1/Makefile	/^PKG_CONFIG_LIBDIR = $/;"	m
PKG_CONFIG_PATH	zcash/secp256k1/Makefile	/^PKG_CONFIG_PATH = $/;"	m
PLUS	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	31;"	d	file:
PLUSONE	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	32;"	d	file:
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	11;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	7;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	9;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	19;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	21;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	23;"	d
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	29;"	d	file:
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	31;"	d	file:
POLY1305_NOINLINE	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	33;"	d	file:
PORT	zcash/secp256k1/Makefile	/^PORT = $/;"	m
POST_INSTALL	Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	demo/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/contrib/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/dist-build/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/msvc-scripts/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/src/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/src/libsodium/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/src/libsodium/include/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/test/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	libsodium/test/default/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	zcash/Makefile	/^POST_INSTALL = :$/;"	m
POST_INSTALL	zcash/secp256k1/Makefile	/^POST_INSTALL = :$/;"	m
POST_UNINSTALL	Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	demo/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/contrib/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/dist-build/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/msvc-scripts/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/src/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/src/libsodium/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/src/libsodium/include/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/test/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	libsodium/test/default/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	zcash/Makefile	/^POST_UNINSTALL = :$/;"	m
POST_UNINSTALL	zcash/secp256k1/Makefile	/^POST_UNINSTALL = :$/;"	m
PRE_INSTALL	Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	demo/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/contrib/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/dist-build/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/msvc-scripts/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/src/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/src/libsodium/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/src/libsodium/include/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/test/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	libsodium/test/default/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	zcash/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_INSTALL	zcash/secp256k1/Makefile	/^PRE_INSTALL = :$/;"	m
PRE_UNINSTALL	Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	demo/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/contrib/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/dist-build/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/msvc-scripts/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/src/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/src/libsodium/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/src/libsodium/include/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/test/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	libsodium/test/default/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	zcash/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRE_UNINSTALL	zcash/secp256k1/Makefile	/^PRE_UNINSTALL = :$/;"	m
PRF	zcash/prf.cpp	/^uint256 PRF(bool a, bool b, bool c, bool d,$/;"	f
PRF_addr	zcash/prf.cpp	/^uint256 PRF_addr(const uint252& a_sk, unsigned char t)$/;"	f
PRF_addr_a_pk	zcash/prf.cpp	/^uint256 PRF_addr_a_pk(const uint252& a_sk)$/;"	f
PRF_addr_a_pk_gadget	zcash/circuit/prfs.tcc	/^    PRF_addr_a_pk_gadget($/;"	f	class:PRF_addr_a_pk_gadget
PRF_addr_a_pk_gadget	zcash/circuit/prfs.tcc	/^class PRF_addr_a_pk_gadget : public PRF_gadget<FieldT> {$/;"	c	file:
PRF_addr_sk_enc	zcash/prf.cpp	/^uint256 PRF_addr_sk_enc(const uint252& a_sk)$/;"	f
PRF_gadget	zcash/circuit/prfs.tcc	/^    PRF_gadget($/;"	f	class:PRF_gadget
PRF_gadget	zcash/circuit/prfs.tcc	/^class PRF_gadget : gadget<FieldT> {$/;"	c	file:
PRF_nf	zcash/prf.cpp	/^uint256 PRF_nf(const uint252& a_sk, const uint256& rho)$/;"	f
PRF_nf_gadget	zcash/circuit/prfs.tcc	/^    PRF_nf_gadget($/;"	f	class:PRF_nf_gadget
PRF_nf_gadget	zcash/circuit/prfs.tcc	/^class PRF_nf_gadget : public PRF_gadget<FieldT> {$/;"	c	file:
PRF_pk	zcash/prf.cpp	/^uint256 PRF_pk(const uint252& a_sk, size_t i0, const uint256& h_sig)$/;"	f
PRF_pk_gadget	zcash/circuit/prfs.tcc	/^    PRF_pk_gadget($/;"	f	class:PRF_pk_gadget
PRF_pk_gadget	zcash/circuit/prfs.tcc	/^class PRF_pk_gadget : public PRF_gadget<FieldT> {$/;"	c	file:
PRF_rho	zcash/prf.cpp	/^uint256 PRF_rho(const uint252& phi, size_t i0, const uint256& h_sig)$/;"	f
PRF_rho_gadget	zcash/circuit/prfs.tcc	/^    PRF_rho_gadget($/;"	f	class:PRF_rho_gadget
PRF_rho_gadget	zcash/circuit/prfs.tcc	/^class PRF_rho_gadget : public PRF_gadget<FieldT> {$/;"	c	file:
PRINT_CONSTRAINT_PROFILING	libsnark/src/gadgetlib1/constraint_profiling.cpp	/^size_t PRINT_CONSTRAINT_PROFILING()$/;"	f	namespace:libsnark
PRIO_MAX	zcash/compat.h	84;"	d
PRIVATE_KEY_SIZE	zcash/key.h	/^const unsigned int PRIVATE_KEY_SIZE            = 279;$/;"	v
PROFILE_CONSTRAINTS	libsnark/src/gadgetlib1/constraint_profiling.hpp	32;"	d
PROFILING_HPP_	libsnark/src/common/profiling.hpp	15;"	d
PROGRAMS	demo/Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PROGRAMS	zcash/Makefile	/^PROGRAMS = $(bin_PROGRAMS)$/;"	m
PROGRAMS	zcash/secp256k1/Makefile	/^PROGRAMS = $(noinst_PROGRAMS)$/;"	m
PROPSFILE	libsodium/packaging/dotnet-core/prepare.py	/^PROPSFILE = 'libsodium.props'$/;"	v
PROTOBOARD_HPP_	libsnark/src/gadgetlib1/protoboard.hpp	9;"	d
PROTOBOARD_TCC_	libsnark/src/gadgetlib1/protoboard.tcc	9;"	d	file:
PROTOCOL_VERSION	zcash/version.h	/^static const int PROTOCOL_VERSION = 170002;$/;"	v
PTHREAD_CC	libsodium/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	libsodium/contrib/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	libsodium/dist-build/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	libsodium/msvc-scripts/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	libsodium/src/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	libsodium/src/libsodium/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	libsodium/src/libsodium/include/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	libsodium/test/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CC	libsodium/test/default/Makefile	/^PTHREAD_CC = gcc$/;"	m
PTHREAD_CFLAGS	libsodium/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	libsodium/contrib/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	libsodium/dist-build/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	libsodium/msvc-scripts/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	libsodium/src/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	libsodium/src/libsodium/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	libsodium/src/libsodium/include/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	libsodium/test/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_CFLAGS	libsodium/test/default/Makefile	/^PTHREAD_CFLAGS = -pthread$/;"	m
PTHREAD_LIBS	libsodium/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	libsodium/contrib/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	libsodium/dist-build/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	libsodium/msvc-scripts/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	libsodium/src/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	libsodium/src/libsodium/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	libsodium/src/libsodium/include/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	libsodium/test/Makefile	/^PTHREAD_LIBS = $/;"	m
PTHREAD_LIBS	libsodium/test/default/Makefile	/^PTHREAD_LIBS = $/;"	m
PT_GUARDED_BY	zcash/threadsafety.h	20;"	d
PT_GUARDED_BY	zcash/threadsafety.h	39;"	d
PT_GUARDED_VAR	zcash/threadsafety.h	21;"	d
PT_GUARDED_VAR	zcash/threadsafety.h	40;"	d
PUBLIC_KEY_SIZE	zcash/pubkey.h	/^const unsigned int PUBLIC_KEY_SIZE             = 65;$/;"	v
PUBLIC_PARAMS_HPP_	libsnark/src/algebra/curves/public_params.hpp	9;"	d
PX	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^    alt_bn128_Fq PX;$/;"	m	struct:libsnark::alt_bn128_ate_G1_precomp
PY	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^    alt_bn128_Fq PY;$/;"	m	struct:libsnark::alt_bn128_ate_G1_precomp
Params	zcash/consensus/params.h	/^struct Params {$/;"	s	namespace:Consensus
ParseDouble	zcash/utilstrencodings.cpp	/^bool ParseDouble(const std::string& str, double *out)$/;"	f
ParseFixedPoint	zcash/utilstrencodings.cpp	/^bool ParseFixedPoint(const std::string &val, int decimals, int64_t *amount_out)$/;"	f
ParseHex	zcash/utilstrencodings.cpp	/^vector<unsigned char> ParseHex(const char* psz)$/;"	f
ParseHex	zcash/utilstrencodings.cpp	/^vector<unsigned char> ParseHex(const string& str)$/;"	f
ParseInt32	zcash/utilstrencodings.cpp	/^bool ParseInt32(const std::string& str, int32_t *out)$/;"	f
ParseInt64	zcash/utilstrencodings.cpp	/^bool ParseInt64(const std::string& str, int64_t *out)$/;"	f
ParseParameters	zcash/zcashutil.cpp	/^void ParseParameters(int argc, const char* const argv[])$/;"	f
ParsePrechecks	zcash/utilstrencodings.cpp	/^static bool ParsePrechecks(const std::string& str)$/;"	f	file:
PartialEnd	zcash/crypto/equihash.h	/^    PartialEnd$/;"	e	enum:EhSolverCancelCheck
PartialGeneration	zcash/crypto/equihash.h	/^    PartialGeneration,$/;"	e	enum:EhSolverCancelCheck
PartialIndexEnd	zcash/crypto/equihash.h	/^    PartialIndexEnd,$/;"	e	enum:EhSolverCancelCheck
PartialSorting	zcash/crypto/equihash.h	/^    PartialSorting,$/;"	e	enum:EhSolverCancelCheck
PartialSubtreeEnd	zcash/crypto/equihash.h	/^    PartialSubtreeEnd,$/;"	e	enum:EhSolverCancelCheck
PathFiller	zcash/IncrementalMerkleTree.cpp	/^    PathFiller() : queue() { }$/;"	f	class:libzcash::PathFiller
PathFiller	zcash/IncrementalMerkleTree.cpp	/^    PathFiller(std::deque<Hash> queue) : queue(queue) { }$/;"	f	class:libzcash::PathFiller
PathFiller	zcash/IncrementalMerkleTree.cpp	/^class PathFiller {$/;"	c	namespace:libzcash	file:
PaymentAddress	zcash/Address.hpp	/^    PaymentAddress() : a_pk(), pk_enc() { }$/;"	f	class:libzcash::PaymentAddress
PaymentAddress	zcash/Address.hpp	/^    PaymentAddress(uint256 a_pk, uint256 pk_enc) : a_pk(a_pk), pk_enc(pk_enc) { }$/;"	f	class:libzcash::PaymentAddress
PaymentAddress	zcash/Address.hpp	/^class PaymentAddress {$/;"	c	namespace:libzcash
Plaintext	zcash/NoteEncryption.hpp	/^    typedef boost::array<unsigned char, MLEN> Plaintext;$/;"	t	class:libzcash::NoteDecryption
Plaintext	zcash/NoteEncryption.hpp	/^    typedef boost::array<unsigned char, MLEN> Plaintext;$/;"	t	class:libzcash::NoteEncryption
PrintExceptionContinue	zcash/zcashutil.cpp	/^void PrintExceptionContinue(const std::exception* pex, const char* pszThread)$/;"	f
PrintLockContention	zcash/sync.cpp	/^void PrintLockContention(const char* pszName, const char* pszFile, int nLine)$/;"	f
PrivacyInfo	zcash/zcashutil.cpp	/^std::string PrivacyInfo()$/;"	f
ProcessMantissaDigit	zcash/utilstrencodings.cpp	/^static inline bool ProcessMantissaDigit(char ch, int64_t &mantissa, int &mantissa_tzeros)$/;"	f	file:
ProduceSignature	zcash/script/sign.cpp	/^bool ProduceSignature(const BaseSignatureCreator& creator, const CScript& fromPubKey, CScript& scriptSig)$/;"	f
ProofVerifier	zcash/Proof.hpp	/^    ProofVerifier(bool perform_verification) : perform_verification(perform_verification) { }$/;"	f	class:libzcash::ProofVerifier
ProofVerifier	zcash/Proof.hpp	/^class ProofVerifier {$/;"	c	namespace:libzcash
PushAll	zcash/script/sign.cpp	/^static CScript PushAll(const vector<valtype>& values)$/;"	f	file:
QAP_HPP_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	23;"	d
QAP_TCC_	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	15;"	d	file:
QUARTERROUND	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	8;"	d	file:
QUARTERROUND	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	34;"	d	file:
QX	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^    alt_bn128_Fq2 QX;$/;"	m	struct:libsnark::alt_bn128_ate_G2_precomp
QY	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^    alt_bn128_Fq2 QY;$/;"	m	struct:libsnark::alt_bn128_ate_G2_precomp
R	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^R = lambda x, n: (x & 0xffffffff) >> n$/;"	v
R	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint32_t           R[5];                        \/*  20 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
R	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	122;"	d	file:
R	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	164;"	d	file:
R11	zcash/crypto/ripemd160.cpp	/^void inline R11(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f1(b, c, d), x, 0, r); }$/;"	f	namespace:__anon28::ripemd160
R12	zcash/crypto/ripemd160.cpp	/^void inline R12(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f5(b, c, d), x, 0x50A28BE6ul, r); }$/;"	f	namespace:__anon28::ripemd160
R1CS_EXAMPLES_HPP_	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.hpp	14;"	d
R1CS_EXAMPLES_TCC_	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.tcc	16;"	d	file:
R1CS_HPP_	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	18;"	d
R1CS_PPZKSNARK_HPP_	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	47;"	d
R1CS_PPZKSNARK_PARAMS_HPP_	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark_params.hpp	13;"	d
R1CS_PPZKSNARK_PP_HPP_	libsnark/src/common/default_types/r1cs_ppzksnark_pp.hpp	14;"	d
R1CS_PPZKSNARK_TCC_	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	15;"	d	file:
R1CS_TCC_	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	18;"	d	file:
R1CS_TO_QAP_HPP_	libsnark/src/reductions/r1cs_to_qap/r1cs_to_qap.hpp	33;"	d
R1CS_TO_QAP_TCC_	libsnark/src/reductions/r1cs_to_qap/r1cs_to_qap.tcc	15;"	d	file:
R2	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint32_t           R2[5];                       \/*  20 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
R21	zcash/crypto/ripemd160.cpp	/^void inline R21(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f2(b, c, d), x, 0x5A827999ul, r); }$/;"	f	namespace:__anon28::ripemd160
R22	zcash/crypto/ripemd160.cpp	/^void inline R22(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f4(b, c, d), x, 0x5C4DD124ul, r); }$/;"	f	namespace:__anon28::ripemd160
R31	zcash/crypto/ripemd160.cpp	/^void inline R31(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f3(b, c, d), x, 0x6ED9EBA1ul, r); }$/;"	f	namespace:__anon28::ripemd160
R32	zcash/crypto/ripemd160.cpp	/^void inline R32(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f3(b, c, d), x, 0x6D703EF3ul, r); }$/;"	f	namespace:__anon28::ripemd160
R4	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint32_t           R4[5];                       \/*  20 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
R41	zcash/crypto/ripemd160.cpp	/^void inline R41(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f4(b, c, d), x, 0x8F1BBCDCul, r); }$/;"	f	namespace:__anon28::ripemd160
R42	zcash/crypto/ripemd160.cpp	/^void inline R42(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f2(b, c, d), x, 0x7A6D76E9ul, r); }$/;"	f	namespace:__anon28::ripemd160
R51	zcash/crypto/ripemd160.cpp	/^void inline R51(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f5(b, c, d), x, 0xA953FD4Eul, r); }$/;"	f	namespace:__anon28::ripemd160
R52	zcash/crypto/ripemd160.cpp	/^void inline R52(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t x, int r) { Round(a, b, c, d, e, f1(b, c, d), x, 0, r); }$/;"	f	namespace:__anon28::ripemd160
RANDOMBYTES_DEFAULT_IMPLEMENTATION	libsodium/src/libsodium/randombytes/randombytes.c	33;"	d	file:
RANDOMBYTES_DEFAULT_IMPLEMENTATION	libsodium/src/libsodium/randombytes/randombytes.c	36;"	d	file:
RANDOMBYTES_DEFAULT_IMPLEMENTATION	libsodium/src/libsodium/randombytes/randombytes.c	38;"	d	file:
RANLIB	libsodium/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/contrib/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/dist-build/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/msvc-scripts/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/src/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/src/libsodium/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/src/libsodium/include/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/test/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	libsodium/test/default/Makefile	/^RANLIB = ranlib$/;"	m
RANLIB	zcash/secp256k1/Makefile	/^RANLIB = \/usr\/bin\/ranlib$/;"	m
READWRITE	zcash/serialize.h	167;"	d
RECHECK_LOGS	libsodium/test/default/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECHECK_LOGS	zcash/secp256k1/Makefile	/^RECHECK_LOGS = $(TEST_LOGS)$/;"	m
RECURSIVE_CLEAN_TARGETS	Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	libsodium/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	libsodium/src/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	libsodium/src/libsodium/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_CLEAN_TARGETS	libsodium/test/Makefile	/^RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\\$/;"	m
RECURSIVE_TARGETS	Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	libsodium/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	libsodium/src/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	libsodium/src/libsodium/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
RECURSIVE_TARGETS	libsodium/test/Makefile	/^RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \\$/;"	m
REDMASK51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^REDMASK51:   .quad 0x0007FFFFFFFFFFFF$/;"	l
REDMASK51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	17;"	d
REDUCE_6_LIMB_PRODUCT	libsnark/src/algebra/fields/fp_aux.tcc	299;"	d	file:
RED_DECL	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	311;"	d	file:
RED_MUL_HIGH	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	314;"	d	file:
RED_MUL_LOW	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	313;"	d	file:
RED_MUL_MID	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	315;"	d	file:
RED_SHUFFLE	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	312;"	d	file:
REF	zcash/serialize.h	/^inline T& REF(const T& val)$/;"	f
REJECT_CHECKPOINT	zcash/consensus/validation.h	/^static const unsigned char REJECT_CHECKPOINT = 0x43;$/;"	v
REJECT_DUPLICATE	zcash/consensus/validation.h	/^static const unsigned char REJECT_DUPLICATE = 0x12;$/;"	v
REJECT_DUST	zcash/consensus/validation.h	/^static const unsigned char REJECT_DUST = 0x41;$/;"	v
REJECT_INSUFFICIENTFEE	zcash/consensus/validation.h	/^static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;$/;"	v
REJECT_INVALID	zcash/consensus/validation.h	/^static const unsigned char REJECT_INVALID = 0x10;$/;"	v
REJECT_MALFORMED	zcash/consensus/validation.h	/^static const unsigned char REJECT_MALFORMED = 0x01;$/;"	v
REJECT_NONSTANDARD	zcash/consensus/validation.h	/^static const unsigned char REJECT_NONSTANDARD = 0x40;$/;"	v
REJECT_OBSOLETE	zcash/consensus/validation.h	/^static const unsigned char REJECT_OBSOLETE = 0x11;$/;"	v
RND	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^    def RND(a,b,c,d,e,f,g,h,i,ki):$/;"	f	function:sha_transform
RND	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	83;"	d	file:
RND	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	99;"	d	file:
RNDr	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	88;"	d	file:
RNDr	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	104;"	d	file:
ROR	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^ROR = lambda x, y: (((x & 0xffffffff) >> (y & 31)) | (x << (32 - (y & 31)))) & 0xffffffff$/;"	v
ROT16	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	42;"	d
ROT24	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	41;"	d
ROT32	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	40;"	d
ROT63	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	43;"	d
ROTATE	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	29;"	d	file:
ROTATE16	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	25;"	d
ROTATE24	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	29;"	d
ROTB	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	6;"	d
ROTB	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const unsigned char ROTB[16] = {$/;"	v
ROTL32	libsodium/src/libsodium/include/sodium/private/common.h	10;"	d
ROTL32	zcash/hash.cpp	/^inline uint32_t ROTL32(uint32_t x, int8_t r)$/;"	f
ROTL64	libsodium/src/libsodium/include/sodium/private/common.h	17;"	d
ROTR	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	77;"	d	file:
ROTR	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	93;"	d	file:
ROTR32	libsodium/src/libsodium/include/sodium/private/common.h	24;"	d
ROTR64	libsodium/src/libsodium/include/sodium/private/common.h	31;"	d
ROUND	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c	62;"	d	file:
ROUND	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c	90;"	d	file:
ROUND	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h	91;"	d
ROUND	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h	91;"	d
ROUNDS	libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c	13;"	d	file:
ROUNDS	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	29;"	d	file:
ROUNDS	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	24;"	d	file:
ROUNDS	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	29;"	d	file:
ROUNDS	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	21;"	d	file:
RUN_R1CS_PPZKSNARK_HPP_	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/examples/run_r1cs_ppzksnark.hpp	14;"	d
RUN_R1CS_PPZKSNARK_TCC_	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/examples/run_r1cs_ppzksnark.tcc	16;"	d	file:
RaiseFileDescriptorLimit	zcash/zcashutil.cpp	/^int RaiseFileDescriptorLimit(int nMinFD) {$/;"	f
Randomized	zcash/primitives/transaction.cpp	/^JSDescription JSDescription::Randomized($/;"	f	class:JSDescription
Rcubed	libsnark/src/algebra/fields/fp.hpp	/^    static bigint<n> Rcubed;   \/\/ R^3$/;"	m	class:libsnark::Fp_model
Rcubed	libsnark/src/algebra/fields/fp.hpp	/^bigint<n> Fp_model<n, modulus>::Rcubed;$/;"	m	class:libsnark::Fp_model
ReadBE32	zcash/crypto/common.h	/^uint32_t static inline ReadBE32(const unsigned char* ptr)$/;"	f
ReadBE64	zcash/crypto/common.h	/^uint64_t static inline ReadBE64(const unsigned char* ptr)$/;"	f
ReadCompactSize	zcash/serialize.h	/^uint64_t ReadCompactSize(Stream& is)$/;"	f
ReadConfigFile	zcash/zcashutil.cpp	/^void ReadConfigFile(map<string, string>& mapSettingsRet,$/;"	f
ReadLE16	zcash/crypto/common.h	/^uint16_t static inline ReadLE16(const unsigned char* ptr)$/;"	f
ReadLE32	zcash/crypto/common.h	/^uint32_t static inline ReadLE32(const unsigned char* ptr)$/;"	f
ReadLE64	zcash/crypto/common.h	/^uint64_t static inline ReadLE64(const unsigned char* ptr)$/;"	f
ReadVarInt	zcash/serialize.h	/^I ReadVarInt(Stream& is)$/;"	f
ReadVersion	zcash/streams.h	/^    void ReadVersion()           { *this >> nVersion; }$/;"	f	class:CAutoFile
ReadVersion	zcash/streams.h	/^    void ReadVersion()           { *this >> nVersion; }$/;"	f	class:CBaseDataStream
RecoverCompact	zcash/pubkey.cpp	/^bool CPubKey::RecoverCompact(const uint256 &hash, const std::vector<unsigned char>& vchSig) {$/;"	f	class:CPubKey
Release	libsodium/test/default/wintest.bat	/^:Release$/;"	l
Release	zcash/sync.h	/^    void Release()$/;"	f	class:CSemaphoreGrant
ReleaseDLL	libsodium/test/default/wintest.bat	/^:ReleaseDLL$/;"	l
RemoveWatchOnly	zcash/keystore.cpp	/^bool CBasicKeyStore::RemoveWatchOnly(const CScript &dest)$/;"	f	class:CBasicKeyStore
RenameOver	zcash/zcashutil.cpp	/^bool RenameOver(boost::filesystem::path src, boost::filesystem::path dest)$/;"	f
RenameThread	zcash/zcashutil.cpp	/^void RenameThread(const char* name)$/;"	f
Reset	zcash/crypto/ripemd160.cpp	/^CRIPEMD160& CRIPEMD160::Reset()$/;"	f	class:CRIPEMD160
Reset	zcash/crypto/sha1.cpp	/^CSHA1& CSHA1::Reset()$/;"	f	class:CSHA1
Reset	zcash/crypto/sha256.cpp	/^CSHA256& CSHA256::Reset()$/;"	f	class:CSHA256
Reset	zcash/crypto/sha512.cpp	/^CSHA512& CSHA512::Reset()$/;"	f	class:CSHA512
Reset	zcash/hash.h	/^    CHash160& Reset() {$/;"	f	class:CHash160
Reset	zcash/hash.h	/^    CHash256& Reset() {$/;"	f	class:CHash256
Rewind	zcash/streams.h	/^    bool Rewind(size_type n)$/;"	f	class:CBaseDataStream
Round	zcash/crypto/ripemd160.cpp	/^void inline Round(uint32_t& a, uint32_t b, uint32_t& c, uint32_t d, uint32_t e, uint32_t f, uint32_t x, uint32_t k, int r)$/;"	f	namespace:__anon28::ripemd160
Round	zcash/crypto/sha1.cpp	/^void inline Round(uint32_t a, uint32_t& b, uint32_t c, uint32_t d, uint32_t& e, uint32_t f, uint32_t k, uint32_t w)$/;"	f	namespace:__anon30::sha1
Round	zcash/crypto/sha256.cpp	/^void inline Round(uint32_t a, uint32_t b, uint32_t c, uint32_t& d, uint32_t e, uint32_t f, uint32_t g, uint32_t& h, uint32_t k, uint32_t w)$/;"	f	namespace:__anon29::sha256
Round	zcash/crypto/sha512.cpp	/^void inline Round(uint64_t a, uint64_t b, uint64_t c, uint64_t& d, uint64_t e, uint64_t f, uint64_t g, uint64_t& h, uint64_t k, uint64_t w)$/;"	f	namespace:__anon31::sha512
Round	zcash/secp256k1/src/hash_impl.h	23;"	d
Round	zcash/secp256k1/src/hash_impl.h	273;"	d
RoundEnd	zcash/crypto/equihash.h	/^    RoundEnd,$/;"	e	enum:EhSolverCancelCheck
Rsquared	libsnark/src/algebra/fields/fp.hpp	/^    static bigint<n> Rsquared; \/\/ R^2, where R = W^k, where k = ??$/;"	m	class:libsnark::Fp_model
Rsquared	libsnark/src/algebra/fields/fp.hpp	/^bigint<n> Fp_model<n, modulus>::Rsquared;$/;"	m	class:libsnark::Fp_model
RtlGenRandom	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	39;"	d	file:
RtlGenRandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	39;"	d	file:
S	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable_array<FieldT> S;$/;"	m	class:libsnark::inner_product_gadget
S	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^S = lambda x, n: ROR(x, n)$/;"	v
S0	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	78;"	d	file:
S0	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	94;"	d	file:
S1	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	79;"	d	file:
S1	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	95;"	d	file:
SAFECODE_HOME	libsodium/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/contrib/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/dist-build/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/msvc-scripts/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/src/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/src/libsodium/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/src/libsodium/include/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/test/Makefile	/^SAFECODE_HOME = $/;"	m
SAFECODE_HOME	libsodium/test/default/Makefile	/^SAFECODE_HOME = $/;"	m
SALSA20_2ROUNDS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	206;"	d	file:
SALSA20_2ROUNDS	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	65;"	d	file:
SALSA20_8_XOR	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	207;"	d	file:
SALSA20_8_XOR	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	91;"	d	file:
SALSA20_RANDOM_BLOCK_SIZE	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	51;"	d	file:
SB	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	419;"	d	file:
SB	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	460;"	d	file:
SC	zcash/secp256k1/src/ecmult_static_context.h	1159;"	d
SC	zcash/secp256k1/src/ecmult_static_context.h	4;"	d
SCOPED_LOCKABLE	zcash/threadsafety.h	17;"	d
SCOPED_LOCKABLE	zcash/threadsafety.h	36;"	d
SCRIPT_ERR_BAD_OPCODE	zcash/script/script_error.h	/^    SCRIPT_ERR_BAD_OPCODE,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_CHECKMULTISIGVERIFY	zcash/script/script_error.h	/^    SCRIPT_ERR_CHECKMULTISIGVERIFY,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_CHECKSIGVERIFY	zcash/script/script_error.h	/^    SCRIPT_ERR_CHECKSIGVERIFY,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_CLEANSTACK	zcash/script/script_error.h	/^    SCRIPT_ERR_CLEANSTACK,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_DISABLED_OPCODE	zcash/script/script_error.h	/^    SCRIPT_ERR_DISABLED_OPCODE,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS	zcash/script/script_error.h	/^    SCRIPT_ERR_DISCOURAGE_UPGRADABLE_NOPS,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_EQUALVERIFY	zcash/script/script_error.h	/^    SCRIPT_ERR_EQUALVERIFY,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_ERROR_COUNT	zcash/script/script_error.h	/^    SCRIPT_ERR_ERROR_COUNT$/;"	e	enum:ScriptError_t
SCRIPT_ERR_EVAL_FALSE	zcash/script/script_error.h	/^    SCRIPT_ERR_EVAL_FALSE,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_INVALID_ALTSTACK_OPERATION	zcash/script/script_error.h	/^    SCRIPT_ERR_INVALID_ALTSTACK_OPERATION,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_INVALID_STACK_OPERATION	zcash/script/script_error.h	/^    SCRIPT_ERR_INVALID_STACK_OPERATION,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_LAST	zcash/script/script_error.h	58;"	d
SCRIPT_ERR_MINIMALDATA	zcash/script/script_error.h	/^    SCRIPT_ERR_MINIMALDATA,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_NEGATIVE_LOCKTIME	zcash/script/script_error.h	/^    SCRIPT_ERR_NEGATIVE_LOCKTIME,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_NUMEQUALVERIFY	zcash/script/script_error.h	/^    SCRIPT_ERR_NUMEQUALVERIFY,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_OK	zcash/script/script_error.h	/^    SCRIPT_ERR_OK = 0,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_OP_COUNT	zcash/script/script_error.h	/^    SCRIPT_ERR_OP_COUNT,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_OP_RETURN	zcash/script/script_error.h	/^    SCRIPT_ERR_OP_RETURN,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_PUBKEYTYPE	zcash/script/script_error.h	/^    SCRIPT_ERR_PUBKEYTYPE,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_PUBKEY_COUNT	zcash/script/script_error.h	/^    SCRIPT_ERR_PUBKEY_COUNT,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_PUSH_SIZE	zcash/script/script_error.h	/^    SCRIPT_ERR_PUSH_SIZE,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_SCRIPT_SIZE	zcash/script/script_error.h	/^    SCRIPT_ERR_SCRIPT_SIZE,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_SIG_COUNT	zcash/script/script_error.h	/^    SCRIPT_ERR_SIG_COUNT,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_SIG_DER	zcash/script/script_error.h	/^    SCRIPT_ERR_SIG_DER,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_SIG_HASHTYPE	zcash/script/script_error.h	/^    SCRIPT_ERR_SIG_HASHTYPE,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_SIG_HIGH_S	zcash/script/script_error.h	/^    SCRIPT_ERR_SIG_HIGH_S,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_SIG_NULLDUMMY	zcash/script/script_error.h	/^    SCRIPT_ERR_SIG_NULLDUMMY,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_SIG_PUSHONLY	zcash/script/script_error.h	/^    SCRIPT_ERR_SIG_PUSHONLY,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_STACK_SIZE	zcash/script/script_error.h	/^    SCRIPT_ERR_STACK_SIZE,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_UNBALANCED_CONDITIONAL	zcash/script/script_error.h	/^    SCRIPT_ERR_UNBALANCED_CONDITIONAL,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_UNKNOWN_ERROR	zcash/script/script_error.h	/^    SCRIPT_ERR_UNKNOWN_ERROR,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_UNSATISFIED_LOCKTIME	zcash/script/script_error.h	/^    SCRIPT_ERR_UNSATISFIED_LOCKTIME,$/;"	e	enum:ScriptError_t
SCRIPT_ERR_VERIFY	zcash/script/script_error.h	/^    SCRIPT_ERR_VERIFY,$/;"	e	enum:ScriptError_t
SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9),$/;"	e	enum:__anon17
SCRIPT_VERIFY_CLEANSTACK	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_CLEANSTACK = (1U << 8),$/;"	e	enum:__anon17
SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_DISCOURAGE_UPGRADABLE_NOPS  = (1U << 7),$/;"	e	enum:__anon17
SCRIPT_VERIFY_LOW_S	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_LOW_S     = (1U << 3),$/;"	e	enum:__anon17
SCRIPT_VERIFY_MINIMALDATA	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_MINIMALDATA = (1U << 6),$/;"	e	enum:__anon17
SCRIPT_VERIFY_NONE	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_NONE      = 0,$/;"	e	enum:__anon17
SCRIPT_VERIFY_NULLDUMMY	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_NULLDUMMY = (1U << 4),$/;"	e	enum:__anon17
SCRIPT_VERIFY_P2SH	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_P2SH      = (1U << 0),$/;"	e	enum:__anon17
SCRIPT_VERIFY_SIGPUSHONLY	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_SIGPUSHONLY = (1U << 5),$/;"	e	enum:__anon17
SCRIPT_VERIFY_STRICTENC	zcash/script/interpreter.h	/^    SCRIPT_VERIFY_STRICTENC = (1U << 1),$/;"	e	enum:__anon17
SECP256K1_API	zcash/secp256k1/include/secp256k1.h	119;"	d
SECP256K1_API	zcash/secp256k1/include/secp256k1.h	121;"	d
SECP256K1_API	zcash/secp256k1/include/secp256k1.h	124;"	d
SECP256K1_API	zcash/secp256k1/include/secp256k1.h	126;"	d
SECP256K1_ARG_NONNULL	zcash/secp256k1/include/secp256k1.h	139;"	d
SECP256K1_ARG_NONNULL	zcash/secp256k1/include/secp256k1.h	141;"	d
SECP256K1_CONTEXT_NONE	zcash/secp256k1/include/secp256k1.h	156;"	d
SECP256K1_CONTEXT_SIGN	zcash/secp256k1/include/secp256k1.h	155;"	d
SECP256K1_CONTEXT_VERIFY	zcash/secp256k1/include/secp256k1.h	154;"	d
SECP256K1_EC_COMPRESSED	zcash/secp256k1/include/secp256k1.h	159;"	d
SECP256K1_EC_PARSE_TEST_NINVALID	zcash/secp256k1/src/tests.c	2906;"	d	file:
SECP256K1_EC_PARSE_TEST_NVALID	zcash/secp256k1/src/tests.c	2788;"	d	file:
SECP256K1_EC_PARSE_TEST_NXVALID	zcash/secp256k1/src/tests.c	2875;"	d	file:
SECP256K1_EC_UNCOMPRESSED	zcash/secp256k1/include/secp256k1.h	160;"	d
SECP256K1_FE_CONST	zcash/secp256k1/src/field_10x26.h	36;"	d
SECP256K1_FE_CONST	zcash/secp256k1/src/field_10x26.h	38;"	d
SECP256K1_FE_CONST	zcash/secp256k1/src/field_5x52.h	31;"	d
SECP256K1_FE_CONST	zcash/secp256k1/src/field_5x52.h	33;"	d
SECP256K1_FE_CONST_INNER	zcash/secp256k1/src/field_10x26.h	22;"	d
SECP256K1_FE_CONST_INNER	zcash/secp256k1/src/field_5x52.h	22;"	d
SECP256K1_FE_STORAGE_CONST	zcash/secp256k1/src/field_10x26.h	45;"	d
SECP256K1_FE_STORAGE_CONST	zcash/secp256k1/src/field_5x52.h	40;"	d
SECP256K1_FE_STORAGE_CONST_GET	zcash/secp256k1/src/field_10x26.h	46;"	d
SECP256K1_FLAGS_BIT_COMPRESSION	zcash/secp256k1/include/secp256k1.h	151;"	d
SECP256K1_FLAGS_BIT_CONTEXT_SIGN	zcash/secp256k1/include/secp256k1.h	150;"	d
SECP256K1_FLAGS_BIT_CONTEXT_VERIFY	zcash/secp256k1/include/secp256k1.h	149;"	d
SECP256K1_FLAGS_TYPE_COMPRESSION	zcash/secp256k1/include/secp256k1.h	147;"	d
SECP256K1_FLAGS_TYPE_CONTEXT	zcash/secp256k1/include/secp256k1.h	146;"	d
SECP256K1_FLAGS_TYPE_MASK	zcash/secp256k1/include/secp256k1.h	145;"	d
SECP256K1_GEJ_CONST	zcash/secp256k1/src/group.h	31;"	d
SECP256K1_GEJ_CONST_INFINITY	zcash/secp256k1/src/group.h	32;"	d
SECP256K1_GE_CONST	zcash/secp256k1/src/group.h	20;"	d
SECP256K1_GE_CONST_INFINITY	zcash/secp256k1/src/group.h	21;"	d
SECP256K1_GE_STORAGE_CONST	zcash/secp256k1/src/group.h	39;"	d
SECP256K1_GE_STORAGE_CONST_GET	zcash/secp256k1/src/group.h	41;"	d
SECP256K1_GNUC_EXT	zcash/secp256k1/src/util.h	106;"	d
SECP256K1_GNUC_EXT	zcash/secp256k1/src/util.h	108;"	d
SECP256K1_GNUC_PREREQ	zcash/secp256k1/include/secp256k1.h	100;"	d
SECP256K1_GNUC_PREREQ	zcash/secp256k1/include/secp256k1.h	97;"	d
SECP256K1_INLINE	zcash/secp256k1/include/secp256k1.h	106;"	d
SECP256K1_INLINE	zcash/secp256k1/include/secp256k1.h	108;"	d
SECP256K1_INLINE	zcash/secp256k1/include/secp256k1.h	110;"	d
SECP256K1_INLINE	zcash/secp256k1/include/secp256k1.h	113;"	d
SECP256K1_N_0	zcash/secp256k1/src/scalar_4x64_impl.h	11;"	d
SECP256K1_N_0	zcash/secp256k1/src/scalar_8x32_impl.h	11;"	d
SECP256K1_N_1	zcash/secp256k1/src/scalar_4x64_impl.h	12;"	d
SECP256K1_N_1	zcash/secp256k1/src/scalar_8x32_impl.h	12;"	d
SECP256K1_N_2	zcash/secp256k1/src/scalar_4x64_impl.h	13;"	d
SECP256K1_N_2	zcash/secp256k1/src/scalar_8x32_impl.h	13;"	d
SECP256K1_N_3	zcash/secp256k1/src/scalar_4x64_impl.h	14;"	d
SECP256K1_N_3	zcash/secp256k1/src/scalar_8x32_impl.h	14;"	d
SECP256K1_N_4	zcash/secp256k1/src/scalar_8x32_impl.h	15;"	d
SECP256K1_N_5	zcash/secp256k1/src/scalar_8x32_impl.h	16;"	d
SECP256K1_N_6	zcash/secp256k1/src/scalar_8x32_impl.h	17;"	d
SECP256K1_N_7	zcash/secp256k1/src/scalar_8x32_impl.h	18;"	d
SECP256K1_N_C_0	zcash/secp256k1/src/scalar_4x64_impl.h	17;"	d
SECP256K1_N_C_0	zcash/secp256k1/src/scalar_8x32_impl.h	21;"	d
SECP256K1_N_C_1	zcash/secp256k1/src/scalar_4x64_impl.h	18;"	d
SECP256K1_N_C_1	zcash/secp256k1/src/scalar_8x32_impl.h	22;"	d
SECP256K1_N_C_2	zcash/secp256k1/src/scalar_4x64_impl.h	19;"	d
SECP256K1_N_C_2	zcash/secp256k1/src/scalar_8x32_impl.h	23;"	d
SECP256K1_N_C_3	zcash/secp256k1/src/scalar_8x32_impl.h	24;"	d
SECP256K1_N_C_4	zcash/secp256k1/src/scalar_8x32_impl.h	25;"	d
SECP256K1_N_H_0	zcash/secp256k1/src/scalar_4x64_impl.h	22;"	d
SECP256K1_N_H_0	zcash/secp256k1/src/scalar_8x32_impl.h	28;"	d
SECP256K1_N_H_1	zcash/secp256k1/src/scalar_4x64_impl.h	23;"	d
SECP256K1_N_H_1	zcash/secp256k1/src/scalar_8x32_impl.h	29;"	d
SECP256K1_N_H_2	zcash/secp256k1/src/scalar_4x64_impl.h	24;"	d
SECP256K1_N_H_2	zcash/secp256k1/src/scalar_8x32_impl.h	30;"	d
SECP256K1_N_H_3	zcash/secp256k1/src/scalar_4x64_impl.h	25;"	d
SECP256K1_N_H_3	zcash/secp256k1/src/scalar_8x32_impl.h	31;"	d
SECP256K1_N_H_4	zcash/secp256k1/src/scalar_8x32_impl.h	32;"	d
SECP256K1_N_H_5	zcash/secp256k1/src/scalar_8x32_impl.h	33;"	d
SECP256K1_N_H_6	zcash/secp256k1/src/scalar_8x32_impl.h	34;"	d
SECP256K1_N_H_7	zcash/secp256k1/src/scalar_8x32_impl.h	35;"	d
SECP256K1_RESTRICT	zcash/secp256k1/src/util.h	81;"	d
SECP256K1_RESTRICT	zcash/secp256k1/src/util.h	85;"	d
SECP256K1_RESTRICT	zcash/secp256k1/src/util.h	87;"	d
SECP256K1_RESTRICT	zcash/secp256k1/src/util.h	89;"	d
SECP256K1_RESTRICT	zcash/secp256k1/src/util.h	92;"	d
SECP256K1_SCALAR_CONST	zcash/secp256k1/src/scalar_4x64.h	17;"	d
SECP256K1_SCALAR_CONST	zcash/secp256k1/src/scalar_8x32.h	17;"	d
SECP256K1_WARN_UNUSED_RESULT	zcash/secp256k1/include/secp256k1.h	134;"	d
SECP256K1_WARN_UNUSED_RESULT	zcash/secp256k1/include/secp256k1.h	136;"	d
SECP_INCLUDES	zcash/secp256k1/Makefile	/^SECP_INCLUDES =  $/;"	m
SECP_LIBS	zcash/secp256k1/Makefile	/^SECP_LIBS =   -lgmp$/;"	m
SECP_TEST_INCLUDES	zcash/secp256k1/Makefile	/^SECP_TEST_INCLUDES =  $/;"	m
SECP_TEST_LIBS	zcash/secp256k1/Makefile	/^SECP_TEST_LIBS = -lcrypto$/;"	m
SED	libsodium/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/contrib/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/dist-build/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/msvc-scripts/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/src/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/src/libsodium/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/src/libsodium/include/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/test/Makefile	/^SED = \/bin\/sed$/;"	m
SED	libsodium/test/default/Makefile	/^SED = \/bin\/sed$/;"	m
SED	zcash/secp256k1/Makefile	/^SED = \/bin\/sed$/;"	m
SERIALIZATION_HPP_	libsnark/src/common/serialization.hpp	13;"	d
SERIALIZATION_TCC_	libsnark/src/common/serialization.tcc	15;"	d	file:
SER_DISK	zcash/serialize.h	/^    SER_DISK            = (1 << 1),$/;"	e	enum:__anon14
SER_GETHASH	zcash/serialize.h	/^    SER_GETHASH         = (1 << 2),$/;"	e	enum:__anon14
SER_NETWORK	zcash/serialize.h	/^    SER_NETWORK         = (1 << 0),$/;"	e	enum:__anon14
SETTING_SIZE	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	14;"	d	file:
SET_MAKE	Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	demo/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/contrib/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/dist-build/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/msvc-scripts/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/src/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/src/libsodium/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/src/libsodium/include/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/test/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	libsodium/test/default/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	zcash/Makefile	/^SET_MAKE = $/;"	m
SET_MAKE	zcash/secp256k1/Makefile	/^SET_MAKE = $/;"	m
SHA256Compress	zcash/IncrementalMerkleTree.hpp	/^    SHA256Compress() : uint256() {}$/;"	f	class:libzcash::SHA256Compress
SHA256Compress	zcash/IncrementalMerkleTree.hpp	/^    SHA256Compress(uint256 contents) : uint256(contents) { }$/;"	f	class:libzcash::SHA256Compress
SHA256Compress	zcash/IncrementalMerkleTree.hpp	/^class SHA256Compress : public uint256 {$/;"	c	namespace:libzcash
SHA256_AUX_HPP_	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	13;"	d
SHA256_AUX_TCC_	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	15;"	d	file:
SHA256_COMPONENTS_HPP_	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	13;"	d
SHA256_COMPONENTS_TCC_	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	15;"	d	file:
SHA256_GADGET_HPP_	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	13;"	d
SHA256_GADGET_ROTR	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	111;"	d	file:
SHA256_GADGET_TCC_	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	15;"	d	file:
SHA256_H	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^const unsigned long SHA256_H[8] = {$/;"	m	namespace:libsnark	file:
SHA256_K	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^const unsigned long SHA256_K[64] =  {$/;"	m	namespace:libsnark	file:
SHA256_Pad	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^SHA256_Pad(crypto_hash_sha256_state *state, uint32_t tmp32[64 + 8])$/;"	f	file:
SHA256_Transform	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^SHA256_Transform(uint32_t state[8], const uint8_t block[64], uint32_t W[64],$/;"	f	file:
SHA256_block_size	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^const size_t SHA256_block_size = 512;$/;"	m	namespace:libsnark
SHA256_default_IV	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^pb_linear_combination_array<FieldT> SHA256_default_IV(protoboard<FieldT> &pb)$/;"	f	namespace:libsnark
SHA256_digest_size	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^const size_t SHA256_digest_size = 256;$/;"	m	namespace:libsnark
SHA512_Pad	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^SHA512_Pad(crypto_hash_sha512_state *state, uint64_t tmp64[80 + 8])$/;"	f	file:
SHA512_Transform	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^SHA512_Transform(uint64_t *state, const uint8_t block[128], uint64_t W[80],$/;"	f	file:
SHARED_LOCKS_REQUIRED	zcash/threadsafety.h	32;"	d
SHARED_LOCKS_REQUIRED	zcash/threadsafety.h	51;"	d
SHARED_LOCK_FUNCTION	zcash/threadsafety.h	25;"	d
SHARED_LOCK_FUNCTION	zcash/threadsafety.h	44;"	d
SHARED_TRYLOCK_FUNCTION	zcash/threadsafety.h	27;"	d
SHARED_TRYLOCK_FUNCTION	zcash/threadsafety.h	46;"	d
SHA_BLOCKSIZE	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^SHA_BLOCKSIZE = 64$/;"	v
SHA_DIGESTSIZE	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^SHA_DIGESTSIZE = 32$/;"	v
SHELL	Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	demo/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/contrib/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/dist-build/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/msvc-scripts/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/src/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/src/libsodium/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/src/libsodium/include/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/test/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	libsodium/test/default/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	zcash/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHELL	zcash/secp256k1/Makefile	/^SHELL = \/bin\/bash$/;"	m
SHR	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	76;"	d	file:
SHR	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	92;"	d	file:
SHR	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	15;"	d
SIGHASH_ALL	zcash/script/interpreter.h	/^    SIGHASH_ALL = 1,$/;"	e	enum:__anon16
SIGHASH_ANYONECANPAY	zcash/script/interpreter.h	/^    SIGHASH_ANYONECANPAY = 0x80,$/;"	e	enum:__anon16
SIGHASH_NONE	zcash/script/interpreter.h	/^    SIGHASH_NONE = 2,$/;"	e	enum:__anon16
SIGHASH_SINGLE	zcash/script/interpreter.h	/^    SIGHASH_SINGLE = 3,$/;"	e	enum:__anon16
SIGNATURE_SIZE	zcash/pubkey.h	/^const unsigned int SIGNATURE_SIZE              = 72;$/;"	v
SIMPLE_EXAMPLE_HPP_	libsnark/src/gadgetlib1/examples/simple_example.hpp	9;"	d
SIMPLE_EXAMPLE_TCC_	libsnark/src/gadgetlib1/examples/simple_example.tcc	9;"	d	file:
SIPROUND	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash_ref.h	6;"	d
SOCKET	zcash/compat.h	/^typedef u_int SOCKET;$/;"	t
SOCKET_ERROR	zcash/compat.h	64;"	d
SODIUM_C99	libsodium/src/libsodium/include/sodium/utils.h	15;"	d
SODIUM_C99	libsodium/src/libsodium/include/sodium/utils.h	17;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/Makefile	/^SODIUM_EXPORT = sodium.h sodium\/core.h sodium\/crypto_aead_aes256gcm.h \\$/;"	m
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	13;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	17;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	19;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	24;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	26;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	29;"	d
SODIUM_EXPORT	libsodium/src/libsodium/include/sodium/export.h	31;"	d
SODIUM_LIBRARY_MINIMAL_DEF	libsodium/Makefile	/^SODIUM_LIBRARY_MINIMAL_DEF = $/;"	m
SODIUM_LIBRARY_MINIMAL_DEF	libsodium/contrib/Makefile	/^SODIUM_LIBRARY_MINIMAL_DEF = $/;"	m
SODIUM_LIBRARY_MINIMAL_DEF	libsodium/dist-build/Makefile	/^SODIUM_LIBRARY_MINIMAL_DEF = $/;"	m
SODIUM_LIBRARY_MINIMAL_DEF	libsodium/msvc-scripts/Makefile	/^SODIUM_LIBRARY_MINIMAL_DEF = $/;"	m
SODIUM_LIBRARY_MINIMAL_DEF	libsodium/src/Makefile	/^SODIUM_LIBRARY_MINIMAL_DEF = $/;"	m
SODIUM_LIBRARY_MINIMAL_DEF	libsodium/src/libsodium/Makefile	/^SODIUM_LIBRARY_MINIMAL_DEF = $/;"	m
SODIUM_LIBRARY_MINIMAL_DEF	libsodium/src/libsodium/include/Makefile	/^SODIUM_LIBRARY_MINIMAL_DEF = $/;"	m
SODIUM_LIBRARY_MINIMAL_DEF	libsodium/test/Makefile	/^SODIUM_LIBRARY_MINIMAL_DEF = $/;"	m
SODIUM_LIBRARY_MINIMAL_DEF	libsodium/test/default/Makefile	/^SODIUM_LIBRARY_MINIMAL_DEF = $/;"	m
SODIUM_LIBRARY_VERSION	libsodium/Makefile	/^SODIUM_LIBRARY_VERSION = 21:0:3$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/contrib/Makefile	/^SODIUM_LIBRARY_VERSION = 21:0:3$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/dist-build/Makefile	/^SODIUM_LIBRARY_VERSION = 21:0:3$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/msvc-scripts/Makefile	/^SODIUM_LIBRARY_VERSION = 21:0:3$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/src/Makefile	/^SODIUM_LIBRARY_VERSION = 21:0:3$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/src/libsodium/Makefile	/^SODIUM_LIBRARY_VERSION = 21:0:3$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/src/libsodium/include/Makefile	/^SODIUM_LIBRARY_VERSION = 21:0:3$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/test/Makefile	/^SODIUM_LIBRARY_VERSION = 21:0:3$/;"	m
SODIUM_LIBRARY_VERSION	libsodium/test/default/Makefile	/^SODIUM_LIBRARY_VERSION = 21:0:3$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/builds/msvc/version.h	9;"	d
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/contrib/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/dist-build/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/msvc-scripts/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/src/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/src/libsodium/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/src/libsodium/include/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/src/libsodium/include/sodium/version.h	9;"	d
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/test/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MAJOR	libsodium/test/default/Makefile	/^SODIUM_LIBRARY_VERSION_MAJOR = 9$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 5$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/builds/msvc/version.h	10;"	d
SODIUM_LIBRARY_VERSION_MINOR	libsodium/contrib/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 5$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/dist-build/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 5$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/msvc-scripts/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 5$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/src/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 5$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/src/libsodium/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 5$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/src/libsodium/include/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 5$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/src/libsodium/include/sodium/version.h	10;"	d
SODIUM_LIBRARY_VERSION_MINOR	libsodium/test/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 5$/;"	m
SODIUM_LIBRARY_VERSION_MINOR	libsodium/test/default/Makefile	/^SODIUM_LIBRARY_VERSION_MINOR = 5$/;"	m
SODIUM_VERSION_STRING	libsodium/builds/msvc/version.h	7;"	d
SODIUM_VERSION_STRING	libsodium/src/libsodium/include/sodium/version.h	7;"	d
SOURCES	Makefile	/^SOURCES =$/;"	m
SOURCES	demo/Makefile	/^SOURCES = $(circuit_SOURCES)$/;"	m
SOURCES	libsodium/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/contrib/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/dist-build/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/msvc-scripts/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/src/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/src/libsodium/Makefile	/^SOURCES = $(libaesni_la_SOURCES) $(libavx2_la_SOURCES) \\$/;"	m
SOURCES	libsodium/src/libsodium/include/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/test/Makefile	/^SOURCES =$/;"	m
SOURCES	libsodium/test/default/Makefile	/^SOURCES = aead_aes256gcm.c aead_chacha20poly1305.c \\$/;"	m
SOURCES	zcash/Makefile	/^SOURCES = $(createjs_SOURCES) $(generate_SOURCES)$/;"	m
SOURCES	zcash/secp256k1/Makefile	/^SOURCES = $(libsecp256k1_la_SOURCES) $(libsecp256k1_common_la_SOURCES) \\$/;"	m
SPARSE_VECTOR_HPP_	libsnark/src/common/data_structures/sparse_vector.hpp	13;"	d
SPARSE_VECTOR_TCC_	libsnark/src/common/data_structures/sparse_vector.tcc	15;"	d	file:
SR	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	11;"	d
SR	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const unsigned char SR[16] = { 0x01, 0x02, 0x03, 0x00, 0x06, 0x07, 0x04, 0x05,$/;"	v
SRM0	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	12;"	d
SRM0	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const unsigned char SRM0[16] = {$/;"	v
SS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	401;"	d	file:
SS	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	458;"	d	file:
SSIZE_MAX	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	59;"	d	file:
SSIZE_MAX	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	52;"	d	file:
STANDARD_LOCKTIME_VERIFY_FLAGS	zcash/consensus/consensus.h	/^static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = LOCKTIME_MEDIAN_TIME_PAST;$/;"	v
STANDARD_NOT_MANDATORY_VERIFY_FLAGS	zcash/script/standard.h	/^static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_VERIFY_FLAGS & ~MANDATORY_SCRIPT_VERIFY_FLAGS;$/;"	v
STANDARD_SCRIPT_VERIFY_FLAGS	zcash/script/standard.h	/^static const unsigned int STANDARD_SCRIPT_VERIFY_FLAGS = MANDATORY_SCRIPT_VERIFY_FLAGS |$/;"	v
STATIC	libsnark/Makefile	/^	STATIC = 1$/;"	m
STDC_HEADERS	config.h	246;"	d
STDC_HEADERS	zcash/secp256k1/src/libsecp256k1-config.h	90;"	d
STORE	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	12;"	d
STORE128	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	6;"	d
STORE32_BE	libsodium/src/libsodium/include/sodium/private/common.h	166;"	d
STORE32_LE	libsodium/src/libsodium/include/sodium/private/common.h	94;"	d
STORE64_BE	libsodium/src/libsodium/include/sodium/private/common.h	131;"	d
STORE64_LE	libsodium/src/libsodium/include/sodium/private/common.h	59;"	d
STOREU	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	15;"	d
STOREU	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h	6;"	d
STOREU	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h	6;"	d
STOREU128	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	9;"	d
STOREx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	152;"	d	file:
STR	libsnark/src/algebra/fields/fp_aux.tcc	19;"	d	file:
STRIP	Makefile	/^STRIP = $/;"	m
STRIP	demo/Makefile	/^STRIP = $/;"	m
STRIP	libsodium/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/contrib/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/dist-build/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/msvc-scripts/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/src/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/src/libsodium/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/src/libsodium/include/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/test/Makefile	/^STRIP = strip$/;"	m
STRIP	libsodium/test/default/Makefile	/^STRIP = strip$/;"	m
STRIP	zcash/Makefile	/^STRIP = $/;"	m
STRIP	zcash/secp256k1/Makefile	/^STRIP = \/usr\/bin\/strip$/;"	m
STR_HASHBYTES	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	14;"	d	file:
STR_HASHBYTES	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	14;"	d	file:
STR_HELPER	libsnark/src/algebra/fields/fp_aux.tcc	18;"	d	file:
SUB	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	34;"	d
SUBDIRS	Makefile	/^SUBDIRS = demo zcash$/;"	m
SUBDIRS	libsodium/Makefile	/^SUBDIRS = \\$/;"	m
SUBDIRS	libsodium/src/Makefile	/^SUBDIRS = \\$/;"	m
SUBDIRS	libsodium/src/libsodium/Makefile	/^SUBDIRS = \\$/;"	m
SUBDIRS	libsodium/test/Makefile	/^SUBDIRS = \\$/;"	m
SUB_FIRSTADD	libsnark/src/algebra/fields/fp_aux.tcc	56;"	d	file:
SUB_FIRSTSUB	libsnark/src/algebra/fields/fp_aux.tcc	48;"	d	file:
SUB_NEXTADD	libsnark/src/algebra/fields/fp_aux.tcc	60;"	d	file:
SUB_NEXTSUB	libsnark/src/algebra/fields/fp_aux.tcc	52;"	d	file:
SWAP32	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	9;"	d
SWAP32	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts_aes128ctr.c	/^const unsigned char SWAP32[16] = { 0x03, 0x02, 0x01, 0x00, 0x07, 0x06,$/;"	v
SX	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	412;"	d	file:
SX	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	459;"	d	file:
S_IRUSR	zcash/compat.h	69;"	d
S_IWUSR	zcash/compat.h	70;"	d
Salsa20Random	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^} Salsa20Random;$/;"	t	typeref:struct:Salsa20Random_	file:
Salsa20Random_	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^typedef struct Salsa20Random_ {$/;"	s	file:
SanitizeFilename	zcash/utilstrencodings.cpp	/^string SanitizeFilename(const string& str)$/;"	f
SanitizeString	zcash/utilstrencodings.cpp	/^string SanitizeString(const string& str)$/;"	f
ScriptError	zcash/script/script_error.h	/^} ScriptError;$/;"	t	typeref:enum:ScriptError_t
ScriptErrorString	zcash/script/script_error.cpp	/^const char* ScriptErrorString(const ScriptError serror)$/;"	f
ScriptError_t	zcash/script/script_error.h	/^typedef enum ScriptError_t$/;"	g
ScriptMap	zcash/keystore.h	/^typedef std::map<CScriptID, CScript > ScriptMap;$/;"	t
ScriptSigArgsExpected	zcash/script/standard.cpp	/^int ScriptSigArgsExpected(txnouttype t, const std::vector<std::vector<unsigned char> >& vSolutions)$/;"	f
Secp256k1Context	zcash/secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^public class Secp256k1Context {$/;"	c
SecureString	zcash/support/allocators/secure.h	/^typedef std::basic_string<char, std::char_traits<char>, secure_allocator<char> > SecureString;$/;"	t
Seek	zcash/streams.h	/^    bool Seek(uint64_t nPos) {$/;"	f	class:CBufferedFile
SerReadWrite	zcash/serialize.h	/^inline void SerReadWrite(Stream& s, T& obj, int nType, int nVersion, CSerActionUnserialize ser_action)$/;"	f
SerReadWrite	zcash/serialize.h	/^inline void SerReadWrite(Stream& s, const T& obj, int nType, int nVersion, CSerActionSerialize ser_action)$/;"	f
SerializationOp	zcash/Address.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::PaymentAddress
SerializationOp	zcash/IncrementalMerkleTree.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::IncrementalMerkleTree
SerializationOp	zcash/IncrementalMerkleTree.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::IncrementalWitness
SerializationOp	zcash/IncrementalMerkleTree.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::MerklePath
SerializationOp	zcash/Note.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::NotePlaintext
SerializationOp	zcash/Proof.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::CompressedG1
SerializationOp	zcash/Proof.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::CompressedG2
SerializationOp	zcash/Proof.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::Fq
SerializationOp	zcash/Proof.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::Fq2
SerializationOp	zcash/Proof.hpp	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:libzcash::ZCProof
SerializationOp	zcash/amount.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:CFeeRate
SerializationOp	zcash/primitives/block.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:CBlock
SerializationOp	zcash/primitives/block.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:CBlockHeader
SerializationOp	zcash/primitives/block.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:CEquihashInput
SerializationOp	zcash/primitives/block.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	struct:CBlockLocator
SerializationOp	zcash/primitives/transaction.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:COutPoint
SerializationOp	zcash/primitives/transaction.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:CTransaction
SerializationOp	zcash/primitives/transaction.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:CTxIn
SerializationOp	zcash/primitives/transaction.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:CTxOut
SerializationOp	zcash/primitives/transaction.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:JSDescription
SerializationOp	zcash/primitives/transaction.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	struct:CMutableTransaction
SerializationOp	zcash/uint252.h	/^    inline void SerializationOp(Stream& s, Operation ser_action, int nType, int nVersion) {$/;"	f	class:uint252
Serialize	zcash/pubkey.h	/^    void Serialize(Stream& s, int nType, int nVersion) const$/;"	f	class:CPubKey
Serialize	zcash/script/interpreter.cpp	/^    void Serialize(S &s, int nType, int nVersion) const {$/;"	f	class:__anon21::CTransactionSignatureSerializer
Serialize	zcash/serialize.h	/^    void Serialize(Stream &s, int, int) const {$/;"	f	class:CVarInt
Serialize	zcash/serialize.h	/^    void Serialize(Stream& s, int, int=0) const$/;"	f	class:CFlatData
Serialize	zcash/serialize.h	/^    void Serialize(Stream& s, int, int=0) const$/;"	f	class:LimitedString
Serialize	zcash/serialize.h	/^inline void Serialize(Stream& os, const T& a, long nType, int nVersion)$/;"	f
Serialize	zcash/serialize.h	/^inline void Serialize(Stream& os, const std::vector<T, A>& v, int nType, int nVersion)$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, bool a, int, int=0)    { char f=a; ser_writedata8(s, f); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, char a,         int, int=0) { ser_writedata8(s, a); } \/\/ TODO Get rid of bare char$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, double a,       int, int=0) { ser_writedata64(s, ser_double_to_uint64(a)); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, float a,        int, int=0) { ser_writedata32(s, ser_float_to_uint32(a)); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, int16_t a,      int, int=0) { ser_writedata16(s, a); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, int32_t a,      int, int=0) { ser_writedata32(s, a); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, int64_t a,      int, int=0) { ser_writedata64(s, a); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, int8_t a,       int, int=0) { ser_writedata8(s, a); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, uint16_t a,     int, int=0) { ser_writedata16(s, a); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, uint32_t a,     int, int=0) { ser_writedata32(s, a); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, uint64_t a,     int, int=0) { ser_writedata64(s, a); }$/;"	f
Serialize	zcash/serialize.h	/^template<typename Stream> inline void Serialize(Stream& s, uint8_t a,      int, int=0) { ser_writedata8(s, a); }$/;"	f
Serialize	zcash/serialize.h	/^void Serialize(Stream& os, const CScript& v, int nType, int nVersion)$/;"	f
Serialize	zcash/serialize.h	/^void Serialize(Stream& os, const boost::array<T, N>& item, int nType, int nVersion)$/;"	f
Serialize	zcash/serialize.h	/^void Serialize(Stream& os, const boost::optional<T>& item, int nType, int nVersion)$/;"	f
Serialize	zcash/serialize.h	/^void Serialize(Stream& os, const std::basic_string<C>& str, int, int)$/;"	f
Serialize	zcash/serialize.h	/^void Serialize(Stream& os, const std::list<T, A>& l, int nType, int nVersion)$/;"	f
Serialize	zcash/serialize.h	/^void Serialize(Stream& os, const std::map<K, T, Pred, A>& m, int nType, int nVersion)$/;"	f
Serialize	zcash/serialize.h	/^void Serialize(Stream& os, const std::pair<K, T>& item, int nType, int nVersion)$/;"	f
Serialize	zcash/serialize.h	/^void Serialize(Stream& os, const std::set<K, Pred, A>& m, int nType, int nVersion)$/;"	f
Serialize	zcash/streams.h	/^    void Serialize(Stream& s, int nType, int nVersion) const$/;"	f	class:CBaseDataStream
Serialize	zcash/uint256.h	/^    void Serialize(Stream& s, int nType, int nVersion) const$/;"	f	class:base_blob
SerializeHash	zcash/hash.h	/^uint256 SerializeHash(const T& obj, int nType=SER_GETHASH, int nVersion=PROTOCOL_VERSION)$/;"	f
SerializeInput	zcash/script/interpreter.cpp	/^    void SerializeInput(S &s, unsigned int nInput, int nType, int nVersion) const {$/;"	f	class:__anon21::CTransactionSignatureSerializer
SerializeOutput	zcash/script/interpreter.cpp	/^    void SerializeOutput(S &s, unsigned int nOutput, int nType, int nVersion) const {$/;"	f	class:__anon21::CTransactionSignatureSerializer
SerializeScriptCode	zcash/script/interpreter.cpp	/^    void SerializeScriptCode(S &s, int nType, int nVersion) const {$/;"	f	class:__anon21::CTransactionSignatureSerializer
Serialize_impl	zcash/serialize.h	/^void Serialize_impl(Stream& os, const std::vector<T, A>& v, int nType, int nVersion, const V&)$/;"	f
Serialize_impl	zcash/serialize.h	/^void Serialize_impl(Stream& os, const std::vector<T, A>& v, int nType, int nVersion, const unsigned char&)$/;"	f
SerializedPaymentAddressSize	zcash/Address.hpp	/^const size_t SerializedPaymentAddressSize = 64;$/;"	m	namespace:libzcash
SerializedSpendingKeySize	zcash/Address.hpp	/^const size_t SerializedSpendingKeySize = 32;$/;"	m	namespace:libzcash
Set	zcash/key.h	/^    void Set(const T pbegin, const T pend, bool fCompressedIn)$/;"	f	class:CKey
Set	zcash/pubkey.h	/^    void Set(const T pbegin, const T pend)$/;"	f	class:CPubKey
Set	zcash/script/sigcache.cpp	/^    void Set(const uint256 &hash, const std::vector<unsigned char>& vchSig, const CPubKey& pubKey)$/;"	f	class:__anon24::CSignatureCache
SetCompact	zcash/arith_uint256.cpp	/^arith_uint256& arith_uint256::SetCompact(uint32_t nCompact, bool* pfNegative, bool* pfOverflow)$/;"	f	class:arith_uint256
SetHex	zcash/arith_uint256.cpp	/^void base_uint<BITS>::SetHex(const char* psz)$/;"	f	class:base_uint
SetHex	zcash/arith_uint256.cpp	/^void base_uint<BITS>::SetHex(const std::string& str)$/;"	f	class:base_uint
SetHex	zcash/uint256.cpp	/^void base_blob<BITS>::SetHex(const char* psz)$/;"	f	class:base_blob
SetHex	zcash/uint256.cpp	/^void base_blob<BITS>::SetHex(const std::string& str)$/;"	f	class:base_blob
SetLimit	zcash/streams.h	/^    bool SetLimit(uint64_t nPos = (uint64_t)(-1)) {$/;"	f	class:CBufferedFile
SetMaster	zcash/key.cpp	/^void CExtKey::SetMaster(const unsigned char *seed, unsigned int nSeedLen) {$/;"	f	class:CExtKey
SetMockTime	zcash/utiltime.cpp	/^void SetMockTime(int64_t nMockTimeIn)$/;"	f
SetNull	zcash/primitives/block.h	/^    void SetNull()$/;"	f	class:CBlock
SetNull	zcash/primitives/block.h	/^    void SetNull()$/;"	f	class:CBlockHeader
SetNull	zcash/primitives/block.h	/^    void SetNull()$/;"	f	struct:CBlockLocator
SetNull	zcash/primitives/transaction.h	/^    void SetNull() { hash.SetNull(); n = (uint32_t) -1; }$/;"	f	class:COutPoint
SetNull	zcash/primitives/transaction.h	/^    void SetNull()$/;"	f	class:CTxOut
SetNull	zcash/uint256.h	/^    void SetNull()$/;"	f	class:base_blob
SetPos	zcash/streams.h	/^    bool SetPos(uint64_t nPos) {$/;"	f	class:CBufferedFile
SetPrivKey	zcash/key.cpp	/^bool CKey::SetPrivKey(const CPrivKey &privkey, bool fCompressedIn) {$/;"	f	class:CKey
SetThreadPriority	zcash/zcashutil.cpp	/^void SetThreadPriority(int nPriority)$/;"	f
SetType	zcash/streams.h	/^    void SetType(int n)          { nType = n; }$/;"	f	class:CAutoFile
SetType	zcash/streams.h	/^    void SetType(int n)          { nType = n; }$/;"	f	class:CBaseDataStream
SetVersion	zcash/streams.h	/^    void SetVersion(int n)       { nVersion = n; }$/;"	f	class:CAutoFile
SetVersion	zcash/streams.h	/^    void SetVersion(int n)       { nVersion = n; }$/;"	f	class:CBaseDataStream
SetupEnvironment	zcash/zcashutil.cpp	/^void SetupEnvironment()$/;"	f
SetupNetworking	zcash/zcashutil.cpp	/^bool SetupNetworking()$/;"	f
ShrinkDebugFile	zcash/zcashutil.cpp	/^void ShrinkDebugFile()$/;"	f
Sigma0	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^Sigma0 = lambda x: (S(x, 2) ^ S(x, 13) ^ S(x, 22))$/;"	v
Sigma0	zcash/crypto/sha256.cpp	/^uint32_t inline Sigma0(uint32_t x) { return (x >> 2 | x << 30) ^ (x >> 13 | x << 19) ^ (x >> 22 | x << 10); }$/;"	f	namespace:__anon29::sha256
Sigma0	zcash/crypto/sha512.cpp	/^uint64_t inline Sigma0(uint64_t x) { return (x >> 28 | x << 36) ^ (x >> 34 | x << 30) ^ (x >> 39 | x << 25); }$/;"	f	namespace:__anon31::sha512
Sigma0	zcash/secp256k1/src/hash_impl.h	18;"	d
Sigma0	zcash/secp256k1/src/hash_impl.h	277;"	d
Sigma1	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^Sigma1 = lambda x: (S(x, 6) ^ S(x, 11) ^ S(x, 25))$/;"	v
Sigma1	zcash/crypto/sha256.cpp	/^uint32_t inline Sigma1(uint32_t x) { return (x >> 6 | x << 26) ^ (x >> 11 | x << 21) ^ (x >> 25 | x << 7); }$/;"	f	namespace:__anon29::sha256
Sigma1	zcash/crypto/sha512.cpp	/^uint64_t inline Sigma1(uint64_t x) { return (x >> 14 | x << 50) ^ (x >> 18 | x << 46) ^ (x >> 41 | x << 23); }$/;"	f	namespace:__anon31::sha512
Sigma1	zcash/secp256k1/src/hash_impl.h	19;"	d
Sigma1	zcash/secp256k1/src/hash_impl.h	276;"	d
Sign	zcash/key.cpp	/^bool CKey::Sign(const uint256 &hash, std::vector<unsigned char>& vchSig, uint32_t test_case) const {$/;"	f	class:CKey
Sign1	zcash/script/sign.cpp	/^static bool Sign1(const CKeyID& address, const BaseSignatureCreator& creator, const CScript& scriptCode, CScript& scriptSigRet)$/;"	f	file:
SignCompact	zcash/key.cpp	/^bool CKey::SignCompact(const uint256 &hash, std::vector<unsigned char>& vchSig) const {$/;"	f	class:CKey
SignN	zcash/script/sign.cpp	/^static bool SignN(const vector<valtype>& multisigdata, const BaseSignatureCreator& creator, const CScript& scriptCode, CScript& scriptSigRet)$/;"	f	file:
SignSignature	zcash/script/sign.cpp	/^bool SignSignature(const CKeyStore &keystore, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, int nHashType)$/;"	f
SignSignature	zcash/script/sign.cpp	/^bool SignSignature(const CKeyStore &keystore, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType)$/;"	f
SignStep	zcash/script/sign.cpp	/^static bool SignStep(const BaseSignatureCreator& creator, const CScript& scriptPubKey,$/;"	f	file:
SignatureHash	zcash/script/interpreter.cpp	/^uint256 SignatureHash(const CScript& scriptCode, const CTransaction& txTo, unsigned int nIn, int nHashType)$/;"	f
SoftSetArg	zcash/zcashutil.cpp	/^bool SoftSetArg(const std::string& strArg, const std::string& strValue)$/;"	f
SoftSetBoolArg	zcash/zcashutil.cpp	/^bool SoftSetBoolArg(const std::string& strArg, bool fValue)$/;"	f
Solver	zcash/script/standard.cpp	/^bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsigned char> >& vSolutionsRet)$/;"	f
SpendingKey	zcash/Address.hpp	/^    SpendingKey() : uint252() { }$/;"	f	class:libzcash::SpendingKey
SpendingKey	zcash/Address.hpp	/^    SpendingKey(uint252 a_sk) : uint252(a_sk) { }$/;"	f	class:libzcash::SpendingKey
SpendingKey	zcash/Address.hpp	/^class SpendingKey : public uint252 {$/;"	c	namespace:libzcash
SpendingKeyMap	zcash/keystore.h	/^typedef std::map<libzcash::PaymentAddress, libzcash::SpendingKey> SpendingKeyMap;$/;"	t
StepRow	zcash/crypto/equihash.cpp	/^StepRow<WIDTH>::StepRow(const StepRow<W>& a)$/;"	f	class:StepRow
StepRow	zcash/crypto/equihash.cpp	/^StepRow<WIDTH>::StepRow(const unsigned char* hashIn, size_t hInLen,$/;"	f	class:StepRow
StepRow	zcash/crypto/equihash.h	/^class StepRow$/;"	c
Strict	zcash/Proof.cpp	/^ProofVerifier ProofVerifier::Strict() {$/;"	f	class:libzcash::ProofVerifier
SubsidySlowStartShift	zcash/consensus/params.h	/^    int SubsidySlowStartShift() const { return nSubsidySlowStartInterval \/ 2; }$/;"	f	struct:Consensus::Params
SysRandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^} SysRandom;$/;"	t	typeref:struct:SysRandom_	file:
SysRandom_	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^typedef struct SysRandom_ {$/;"	s	file:
T	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe T;$/;"	m	struct:__anon6
T	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe T;$/;"	m	struct:__anon7
T2d	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe T2d;$/;"	m	struct:__anon9
TEMPDECLx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	137;"	d	file:
TEMPDIR	libsodium/packaging/dotnet-core/prepare.py	/^TEMPDIR = 'temp'$/;"	v
TEMPLATE_UTILS_HPP_	libsnark/src/common/template_utils.hpp	13;"	d
TEMPx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	140;"	d	file:
TESTS	libsodium/test/default/Makefile	/^TESTS = $(am__EXEEXT_3)$/;"	m
TESTS	zcash/secp256k1/Makefile	/^TESTS = $(am__EXEEXT_2) $(am__EXEEXT_3)$/;"	m
TESTS_LDADD	libsodium/test/default/Makefile	/^TESTS_LDADD = \\$/;"	m
TESTS_TARGETS	libsodium/test/default/Makefile	/^TESTS_TARGETS = aead_aes256gcm aead_chacha20poly1305 \\$/;"	m
TEST_EXTENSIONS	libsodium/test/default/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_EXTENSIONS	zcash/secp256k1/Makefile	/^TEST_EXTENSIONS =  .test$/;"	m
TEST_FAILURE	zcash/secp256k1/src/util.h	28;"	d
TEST_FAILURE	zcash/secp256k1/src/util.h	33;"	d
TEST_LDFLAGS	libsodium/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/contrib/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/dist-build/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/msvc-scripts/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/src/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/src/libsodium/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/src/libsodium/include/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/test/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LDFLAGS	libsodium/test/default/Makefile	/^TEST_LDFLAGS = $/;"	m
TEST_LOGS	libsodium/test/default/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOGS	zcash/secp256k1/Makefile	/^TEST_LOGS = $(am__test_logs2:.test.log=.log)$/;"	m
TEST_LOG_COMPILE	libsodium/test/default/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_COMPILE	zcash/secp256k1/Makefile	/^TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\$/;"	m
TEST_LOG_DRIVER	libsodium/test/default/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/build-aux\/test-driver$/;"	m
TEST_LOG_DRIVER	zcash/secp256k1/Makefile	/^TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)\/build-aux\/test-driver$/;"	m
TEST_NAME	libsodium/test/default/aead_aes256gcm.c	2;"	d	file:
TEST_NAME	libsodium/test/default/aead_chacha20poly1305.c	2;"	d	file:
TEST_NAME	libsodium/test/default/aead_xchacha20poly1305.c	2;"	d	file:
TEST_NAME	libsodium/test/default/auth.c	2;"	d	file:
TEST_NAME	libsodium/test/default/auth2.c	3;"	d	file:
TEST_NAME	libsodium/test/default/auth3.c	3;"	d	file:
TEST_NAME	libsodium/test/default/auth5.c	2;"	d	file:
TEST_NAME	libsodium/test/default/auth6.c	2;"	d	file:
TEST_NAME	libsodium/test/default/auth7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box8.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box_easy.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box_easy2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box_seal.c	2;"	d	file:
TEST_NAME	libsodium/test/default/box_seed.c	2;"	d	file:
TEST_NAME	libsodium/test/default/chacha20.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core1.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core3.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core4.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core5.c	2;"	d	file:
TEST_NAME	libsodium/test/default/core6.c	2;"	d	file:
TEST_NAME	libsodium/test/default/ed25519_convert.c	2;"	d	file:
TEST_NAME	libsodium/test/default/generichash.c	2;"	d	file:
TEST_NAME	libsodium/test/default/generichash2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/generichash3.c	2;"	d	file:
TEST_NAME	libsodium/test/default/hash.c	2;"	d	file:
TEST_NAME	libsodium/test/default/hash3.c	2;"	d	file:
TEST_NAME	libsodium/test/default/kdf.c	2;"	d	file:
TEST_NAME	libsodium/test/default/keygen.c	2;"	d	file:
TEST_NAME	libsodium/test/default/kx.c	2;"	d	file:
TEST_NAME	libsodium/test/default/onetimeauth.c	2;"	d	file:
TEST_NAME	libsodium/test/default/onetimeauth2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/onetimeauth7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/pwhash.c	2;"	d	file:
TEST_NAME	libsodium/test/default/pwhash_argon2id.c	2;"	d	file:
TEST_NAME	libsodium/test/default/pwhash_scrypt.c	2;"	d	file:
TEST_NAME	libsodium/test/default/pwhash_scrypt_ll.c	2;"	d	file:
TEST_NAME	libsodium/test/default/randombytes.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult5.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult6.c	2;"	d	file:
TEST_NAME	libsodium/test/default/scalarmult7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox7.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox8.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox_easy.c	2;"	d	file:
TEST_NAME	libsodium/test/default/secretbox_easy2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/shorthash.c	2;"	d	file:
TEST_NAME	libsodium/test/default/sign.c	2;"	d	file:
TEST_NAME	libsodium/test/default/siphashx24.c	2;"	d	file:
TEST_NAME	libsodium/test/default/sodium_core.c	2;"	d	file:
TEST_NAME	libsodium/test/default/sodium_utils.c	1;"	d	file:
TEST_NAME	libsodium/test/default/sodium_utils2.c	8;"	d	file:
TEST_NAME	libsodium/test/default/sodium_utils3.c	8;"	d	file:
TEST_NAME	libsodium/test/default/sodium_version.c	2;"	d	file:
TEST_NAME	libsodium/test/default/stream.c	2;"	d	file:
TEST_NAME	libsodium/test/default/stream2.c	2;"	d	file:
TEST_NAME	libsodium/test/default/stream3.c	2;"	d	file:
TEST_NAME	libsodium/test/default/stream4.c	2;"	d	file:
TEST_NAME	libsodium/test/default/verify1.c	2;"	d	file:
TEST_NAME	libsodium/test/default/xchacha20.c	2;"	d	file:
TEST_NAME_OUT	libsodium/test/default/cmptest.h	24;"	d
TEST_NAME_RES	libsodium/test/default/cmptest.h	23;"	d
TEST_SRCDIR	libsodium/test/default/cmptest.h	16;"	d
TEST_SRCDIR	libsodium/test/default/cmptest.h	17;"	d
TEST_SRCDIR	libsodium/test/default/cmptest.h	20;"	d
TEST_SUITE_LOG	libsodium/test/default/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
TEST_SUITE_LOG	zcash/secp256k1/Makefile	/^TEST_SUITE_LOG = test-suite.log$/;"	m
THREAD_PRIORITY_ABOVE_NORMAL	zcash/compat.h	89;"	d
THREAD_PRIORITY_BELOW_NORMAL	zcash/compat.h	87;"	d
THREAD_PRIORITY_LOWEST	zcash/compat.h	86;"	d
THREAD_PRIORITY_NORMAL	zcash/compat.h	88;"	d
TINYFORMAT_ARGTYPES	zcash/tinyformat.h	367;"	d
TINYFORMAT_ARGTYPES_1	zcash/tinyformat.h	408;"	d
TINYFORMAT_ARGTYPES_10	zcash/tinyformat.h	417;"	d
TINYFORMAT_ARGTYPES_11	zcash/tinyformat.h	418;"	d
TINYFORMAT_ARGTYPES_12	zcash/tinyformat.h	419;"	d
TINYFORMAT_ARGTYPES_13	zcash/tinyformat.h	420;"	d
TINYFORMAT_ARGTYPES_14	zcash/tinyformat.h	421;"	d
TINYFORMAT_ARGTYPES_15	zcash/tinyformat.h	422;"	d
TINYFORMAT_ARGTYPES_16	zcash/tinyformat.h	423;"	d
TINYFORMAT_ARGTYPES_2	zcash/tinyformat.h	409;"	d
TINYFORMAT_ARGTYPES_3	zcash/tinyformat.h	410;"	d
TINYFORMAT_ARGTYPES_4	zcash/tinyformat.h	411;"	d
TINYFORMAT_ARGTYPES_5	zcash/tinyformat.h	412;"	d
TINYFORMAT_ARGTYPES_6	zcash/tinyformat.h	413;"	d
TINYFORMAT_ARGTYPES_7	zcash/tinyformat.h	414;"	d
TINYFORMAT_ARGTYPES_8	zcash/tinyformat.h	415;"	d
TINYFORMAT_ARGTYPES_9	zcash/tinyformat.h	416;"	d
TINYFORMAT_DEFINE_FORMATVALUE_CHAR	zcash/tinyformat.h	343;"	d
TINYFORMAT_DEFINE_FORMATVALUE_CHAR	zcash/tinyformat.h	359;"	d
TINYFORMAT_DEFINE_FORMAT_TRUNCATED_CSTR	zcash/tinyformat.h	274;"	d
TINYFORMAT_DEFINE_FORMAT_TRUNCATED_CSTR	zcash/tinyformat.h	286;"	d
TINYFORMAT_ERROR	zcash/tinyformat.h	126;"	d
TINYFORMAT_ERROR	zcash/tinyformat.h	142;"	d
TINYFORMAT_FOREACH_ARGNUM	zcash/tinyformat.h	476;"	d
TINYFORMAT_HIDDEN	zcash/tinyformat.h	160;"	d
TINYFORMAT_HIDDEN	zcash/tinyformat.h	162;"	d
TINYFORMAT_H_INCLUDED	zcash/tinyformat.h	116;"	d
TINYFORMAT_MAKE_FORMAT_FUNCS	zcash/tinyformat.h	1002;"	d
TINYFORMAT_MAKE_FORMAT_FUNCS	zcash/tinyformat.h	1032;"	d
TINYFORMAT_OLD_LIBSTDCPLUSPLUS_WORKAROUND	zcash/tinyformat.h	154;"	d
TINYFORMAT_PASSARGS	zcash/tinyformat.h	369;"	d
TINYFORMAT_PASSARGS_1	zcash/tinyformat.h	442;"	d
TINYFORMAT_PASSARGS_10	zcash/tinyformat.h	451;"	d
TINYFORMAT_PASSARGS_11	zcash/tinyformat.h	452;"	d
TINYFORMAT_PASSARGS_12	zcash/tinyformat.h	453;"	d
TINYFORMAT_PASSARGS_13	zcash/tinyformat.h	454;"	d
TINYFORMAT_PASSARGS_14	zcash/tinyformat.h	455;"	d
TINYFORMAT_PASSARGS_15	zcash/tinyformat.h	456;"	d
TINYFORMAT_PASSARGS_16	zcash/tinyformat.h	457;"	d
TINYFORMAT_PASSARGS_2	zcash/tinyformat.h	443;"	d
TINYFORMAT_PASSARGS_3	zcash/tinyformat.h	444;"	d
TINYFORMAT_PASSARGS_4	zcash/tinyformat.h	445;"	d
TINYFORMAT_PASSARGS_5	zcash/tinyformat.h	446;"	d
TINYFORMAT_PASSARGS_6	zcash/tinyformat.h	447;"	d
TINYFORMAT_PASSARGS_7	zcash/tinyformat.h	448;"	d
TINYFORMAT_PASSARGS_8	zcash/tinyformat.h	449;"	d
TINYFORMAT_PASSARGS_9	zcash/tinyformat.h	450;"	d
TINYFORMAT_PASSARGS_TAIL	zcash/tinyformat.h	370;"	d
TINYFORMAT_PASSARGS_TAIL_1	zcash/tinyformat.h	459;"	d
TINYFORMAT_PASSARGS_TAIL_10	zcash/tinyformat.h	468;"	d
TINYFORMAT_PASSARGS_TAIL_11	zcash/tinyformat.h	469;"	d
TINYFORMAT_PASSARGS_TAIL_12	zcash/tinyformat.h	470;"	d
TINYFORMAT_PASSARGS_TAIL_13	zcash/tinyformat.h	471;"	d
TINYFORMAT_PASSARGS_TAIL_14	zcash/tinyformat.h	472;"	d
TINYFORMAT_PASSARGS_TAIL_15	zcash/tinyformat.h	473;"	d
TINYFORMAT_PASSARGS_TAIL_16	zcash/tinyformat.h	474;"	d
TINYFORMAT_PASSARGS_TAIL_2	zcash/tinyformat.h	460;"	d
TINYFORMAT_PASSARGS_TAIL_3	zcash/tinyformat.h	461;"	d
TINYFORMAT_PASSARGS_TAIL_4	zcash/tinyformat.h	462;"	d
TINYFORMAT_PASSARGS_TAIL_5	zcash/tinyformat.h	463;"	d
TINYFORMAT_PASSARGS_TAIL_6	zcash/tinyformat.h	464;"	d
TINYFORMAT_PASSARGS_TAIL_7	zcash/tinyformat.h	465;"	d
TINYFORMAT_PASSARGS_TAIL_8	zcash/tinyformat.h	466;"	d
TINYFORMAT_PASSARGS_TAIL_9	zcash/tinyformat.h	467;"	d
TINYFORMAT_USE_VARIADIC_TEMPLATES	zcash/tinyformat.h	147;"	d
TINYFORMAT_VARARGS	zcash/tinyformat.h	368;"	d
TINYFORMAT_VARARGS_1	zcash/tinyformat.h	425;"	d
TINYFORMAT_VARARGS_10	zcash/tinyformat.h	434;"	d
TINYFORMAT_VARARGS_11	zcash/tinyformat.h	435;"	d
TINYFORMAT_VARARGS_12	zcash/tinyformat.h	436;"	d
TINYFORMAT_VARARGS_13	zcash/tinyformat.h	437;"	d
TINYFORMAT_VARARGS_14	zcash/tinyformat.h	438;"	d
TINYFORMAT_VARARGS_15	zcash/tinyformat.h	439;"	d
TINYFORMAT_VARARGS_16	zcash/tinyformat.h	440;"	d
TINYFORMAT_VARARGS_2	zcash/tinyformat.h	426;"	d
TINYFORMAT_VARARGS_3	zcash/tinyformat.h	427;"	d
TINYFORMAT_VARARGS_4	zcash/tinyformat.h	428;"	d
TINYFORMAT_VARARGS_5	zcash/tinyformat.h	429;"	d
TINYFORMAT_VARARGS_6	zcash/tinyformat.h	430;"	d
TINYFORMAT_VARARGS_7	zcash/tinyformat.h	431;"	d
TINYFORMAT_VARARGS_8	zcash/tinyformat.h	432;"	d
TINYFORMAT_VARARGS_9	zcash/tinyformat.h	433;"	d
TR	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^static const int TR[16] = {$/;"	v	file:
TR	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^static const int TR[16] = {$/;"	v	file:
TRY	libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.c	27;"	d	file:
TRY	libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.c	78;"	d	file:
TRY_LOCK	zcash/sync.h	167;"	d
TX_MULTISIG	zcash/script/standard.h	/^    TX_MULTISIG,$/;"	e	enum:txnouttype
TX_NONSTANDARD	zcash/script/standard.h	/^    TX_NONSTANDARD,$/;"	e	enum:txnouttype
TX_NULL_DATA	zcash/script/standard.h	/^    TX_NULL_DATA,$/;"	e	enum:txnouttype
TX_PUBKEY	zcash/script/standard.h	/^    TX_PUBKEY,$/;"	e	enum:txnouttype
TX_PUBKEYHASH	zcash/script/standard.h	/^    TX_PUBKEYHASH,$/;"	e	enum:txnouttype
TX_SCRIPTHASH	zcash/script/standard.h	/^    TX_SCRIPTHASH,$/;"	e	enum:txnouttype
TestData	libsodium/test/default/sign.c	/^} TestData;$/;"	t	typeref:struct:TestData_	file:
TestData_	libsodium/test/default/sign.c	/^typedef struct TestData_ {$/;"	s	file:
TimingResistantEqual	zcash/utilstrencodings.h	/^bool TimingResistantEqual(const T& a, const T& b)$/;"	f
ToByteVector	zcash/script/script.h	/^std::vector<unsigned char> ToByteVector(const T& in)$/;"	f
ToString	zcash/amount.cpp	/^std::string CFeeRate::ToString() const$/;"	f	class:CFeeRate
ToString	zcash/arith_uint256.cpp	/^std::string base_uint<BITS>::ToString() const$/;"	f	class:base_uint
ToString	zcash/primitives/block.cpp	/^std::string CBlock::ToString() const$/;"	f	class:CBlock
ToString	zcash/primitives/transaction.cpp	/^std::string COutPoint::ToString() const$/;"	f	class:COutPoint
ToString	zcash/primitives/transaction.cpp	/^std::string CTransaction::ToString() const$/;"	f	class:CTransaction
ToString	zcash/primitives/transaction.cpp	/^std::string CTxIn::ToString() const$/;"	f	class:CTxIn
ToString	zcash/primitives/transaction.cpp	/^std::string CTxOut::ToString() const$/;"	f	class:CTxOut
ToString	zcash/script/script.cpp	/^std::string CScript::ToString() const$/;"	f	class:CScript
ToString	zcash/sync.cpp	/^    std::string ToString() const$/;"	f	struct:CLockLocation
ToString	zcash/uint256.cpp	/^std::string base_blob<BITS>::ToString() const$/;"	f	class:base_blob
TraceThread	zcash/zcashutil.h	/^template <typename Callable> void TraceThread(const char* name,  Callable func)$/;"	f
TransactionSignatureChecker	zcash/script/interpreter.h	/^    TransactionSignatureChecker(const CTransaction* txToIn, unsigned int nInIn) : txTo(txToIn), nIn(nInIn) {}$/;"	f	class:TransactionSignatureChecker
TransactionSignatureChecker	zcash/script/interpreter.h	/^class TransactionSignatureChecker : public BaseSignatureChecker$/;"	c
TransactionSignatureCreator	zcash/script/sign.cpp	/^TransactionSignatureCreator::TransactionSignatureCreator(const CKeyStore* keystoreIn, const CTransaction* txToIn, unsigned int nInIn, int nHashTypeIn) : BaseSignatureCreator(keystoreIn), txTo(txToIn), nIn(nInIn), nHashType(nHashTypeIn), checker(txTo, nIn) {}$/;"	f	class:TransactionSignatureCreator
TransactionSignatureCreator	zcash/script/sign.h	/^class TransactionSignatureCreator : public BaseSignatureCreator {$/;"	c
Transform	zcash/crypto/ripemd160.cpp	/^void Transform(uint32_t* s, const unsigned char* chunk)$/;"	f	namespace:__anon28::ripemd160
Transform	zcash/crypto/sha1.cpp	/^void Transform(uint32_t* s, const unsigned char* chunk)$/;"	f	namespace:__anon30::sha1
Transform	zcash/crypto/sha256.cpp	/^void Transform(uint32_t* s, const unsigned char* chunk)$/;"	f	namespace:__anon29::sha256
Transform	zcash/crypto/sha512.cpp	/^void Transform(uint64_t* s, const unsigned char* chunk)$/;"	f	namespace:__anon31::sha512
Translate	zcash/zcashutil.h	/^    boost::signals2::signal<std::string (const char* psz)> Translate;$/;"	m	class:CTranslationInterface
TruncateFile	zcash/zcashutil.cpp	/^bool TruncateFile(FILE *file, unsigned int length) {$/;"	f
TruncateIndex	zcash/crypto/equihash.cpp	/^eh_trunc TruncateIndex(const eh_index i, const unsigned int ilen)$/;"	f
TruncatedStepRow	zcash/crypto/equihash.cpp	/^TruncatedStepRow<WIDTH>::TruncatedStepRow(const TruncatedStepRow<W>& a, const TruncatedStepRow<W>& b, size_t len, size_t lenIndices, int trim) :$/;"	f	class:TruncatedStepRow
TruncatedStepRow	zcash/crypto/equihash.cpp	/^TruncatedStepRow<WIDTH>::TruncatedStepRow(const unsigned char* hashIn, size_t hInLen,$/;"	f	class:TruncatedStepRow
TruncatedStepRow	zcash/crypto/equihash.h	/^    TruncatedStepRow(const TruncatedStepRow<WIDTH>& a) : StepRow<WIDTH> {a} { }$/;"	f	class:TruncatedStepRow
TruncatedStepRow	zcash/crypto/equihash.h	/^class TruncatedStepRow : public StepRow<WIDTH>$/;"	c
TryAcquire	zcash/sync.h	/^    bool TryAcquire()$/;"	f	class:CSemaphoreGrant
TryCreateDirectory	zcash/zcashutil.cpp	/^bool TryCreateDirectory(const boost::filesystem::path& p)$/;"	f
TryEnter	zcash/sync.h	/^    bool TryEnter(const char* pszName, const char* pszFile, int nLine)$/;"	f	class:CMutexLock
TxInputStream	zcash/script/zcashconsensus.cpp	/^    TxInputStream(int nTypeIn, int nVersionIn, const unsigned char *txTo, size_t txToLen) :$/;"	f	class:__anon18::TxInputStream
TxInputStream	zcash/script/zcashconsensus.cpp	/^class TxInputStream$/;"	c	namespace:__anon18	file:
U32C	libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c	14;"	d	file:
U32C	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	25;"	d	file:
U32V	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	27;"	d	file:
U32_STR_MAXSIZE	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	369;"	d	file:
UBEGIN	zcash/utilstrencodings.h	18;"	d
UEND	zcash/utilstrencodings.h	19;"	d
UINT252_H	zcash/uint252.h	2;"	d
UNDIAGONALIZE	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h	74;"	d
UNDIAGONALIZE	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h	74;"	d
UNDIAGONALIZE	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	90;"	d
UNDIAGONALIZE_1	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	96;"	d
UNDIAGONALIZE_2	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	107;"	d
UNLOCK_FUNCTION	zcash/sync.h	/^    void unlock() UNLOCK_FUNCTION()$/;"	f	class:AnnotatedMixin
UNLOCK_FUNCTION	zcash/sync.h	/^    ~CMutexLock() UNLOCK_FUNCTION()$/;"	f	class:CMutexLock
UNLOCK_FUNCTION	zcash/threadsafety.h	28;"	d
UNLOCK_FUNCTION	zcash/threadsafety.h	47;"	d
UNUSED	libsnark/src/common/utils.hpp	/^void UNUSED(Types&&...) {}$/;"	f	namespace:libsnark
UPPER_BOUND	zcash/utilstrencodings.cpp	/^static const int64_t UPPER_BOUND = 1000000000000000000LL - 1LL;$/;"	v	file:
USE_ASM_X86_64	zcash/secp256k1/src/basic-config.h	12;"	d
USE_ASM_X86_64	zcash/secp256k1/src/libsecp256k1-config.h	93;"	d
USE_BASIC_CONFIG	zcash/secp256k1/src/gen_context.c	7;"	d	file:
USE_ECMULT_STATIC_PRECOMPUTATION	zcash/secp256k1/src/libsecp256k1-config.h	96;"	d
USE_ECMULT_STATIC_PRECOMPUTATION	zcash/secp256k1/src/tests_exhaustive.c	16;"	d	file:
USE_ENDOMORPHISM	zcash/secp256k1/src/basic-config.h	13;"	d
USE_FIELD_10X26	zcash/secp256k1/src/basic-config.h	14;"	d
USE_FIELD_10X26	zcash/secp256k1/src/basic-config.h	28;"	d
USE_FIELD_5X52	zcash/secp256k1/src/basic-config.h	15;"	d
USE_FIELD_5X52	zcash/secp256k1/src/libsecp256k1-config.h	109;"	d
USE_FIELD_INV_BUILTIN	zcash/secp256k1/src/basic-config.h	16;"	d
USE_FIELD_INV_BUILTIN	zcash/secp256k1/src/basic-config.h	26;"	d
USE_FIELD_INV_NUM	zcash/secp256k1/src/basic-config.h	17;"	d
USE_FIELD_INV_NUM	zcash/secp256k1/src/libsecp256k1-config.h	115;"	d
USE_NUM_GMP	zcash/secp256k1/src/basic-config.h	18;"	d
USE_NUM_GMP	zcash/secp256k1/src/libsecp256k1-config.h	118;"	d
USE_NUM_NONE	zcash/secp256k1/src/basic-config.h	19;"	d
USE_NUM_NONE	zcash/secp256k1/src/basic-config.h	25;"	d
USE_SCALAR_4X64	zcash/secp256k1/src/basic-config.h	20;"	d
USE_SCALAR_4X64	zcash/secp256k1/src/libsecp256k1-config.h	124;"	d
USE_SCALAR_8X32	zcash/secp256k1/src/basic-config.h	21;"	d
USE_SCALAR_8X32	zcash/secp256k1/src/basic-config.h	29;"	d
USE_SCALAR_INV_BUILTIN	zcash/secp256k1/src/basic-config.h	22;"	d
USE_SCALAR_INV_BUILTIN	zcash/secp256k1/src/basic-config.h	27;"	d
USE_SCALAR_INV_NUM	zcash/secp256k1/src/basic-config.h	23;"	d
USE_SCALAR_INV_NUM	zcash/secp256k1/src/libsecp256k1-config.h	133;"	d
UTILS_HPP_	libsnark/src/common/utils.hpp	11;"	d
UTILS_TCC_	libsnark/src/common/utils.tcc	11;"	d	file:
UintToArith256	zcash/arith_uint256.cpp	/^arith_uint256 UintToArith256(const uint256 &a)$/;"	f
Unlock	zcash/support/pagelocker.cpp	/^bool MemoryPageLocker::Unlock(const void* addr, size_t len)$/;"	f	class:MemoryPageLocker
UnlockObject	zcash/support/pagelocker.h	/^void UnlockObject(const T& t)$/;"	f
UnlockRange	zcash/support/pagelocker.h	/^    void UnlockRange(void* p, size_t size)$/;"	f	class:LockedPageManagerBase
Unopened	zcash/JoinSplit.cpp	/^JoinSplit<NumInputs, NumOutputs>* JoinSplit<NumInputs, NumOutputs>::Unopened()$/;"	f	class:libzcash::JoinSplit
Unserialize	zcash/pubkey.h	/^    void Unserialize(Stream& s, int nType, int nVersion)$/;"	f	class:CPubKey
Unserialize	zcash/serialize.h	/^    void Unserialize(Stream& s, int, int) {$/;"	f	class:CVarInt
Unserialize	zcash/serialize.h	/^    void Unserialize(Stream& s, int, int=0)$/;"	f	class:CFlatData
Unserialize	zcash/serialize.h	/^    void Unserialize(Stream& s, int, int=0)$/;"	f	class:LimitedString
Unserialize	zcash/serialize.h	/^inline void Unserialize(Stream& is, T& a, long nType, int nVersion)$/;"	f
Unserialize	zcash/serialize.h	/^inline void Unserialize(Stream& is, std::vector<T, A>& v, int nType, int nVersion)$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, bool& a, int, int=0) { char f=ser_readdata8(s); a=f; }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, char& a,      int, int=0) { a = ser_readdata8(s); } \/\/ TODO Get rid of bare char$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, double& a,    int, int=0) { a = ser_uint64_to_double(ser_readdata64(s)); }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, float& a,     int, int=0) { a = ser_uint32_to_float(ser_readdata32(s)); }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, int16_t& a,   int, int=0) { a = ser_readdata16(s); }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, int32_t& a,   int, int=0) { a = ser_readdata32(s); }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, int64_t& a,   int, int=0) { a = ser_readdata64(s); }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, int8_t& a,    int, int=0) { a = ser_readdata8(s); }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, uint16_t& a,  int, int=0) { a = ser_readdata16(s); }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, uint32_t& a,  int, int=0) { a = ser_readdata32(s); }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, uint64_t& a,  int, int=0) { a = ser_readdata64(s); }$/;"	f
Unserialize	zcash/serialize.h	/^template<typename Stream> inline void Unserialize(Stream& s, uint8_t& a,   int, int=0) { a = ser_readdata8(s); }$/;"	f
Unserialize	zcash/serialize.h	/^void Unserialize(Stream& is, CScript& v, int nType, int nVersion)$/;"	f
Unserialize	zcash/serialize.h	/^void Unserialize(Stream& is, boost::array<T, N>& item, int nType, int nVersion)$/;"	f
Unserialize	zcash/serialize.h	/^void Unserialize(Stream& is, boost::optional<T>& item, int nType, int nVersion)$/;"	f
Unserialize	zcash/serialize.h	/^void Unserialize(Stream& is, std::basic_string<C>& str, int, int)$/;"	f
Unserialize	zcash/serialize.h	/^void Unserialize(Stream& is, std::list<T, A>& l, int nType, int nVersion)$/;"	f
Unserialize	zcash/serialize.h	/^void Unserialize(Stream& is, std::map<K, T, Pred, A>& m, int nType, int nVersion)$/;"	f
Unserialize	zcash/serialize.h	/^void Unserialize(Stream& is, std::pair<K, T>& item, int nType, int nVersion)$/;"	f
Unserialize	zcash/serialize.h	/^void Unserialize(Stream& is, std::set<K, Pred, A>& m, int nType, int nVersion)$/;"	f
Unserialize	zcash/uint256.h	/^    void Unserialize(Stream& s, int nType, int nVersion)$/;"	f	class:base_blob
Unserialize_impl	zcash/serialize.h	/^void Unserialize_impl(Stream& is, std::vector<T, A>& v, int nType, int nVersion, const V&)$/;"	f
Unserialize_impl	zcash/serialize.h	/^void Unserialize_impl(Stream& is, std::vector<T, A>& v, int nType, int nVersion, const unsigned char&)$/;"	f
UntruncateIndex	zcash/crypto/equihash.cpp	/^eh_index UntruncateIndex(const eh_trunc t, const eh_index r, const unsigned int ilen)$/;"	f
UpdateHash	zcash/primitives/transaction.cpp	/^void CTransaction::UpdateHash() const$/;"	f	class:CTransaction
VALGRIND	libsodium/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/contrib/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/dist-build/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/msvc-scripts/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/src/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/src/libsodium/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/src/libsodium/include/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/test/Makefile	/^VALGRIND = $/;"	m
VALGRIND	libsodium/test/default/Makefile	/^VALGRIND = $/;"	m
VALGRIND_ENABLED	libsodium/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/contrib/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/dist-build/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/msvc-scripts/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/src/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/src/libsodium/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/src/libsodium/include/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/test/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VALGRIND_ENABLED	libsodium/test/default/Makefile	/^VALGRIND_ENABLED = no$/;"	m
VARIABLE_HPP_	libsnark/src/relations/variable.hpp	16;"	d
VARIABLE_TCC_	libsnark/src/relations/variable.tcc	18;"	d	file:
VARINT	zcash/serialize.h	378;"	d
VEC4_QUARTERROUND	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	174;"	d
VEC4_QUARTERROUND	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	21;"	d
VEC4_QUARTERROUND_SHUFFLE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	175;"	d
VEC4_QUARTERROUND_SHUFFLE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	7;"	d
VEC4_ROT	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	173;"	d
VEC4_ROT	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u4.h	2;"	d
VEC8_LINE1	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	350;"	d
VEC8_LINE1	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	54;"	d
VEC8_LINE2	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	351;"	d
VEC8_LINE2	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	57;"	d
VEC8_LINE3	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	352;"	d
VEC8_LINE3	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	60;"	d
VEC8_LINE4	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	353;"	d
VEC8_LINE4	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	63;"	d
VEC8_QUARTERROUND	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	346;"	d
VEC8_QUARTERROUND	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	52;"	d
VEC8_QUARTERROUND_NAIVE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	347;"	d
VEC8_QUARTERROUND_NAIVE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	6;"	d
VEC8_QUARTERROUND_SHUFFLE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	22;"	d
VEC8_QUARTERROUND_SHUFFLE	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	348;"	d
VEC8_QUARTERROUND_SHUFFLE2	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	349;"	d
VEC8_QUARTERROUND_SHUFFLE2	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	38;"	d
VEC8_ROT	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	2;"	d
VEC8_ROT	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	345;"	d
VEC8_ROUND	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	124;"	d
VEC8_ROUND	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	354;"	d
VEC8_ROUND_HALF	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	356;"	d
VEC8_ROUND_HALF	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	86;"	d
VEC8_ROUND_HALFANDHALF	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	105;"	d
VEC8_ROUND_HALFANDHALF	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	357;"	d
VEC8_ROUND_SEQ	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	355;"	d
VEC8_ROUND_SEQ	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/u8.h	67;"	d
VERIFY_BITS	zcash/secp256k1/src/field_10x26_impl.h	456;"	d
VERIFY_BITS	zcash/secp256k1/src/field_10x26_impl.h	458;"	d
VERIFY_BITS	zcash/secp256k1/src/field_5x52_int128_impl.h	13;"	d
VERIFY_BITS	zcash/secp256k1/src/field_5x52_int128_impl.h	15;"	d
VERIFY_CHECK	zcash/secp256k1/src/util.h	61;"	d
VERIFY_CHECK	zcash/secp256k1/src/util.h	64;"	d
VERIFY_CHECK	zcash/secp256k1/src/util.h	67;"	d
VERIFY_SETUP	zcash/secp256k1/src/util.h	62;"	d
VERIFY_SETUP	zcash/secp256k1/src/util.h	65;"	d
VERIFY_SETUP	zcash/secp256k1/src/util.h	68;"	d
VERSION	Makefile	/^VERSION = VERSION$/;"	m
VERSION	config.h	249;"	d
VERSION	demo/Makefile	/^VERSION = VERSION$/;"	m
VERSION	libsodium/Makefile	/^VERSION = 1.0.13$/;"	m
VERSION	libsodium/contrib/Makefile	/^VERSION = 1.0.13$/;"	m
VERSION	libsodium/dist-build/Makefile	/^VERSION = 1.0.13$/;"	m
VERSION	libsodium/msvc-scripts/Makefile	/^VERSION = 1.0.13$/;"	m
VERSION	libsodium/src/Makefile	/^VERSION = 1.0.13$/;"	m
VERSION	libsodium/src/libsodium/Makefile	/^VERSION = 1.0.13$/;"	m
VERSION	libsodium/src/libsodium/include/Makefile	/^VERSION = 1.0.13$/;"	m
VERSION	libsodium/test/Makefile	/^VERSION = 1.0.13$/;"	m
VERSION	libsodium/test/default/Makefile	/^VERSION = 1.0.13$/;"	m
VERSION	zcash/Makefile	/^VERSION = VERSION$/;"	m
VERSION	zcash/secp256k1/Makefile	/^VERSION = 0.1$/;"	m
VERSION	zcash/secp256k1/src/libsecp256k1-config.h	136;"	d
VG_CHECK	zcash/secp256k1/src/tests.c	35;"	d	file:
VG_CHECK	zcash/secp256k1/src/tests.c	38;"	d	file:
VG_UNDEF	zcash/secp256k1/src/tests.c	34;"	d	file:
VG_UNDEF	zcash/secp256k1/src/tests.c	37;"	d	file:
ValueString	zcash/script/script.cpp	/^inline std::string ValueString(const std::vector<unsigned char>& vch)$/;"	f	namespace:__anon19
Verify	zcash/primitives/transaction.cpp	/^bool JSDescription::Verify($/;"	f	class:JSDescription
Verify	zcash/pubkey.cpp	/^bool CPubKey::Verify(const uint256 &hash, const std::vector<unsigned char>& vchSig) const {$/;"	f	class:CPubKey
VerifyPubKey	zcash/key.cpp	/^bool CKey::VerifyPubKey(const CPubKey& pubkey) const {$/;"	f	class:CKey
VerifyScript	zcash/script/interpreter.cpp	/^bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror)$/;"	f
VerifySignature	zcash/script/interpreter.cpp	/^bool TransactionSignatureChecker::VerifySignature(const std::vector<unsigned char>& vchSig, const CPubKey& pubkey, const uint256& sighash) const$/;"	f	class:TransactionSignatureChecker
VerifySignature	zcash/script/sigcache.cpp	/^bool CachingTransactionSignatureChecker::VerifySignature(const std::vector<unsigned char>& vchSig, const CPubKey& pubkey, const uint256& sighash) const$/;"	f	class:CachingTransactionSignatureChecker
Version	libsodium/packaging/dotnet-core/prepare.py	/^class Version:$/;"	c
ViewingKey	zcash/Address.hpp	/^    ViewingKey(uint256 sk_enc) : uint256(sk_enc) { }$/;"	f	class:libzcash::ViewingKey
ViewingKey	zcash/Address.hpp	/^class ViewingKey : public uint256 {$/;"	c	namespace:libzcash
W	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination_array<FieldT> W;$/;"	m	class:libsnark::big_sigma_gadget
W	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable_array<FieldT> W;$/;"	m	class:libsnark::small_sigma_gadget
W	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> W;$/;"	m	class:libsnark::sha256_round_function_gadget
WIDTH	zcash/arith_uint256.h	/^    enum { WIDTH=BITS\/32 };$/;"	e	enum:base_uint::__anon13
WIDTH	zcash/uint256.h	/^    enum { WIDTH=BITS\/8 };$/;"	e	enum:base_blob::__anon34
WIN32_LEAN_AND_MEAN	zcash/compat.h	19;"	d
WIN32_LEAN_AND_MEAN	zcash/support/pagelocker.cpp	16;"	d	file:
WIN32_LEAN_AND_MEAN	zcash/zcashutil.cpp	62;"	d	file:
WINAPI_DESKTOP	libsodium/src/libsodium/sodium/utils.c	33;"	d	file:
WINDOWS	libsodium/packaging/dotnet-core/prepare.py	/^WINDOWS = [$/;"	v
WINDOW_A	zcash/secp256k1/src/ecmult_impl.h	21;"	d
WINDOW_A	zcash/secp256k1/src/ecmult_impl.h	24;"	d
WINDOW_A	zcash/secp256k1/src/ecmult_impl.h	27;"	d
WINDOW_A	zcash/secp256k1/src/ecmult_impl.h	32;"	d
WINDOW_G	zcash/secp256k1/src/ecmult_impl.h	22;"	d
WINDOW_G	zcash/secp256k1/src/ecmult_impl.h	25;"	d
WINDOW_G	zcash/secp256k1/src/ecmult_impl.h	28;"	d
WINDOW_G	zcash/secp256k1/src/ecmult_impl.h	37;"	d
WINDOW_G	zcash/secp256k1/src/ecmult_impl.h	40;"	d
WNAF_BITS	zcash/secp256k1/src/ecmult_const_impl.h	16;"	d
WNAF_BITS	zcash/secp256k1/src/ecmult_const_impl.h	18;"	d
WNAF_HPP_	libsnark/src/algebra/scalar_multiplication/wnaf.hpp	13;"	d
WNAF_SIZE	zcash/secp256k1/src/ecmult_const_impl.h	20;"	d
WNAF_TCC_	libsnark/src/algebra/scalar_multiplication/wnaf.tcc	15;"	d	file:
WORDS_BIGENDIAN	config.h	255;"	d
WORDS_BIGENDIAN	zcash/secp256k1/src/libsecp256k1-config.h	142;"	d
WSAEADDRINUSE	zcash/compat.h	61;"	d
WSAEALREADY	zcash/compat.h	56;"	d
WSAEINPROGRESS	zcash/compat.h	60;"	d
WSAEINTR	zcash/compat.h	59;"	d
WSAEINVAL	zcash/compat.h	55;"	d
WSAEMSGSIZE	zcash/compat.h	58;"	d
WSAENOTSOCK	zcash/compat.h	62;"	d
WSAEWOULDBLOCK	zcash/compat.h	57;"	d
WSAGetLastError	zcash/compat.h	54;"	d
W_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::vector<pb_variable_array<FieldT> > W_bits;$/;"	m	class:libsnark::sha256_message_schedule_gadget
WatchOnlySet	zcash/keystore.h	/^typedef std::set<CScript> WatchOnlySet;$/;"	t
WindowsItem	libsodium/packaging/dotnet-core/prepare.py	/^class WindowsItem:$/;"	c
WrapVarInt	zcash/serialize.h	/^CVarInt<I> WrapVarInt(I& n) { return CVarInt<I>(n); }$/;"	f
Write	zcash/crypto/hmac_sha256.h	/^    CHMAC_SHA256& Write(const unsigned char* data, size_t len)$/;"	f	class:CHMAC_SHA256
Write	zcash/crypto/hmac_sha512.h	/^    CHMAC_SHA512& Write(const unsigned char* data, size_t len)$/;"	f	class:CHMAC_SHA512
Write	zcash/crypto/ripemd160.cpp	/^CRIPEMD160& CRIPEMD160::Write(const unsigned char* data, size_t len)$/;"	f	class:CRIPEMD160
Write	zcash/crypto/sha1.cpp	/^CSHA1& CSHA1::Write(const unsigned char* data, size_t len)$/;"	f	class:CSHA1
Write	zcash/crypto/sha256.cpp	/^CSHA256& CSHA256::Write(const unsigned char* data, size_t len)$/;"	f	class:CSHA256
Write	zcash/crypto/sha512.cpp	/^CSHA512& CSHA512::Write(const unsigned char* data, size_t len)$/;"	f	class:CSHA512
Write	zcash/hash.h	/^    CHash160& Write(const unsigned char *data, size_t len) {$/;"	f	class:CHash160
Write	zcash/hash.h	/^    CHash256& Write(const unsigned char *data, size_t len) {$/;"	f	class:CHash256
WriteBE32	zcash/crypto/common.h	/^void static inline WriteBE32(unsigned char* ptr, uint32_t x)$/;"	f
WriteBE64	zcash/crypto/common.h	/^void static inline WriteBE64(unsigned char* ptr, uint64_t x)$/;"	f
WriteCompactSize	zcash/serialize.h	/^void WriteCompactSize(Stream& os, uint64_t nSize)$/;"	f
WriteLE16	zcash/crypto/common.h	/^void static inline WriteLE16(unsigned char* ptr, uint16_t x)$/;"	f
WriteLE32	zcash/crypto/common.h	/^void static inline WriteLE32(unsigned char* ptr, uint32_t x)$/;"	f
WriteLE64	zcash/crypto/common.h	/^void static inline WriteLE64(unsigned char* ptr, uint64_t x)$/;"	f
WriteVarInt	zcash/serialize.h	/^void WriteVarInt(Stream& os, I n)$/;"	f
WriteVersion	zcash/streams.h	/^    void WriteVersion()          { *this << nVersion; }$/;"	f	class:CAutoFile
WriteVersion	zcash/streams.h	/^    void WriteVersion()          { *this << nVersion; }$/;"	f	class:CBaseDataStream
X	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    alt_bn128_Fq X, Y, Z;$/;"	m	class:libsnark::alt_bn128_G1
X	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    alt_bn128_Fq2 X, Y, Z;$/;"	m	class:libsnark::alt_bn128_G2
X	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination_array<FieldT> X;$/;"	m	class:libsnark::choice_gadget
X	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination_array<FieldT> X;$/;"	m	class:libsnark::majority_gadget
X	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable<FieldT> X;$/;"	m	class:libsnark::lastbits_gadget
X	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe X;$/;"	m	struct:__anon5
X	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe X;$/;"	m	struct:__anon6
X	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe X;$/;"	m	struct:__anon7
XCHACHA20_OUT_MAX	libsodium/test/default/xchacha20.c	75;"	d	file:
XCR0_AVX	libsodium/src/libsodium/sodium/runtime.c	39;"	d	file:
XCR0_SSE	libsodium/src/libsodium/sodium/runtime.c	38;"	d	file:
XChaCha20Poly1305TV	libsodium/test/default/xchacha20.c	/^} XChaCha20Poly1305TV;$/;"	t	typeref:struct:XChaCha20Poly1305TV_	file:
XChaCha20Poly1305TV_	libsodium/test/default/xchacha20.c	/^typedef struct XChaCha20Poly1305TV_ {$/;"	s	file:
XChaCha20TV	libsodium/test/default/xchacha20.c	/^} XChaCha20TV;$/;"	t	typeref:struct:XChaCha20TV_	file:
XChaCha20TV_	libsodium/test/default/xchacha20.c	/^typedef struct XChaCha20TV_ {$/;"	s	file:
XOR	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	36;"	d
XOR	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	30;"	d	file:
XOR3_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^class XOR3_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
XOR3_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^XOR3_gadget<FieldT>::XOR3_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::XOR3_gadget
XOR4	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	150;"	d	file:
XOR4	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	208;"	d	file:
XOR4_2	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	156;"	d	file:
XOR4_2	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	209;"	d	file:
XORx	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	411;"	d	file:
X_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    size_t X_bits;$/;"	m	class:libsnark::lastbits_gadget
Y	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    alt_bn128_Fq X, Y, Z;$/;"	m	class:libsnark::alt_bn128_G1
Y	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    alt_bn128_Fq2 X, Y, Z;$/;"	m	class:libsnark::alt_bn128_G2
Y	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination_array<FieldT> Y;$/;"	m	class:libsnark::choice_gadget
Y	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination_array<FieldT> Y;$/;"	m	class:libsnark::majority_gadget
Y	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Y;$/;"	m	struct:__anon5
Y	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Y;$/;"	m	struct:__anon6
Y	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Y;$/;"	m	struct:__anon7
YminusX	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe YminusX;$/;"	m	struct:__anon9
YplusX	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe YplusX;$/;"	m	struct:__anon9
Z	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    alt_bn128_Fq X, Y, Z;$/;"	m	class:libsnark::alt_bn128_G1
Z	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    alt_bn128_Fq2 X, Y, Z;$/;"	m	class:libsnark::alt_bn128_G2
Z	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination_array<FieldT> Z;$/;"	m	class:libsnark::choice_gadget
Z	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination_array<FieldT> Z;$/;"	m	class:libsnark::majority_gadget
Z	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Z;$/;"	m	struct:__anon5
Z	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Z;$/;"	m	struct:__anon6
Z	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Z;$/;"	m	struct:__anon7
Z	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe Z;$/;"	m	struct:__anon9
ZCASHCONSENSUS_API_VER	zcash/script/zcashconsensus.h	34;"	d
ZCINCREMENTALMERKLETREE_H_	zcash/IncrementalMerkleTree.hpp	2;"	d
ZCIncrementalMerkleTree	zcash/IncrementalMerkleTree.hpp	/^typedef libzcash::IncrementalMerkleTree<INCREMENTAL_MERKLE_TREE_DEPTH, libzcash::SHA256Compress> ZCIncrementalMerkleTree;$/;"	t
ZCIncrementalWitness	zcash/IncrementalMerkleTree.hpp	/^typedef libzcash::IncrementalWitness<INCREMENTAL_MERKLE_TREE_DEPTH, libzcash::SHA256Compress> ZCIncrementalWitness;$/;"	t
ZCJoinSplit	zcash/JoinSplit.hpp	/^                            ZC_NUM_JS_OUTPUTS> ZCJoinSplit;$/;"	t
ZCNoteDecryption	zcash/NoteEncryption.hpp	/^typedef libzcash::NoteDecryption<ZC_NOTEPLAINTEXT_SIZE> ZCNoteDecryption;$/;"	t
ZCNoteEncryption	zcash/NoteEncryption.hpp	/^typedef libzcash::NoteEncryption<ZC_NOTEPLAINTEXT_SIZE> ZCNoteEncryption;$/;"	t
ZCProof	zcash/Proof.cpp	/^ZCProof::ZCProof(const r1cs_ppzksnark_proof<curve_pp> &proof)$/;"	f	class:libzcash::ZCProof
ZCProof	zcash/Proof.hpp	/^    ZCProof() : g_A(), g_A_prime(), g_B(), g_B_prime(), g_C(), g_C_prime(), g_K(), g_H() { }$/;"	f	class:libzcash::ZCProof
ZCProof	zcash/Proof.hpp	/^class ZCProof {$/;"	c	namespace:libzcash
ZCTestingIncrementalMerkleTree	zcash/IncrementalMerkleTree.hpp	/^typedef libzcash::IncrementalMerkleTree<INCREMENTAL_MERKLE_TREE_DEPTH_TESTING, libzcash::SHA256Compress> ZCTestingIncrementalMerkleTree;$/;"	t
ZCTestingIncrementalWitness	zcash/IncrementalMerkleTree.hpp	/^typedef libzcash::IncrementalWitness<INCREMENTAL_MERKLE_TREE_DEPTH_TESTING, libzcash::SHA256Compress> ZCTestingIncrementalWitness;$/;"	t
ZC_GetBaseParamsDir	zcash/zcashutil.cpp	/^static boost::filesystem::path ZC_GetBaseParamsDir()$/;"	f	file:
ZC_GetParamsDir	zcash/zcashutil.cpp	/^const boost::filesystem::path &ZC_GetParamsDir()$/;"	f
ZC_MEMO_SIZE	zcash/Zcash.h	13;"	d
ZC_NOTEPLAINTEXT_LEADING	zcash/Zcash.h	9;"	d
ZC_NOTEPLAINTEXT_SIZE	zcash/Zcash.h	15;"	d
ZC_NOTE_ENCRYPTION_H_	zcash/NoteEncryption.hpp	7;"	d
ZC_NUM_JS_INPUTS	zcash/Zcash.h	4;"	d
ZC_NUM_JS_OUTPUTS	zcash/Zcash.h	5;"	d
ZC_RHO_SIZE	zcash/Zcash.h	11;"	d
ZC_R_SIZE	zcash/Zcash.h	12;"	d
ZC_V_SIZE	zcash/Zcash.h	10;"	d
ZERO	zcash/circuit/gadget.tcc	/^    pb_variable<FieldT> ZERO;$/;"	m	class:joinsplit_gadget	file:
Zt	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    FieldT Zt;$/;"	m	class:libsnark::qap_instance_evaluation
_	zcash/zcashutil.h	/^inline std::string _(const char* psz)$/;"	f
_ACJNI_JAVAC	zcash/secp256k1/Makefile	/^_ACJNI_JAVAC = no$/;"	m
_APS_NEXT_COMMAND_VALUE	libsodium/builds/msvc/resource.h	10;"	d
_APS_NEXT_CONTROL_VALUE	libsodium/builds/msvc/resource.h	11;"	d
_APS_NEXT_RESOURCE_VALUE	libsodium/builds/msvc/resource.h	9;"	d
_APS_NEXT_SYMED_VALUE	libsodium/builds/msvc/resource.h	12;"	d
_Included_org_bitcoin_NativeSecp256k1	zcash/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h	7;"	d
_Included_org_bitcoin_Secp256k1Context	zcash/secp256k1/src/java/org_bitcoin_Secp256k1Context.h	7;"	d
_LINUX_SOURCE	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	21;"	d	file:
_LINUX_SOURCE	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	20;"	d	file:
_POSIX_C_SOURCE	zcash/zcashutil.cpp	31;"	d	file:
_POSIX_C_SOURCE	zcash/zcashutil.cpp	34;"	d	file:
_PRF_H_	zcash/prf.h	7;"	d
_SECP256K1_	zcash/secp256k1/include/secp256k1.h	2;"	d
_SECP256K1_BASIC_CONFIG_	zcash/secp256k1/src/basic-config.h	8;"	d
_SECP256K1_BENCH_H_	zcash/secp256k1/src/bench.h	8;"	d
_SECP256K1_CONTRIB_BER_PRIVATEKEY_H_	zcash/secp256k1/contrib/lax_der_privatekey_parsing.h	29;"	d
_SECP256K1_CONTRIB_LAX_DER_PARSING_H_	zcash/secp256k1/contrib/lax_der_parsing.h	52;"	d
_SECP256K1_ECDH_	zcash/secp256k1/include/secp256k1_ecdh.h	2;"	d
_SECP256K1_ECDSA_	zcash/secp256k1/src/ecdsa.h	8;"	d
_SECP256K1_ECDSA_IMPL_H_	zcash/secp256k1/src/ecdsa_impl.h	9;"	d
_SECP256K1_ECKEY_	zcash/secp256k1/src/eckey.h	8;"	d
_SECP256K1_ECKEY_IMPL_H_	zcash/secp256k1/src/eckey_impl.h	8;"	d
_SECP256K1_ECMULT_	zcash/secp256k1/src/ecmult.h	8;"	d
_SECP256K1_ECMULT_CONST_	zcash/secp256k1/src/ecmult_const.h	8;"	d
_SECP256K1_ECMULT_CONST_IMPL_	zcash/secp256k1/src/ecmult_const_impl.h	8;"	d
_SECP256K1_ECMULT_GEN_	zcash/secp256k1/src/ecmult_gen.h	8;"	d
_SECP256K1_ECMULT_GEN_IMPL_H_	zcash/secp256k1/src/ecmult_gen_impl.h	8;"	d
_SECP256K1_ECMULT_IMPL_H_	zcash/secp256k1/src/ecmult_impl.h	8;"	d
_SECP256K1_ECMULT_STATIC_CONTEXT_	zcash/secp256k1/src/ecmult_static_context.h	2;"	d
_SECP256K1_FIELD_	zcash/secp256k1/src/field.h	8;"	d
_SECP256K1_FIELD_IMPL_H_	zcash/secp256k1/src/field_impl.h	8;"	d
_SECP256K1_FIELD_INNER5X52_IMPL_H_	zcash/secp256k1/src/field_5x52_asm_impl.h	15;"	d
_SECP256K1_FIELD_INNER5X52_IMPL_H_	zcash/secp256k1/src/field_5x52_int128_impl.h	8;"	d
_SECP256K1_FIELD_REPR_	zcash/secp256k1/src/field_10x26.h	8;"	d
_SECP256K1_FIELD_REPR_	zcash/secp256k1/src/field_5x52.h	8;"	d
_SECP256K1_FIELD_REPR_IMPL_H_	zcash/secp256k1/src/field_10x26_impl.h	8;"	d
_SECP256K1_FIELD_REPR_IMPL_H_	zcash/secp256k1/src/field_5x52_impl.h	8;"	d
_SECP256K1_GROUP_	zcash/secp256k1/src/group.h	8;"	d
_SECP256K1_GROUP_IMPL_H_	zcash/secp256k1/src/group_impl.h	8;"	d
_SECP256K1_HASH_	zcash/secp256k1/src/hash.h	8;"	d
_SECP256K1_HASH_IMPL_H_	zcash/secp256k1/src/hash_impl.h	8;"	d
_SECP256K1_MODULE_ECDH_MAIN_	zcash/secp256k1/src/modules/ecdh/main_impl.h	8;"	d
_SECP256K1_MODULE_ECDH_TESTS_	zcash/secp256k1/src/modules/ecdh/tests_impl.h	8;"	d
_SECP256K1_MODULE_RECOVERY_MAIN_	zcash/secp256k1/src/modules/recovery/main_impl.h	8;"	d
_SECP256K1_MODULE_RECOVERY_TESTS_	zcash/secp256k1/src/modules/recovery/tests_impl.h	8;"	d
_SECP256K1_NUM_	zcash/secp256k1/src/num.h	8;"	d
_SECP256K1_NUM_IMPL_H_	zcash/secp256k1/src/num_impl.h	8;"	d
_SECP256K1_NUM_REPR_	zcash/secp256k1/src/num_gmp.h	8;"	d
_SECP256K1_NUM_REPR_IMPL_H_	zcash/secp256k1/src/num_gmp_impl.h	8;"	d
_SECP256K1_RECOVERY_	zcash/secp256k1/include/secp256k1_recovery.h	2;"	d
_SECP256K1_SCALAR_	zcash/secp256k1/src/scalar.h	8;"	d
_SECP256K1_SCALAR_IMPL_H_	zcash/secp256k1/src/scalar_impl.h	8;"	d
_SECP256K1_SCALAR_REPR_	zcash/secp256k1/src/scalar_4x64.h	8;"	d
_SECP256K1_SCALAR_REPR_	zcash/secp256k1/src/scalar_8x32.h	8;"	d
_SECP256K1_SCALAR_REPR_	zcash/secp256k1/src/scalar_low.h	8;"	d
_SECP256K1_SCALAR_REPR_IMPL_H_	zcash/secp256k1/src/scalar_4x64_impl.h	8;"	d
_SECP256K1_SCALAR_REPR_IMPL_H_	zcash/secp256k1/src/scalar_8x32_impl.h	8;"	d
_SECP256K1_SCALAR_REPR_IMPL_H_	zcash/secp256k1/src/scalar_low_impl.h	8;"	d
_SECP256K1_TESTRAND_H_	zcash/secp256k1/src/testrand.h	8;"	d
_SECP256K1_TESTRAND_IMPL_H_	zcash/secp256k1/src/testrand_impl.h	8;"	d
_SECP256K1_UTIL_H_	zcash/secp256k1/src/util.h	8;"	d
_WIN32_IE	zcash/zcashutil.cpp	58;"	d	file:
_WIN32_IE	zcash/zcashutil.cpp	60;"	d	file:
_WIN32_WINNT	zcash/compat.h	15;"	d
_WIN32_WINNT	zcash/compat.h	17;"	d
_WIN32_WINNT	zcash/support/pagelocker.cpp	13;"	d	file:
_WIN32_WINNT	zcash/support/pagelocker.cpp	15;"	d	file:
_WIN32_WINNT	zcash/zcashutil.cpp	53;"	d	file:
_WIN32_WINNT	zcash/zcashutil.cpp	55;"	d	file:
_ZCADDRESS_H_	zcash/Address.hpp	2;"	d
_ZCCONSTANTS_H_	zcash/Zcash.h	2;"	d
_ZCJOINSPLIT_H_	zcash/JoinSplit.hpp	2;"	d
_ZCNOTE_H_	zcash/Note.hpp	2;"	d
_ZCPROOF_H_	zcash/Proof.hpp	2;"	d
__CMPTEST_H__	libsodium/test/default/cmptest.h	3;"	d
__STDC_WANT_LIB_EXT1__	libsodium/src/libsodium/sodium/utils.c	2;"	d	file:
__ZCASH_UTIL_H	zcash/util.h	2;"	d
__attribute__	libsodium/src/libsodium/include/sodium/export.h	7;"	d
__attribute__	libsodium/src/libsodium/include/sodium/export.h	9;"	d
__attribute__	libsodium/src/libsodium/include/sodium/private/common.h	182;"	d
__attribute__	libsodium/src/libsodium/include/sodium/private/common.h	184;"	d
__fdelt_warn	zcash/compat/glibc_compat.cpp	/^extern "C" FDELT_TYPE __fdelt_warn(FDELT_TYPE a)$/;"	f
__init__	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^    def __init__(self, s=None):$/;"	m	class:sha224
__init__	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^    def __init__(self, s=None):$/;"	m	class:sha256
__init__	libsodium/packaging/dotnet-core/prepare.py	/^  def __init__(self, libsodium_version, package_version):$/;"	m	class:Version
__init__	libsodium/packaging/dotnet-core/prepare.py	/^  def __init__(self, version, filename):$/;"	m	class:ExtraItem
__init__	libsodium/packaging/dotnet-core/prepare.py	/^  def __init__(self, version, rid, codename):$/;"	m	class:MacOSItem
__init__	libsodium/packaging/dotnet-core/prepare.py	/^  def __init__(self, version, rid, docker_image):$/;"	m	class:LinuxItem
__init__	libsodium/packaging/dotnet-core/prepare.py	/^  def __init__(self, version, rid, platform):$/;"	m	class:WindowsItem
_alloc_aligned	libsodium/src/libsodium/sodium/utils.c	/^_alloc_aligned(const size_t size)$/;"	f	file:
_basic_parallel_radix2_FFT	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.tcc	/^void _basic_parallel_radix2_FFT(std::vector<FieldT> &a, const FieldT &omega)$/;"	f	namespace:libsnark
_basic_parallel_radix2_FFT_inner	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.tcc	/^void _basic_parallel_radix2_FFT_inner(std::vector<FieldT> &a, const FieldT &omega, const size_t log_cpus)$/;"	f	namespace:libsnark
_basic_radix2_FFT	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.tcc	28;"	d	file:
_basic_radix2_lagrange_coeffs	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.tcc	/^std::vector<FieldT> _basic_radix2_lagrange_coeffs(const size_t m, const FieldT &t)$/;"	f	namespace:libsnark
_basic_serial_radix2_FFT	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.tcc	/^void _basic_serial_radix2_FFT(std::vector<FieldT> &a, const FieldT &omega)$/;"	f	namespace:libsnark
_bswap64	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^_bswap64(const uint64_t x)$/;"	f	file:
_bswap64	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	38;"	d	file:
_bswap64	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	40;"	d	file:
_cpu_features	libsodium/src/libsodium/sodium/runtime.c	/^static CPUFeatures _cpu_features;$/;"	v	file:
_cpuid	libsodium/src/libsodium/sodium/runtime.c	/^_cpuid(unsigned int cpu_info[4U], const unsigned int cpu_info_type)$/;"	f	file:
_crypto_box_curve25519xchacha20poly1305_seal_nonce	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c	/^_crypto_box_curve25519xchacha20poly1305_seal_nonce(unsigned char *nonce,$/;"	f	file:
_crypto_box_seal_nonce	libsodium/src/libsodium/crypto_box/crypto_box_seal.c	/^_crypto_box_seal_nonce(unsigned char *nonce,$/;"	f	file:
_crypto_generichash_blake2b_pick_best_implementation	libsodium/src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c	/^_crypto_generichash_blake2b_pick_best_implementation(void)$/;"	f
_crypto_onetimeauth_poly1305_pick_best_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^_crypto_onetimeauth_poly1305_pick_best_implementation(void)$/;"	f
_crypto_pwhash_argon2_pick_best_implementation	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^_crypto_pwhash_argon2_pick_best_implementation(void)$/;"	f
_crypto_scalarmult_curve25519_pick_best_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^_crypto_scalarmult_curve25519_pick_best_implementation(void)$/;"	f
_crypto_sign_ed25519_detached	libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c	/^_crypto_sign_ed25519_detached(unsigned char *sig, unsigned long long *siglen_p,$/;"	f
_crypto_sign_ed25519_ref10_hinit	libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c	/^_crypto_sign_ed25519_ref10_hinit(crypto_hash_sha512_state *hs, int prehashed)$/;"	f
_crypto_sign_ed25519_verify_detached	libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c	/^_crypto_sign_ed25519_verify_detached(const unsigned char *sig,$/;"	f
_crypto_stream_chacha20_pick_best_implementation	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^_crypto_stream_chacha20_pick_best_implementation(void)$/;"	f
_crypto_stream_salsa20_pick_best_implementation	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c	/^_crypto_stream_salsa20_pick_best_implementation(void)$/;"	f
_fakealign_mm_loadl_epi64	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^_fakealign_mm_loadl_epi64(const void *m)$/;"	f	file:
_fe51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	5;"	d
_fe51_mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^_fe51_mul:$/;"	l
_fe51_mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	9;"	d
_fe51_nsquare	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	11;"	d
_fe51_nsquare	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^_fe51_nsquare:$/;"	l
_fe51_pack	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	7;"	d
_fe51_pack	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^_fe51_pack:$/;"	l
_free_aligned	libsodium/src/libsodium/sodium/utils.c	/^_free_aligned(unsigned char *const ptr, const size_t size)$/;"	f	file:
_ftime	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	46;"	d	file:
_instance	zcash/support/pagelocker.cpp	/^LockedPageManager* LockedPageManager::_instance = NULL;$/;"	m	class:LockedPageManager	file:
_instance	zcash/support/pagelocker.h	/^    static LockedPageManager* _instance;$/;"	m	class:LockedPageManager
_ladder	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^_ladder:$/;"	l
_ladder	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h	5;"	d
_ladder_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^_ladder_base:$/;"	l
_ladder_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h	5;"	d
_mm256_zeroall	libsodium/configure	/^ _mm256_zeroall();$/;"	f
_mm_cvtsi64_si128	libsodium/src/libsodium/include/sodium/private/sse2_64_32.h	38;"	d
_mm_loadl_epi64	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	74;"	d	file:
_mm_roti_epi64	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h	8;"	d
_mm_roti_epi64	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h	8;"	d
_mm_roti_epi64	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	11;"	d
_mm_set1_epi64x	libsodium/src/libsodium/include/sodium/private/sse2_64_32.h	29;"	d
_mm_set_epi64x	libsodium/src/libsodium/include/sodium/private/sse2_64_32.h	18;"	d
_mprotect_noaccess	libsodium/src/libsodium/sodium/utils.c	/^_mprotect_noaccess(void *ptr, size_t size)$/;"	f	file:
_mprotect_readonly	libsodium/src/libsodium/sodium/utils.c	/^_mprotect_readonly(void *ptr, size_t size)$/;"	f	file:
_mprotect_readwrite	libsodium/src/libsodium/sodium/utils.c	/^_mprotect_readwrite(void *ptr, size_t size)$/;"	f	file:
_multiply_by_coset	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.tcc	/^void _multiply_by_coset(std::vector<FieldT> &a, const FieldT &g)$/;"	f	namespace:libsnark
_out_of_bounds	libsodium/src/libsodium/sodium/utils.c	/^_out_of_bounds(void)$/;"	f	file:
_pad0	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^static const unsigned char _pad0[16] = { 0 };$/;"	v	file:
_page_round	libsodium/src/libsodium/sodium/utils.c	/^_page_round(const size_t size)$/;"	f	file:
_randombytes_linux_getrandom	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^_randombytes_linux_getrandom(void * const buf, const size_t size)$/;"	f	file:
_randombytes_linux_getrandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^_randombytes_linux_getrandom(void * const buf, const size_t size)$/;"	f	file:
_sodium_alloc_init	libsodium/src/libsodium/sodium/utils.c	/^_sodium_alloc_init(void)$/;"	f
_sodium_crit_init	libsodium/src/libsodium/sodium/core.c	/^_sodium_crit_init(void)$/;"	f
_sodium_dummy_symbol_to_prevent_compare_lto	libsodium/src/libsodium/sodium/utils.c	/^_sodium_dummy_symbol_to_prevent_compare_lto(const unsigned char *b1,$/;"	f
_sodium_dummy_symbol_to_prevent_memcmp_lto	libsodium/src/libsodium/sodium/utils.c	/^_sodium_dummy_symbol_to_prevent_memcmp_lto(const unsigned char *b1,$/;"	f
_sodium_dummy_symbol_to_prevent_memzero_lto	libsodium/src/libsodium/sodium/utils.c	/^_sodium_dummy_symbol_to_prevent_memzero_lto(void *const  pnt,$/;"	f
_sodium_lock	libsodium/src/libsodium/sodium/core.c	/^static CRITICAL_SECTION _sodium_lock;$/;"	v	file:
_sodium_lock	libsodium/src/libsodium/sodium/core.c	/^static pthread_mutex_t _sodium_lock = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
_sodium_lock	libsodium/src/libsodium/sodium/core.c	/^static volatile int _sodium_lock;$/;"	v	file:
_sodium_lock_initialized	libsodium/src/libsodium/sodium/core.c	/^static volatile LONG    _sodium_lock_initialized;$/;"	v	file:
_sodium_malloc	libsodium/src/libsodium/sodium/utils.c	/^_sodium_malloc(const size_t size)$/;"	f	file:
_sodium_mprotect	libsodium/src/libsodium/sodium/utils.c	/^_sodium_mprotect(void *ptr, int (*cb)(void *ptr, size_t size))$/;"	f	file:
_sodium_runtime_arm_cpu_features	libsodium/src/libsodium/sodium/runtime.c	/^_sodium_runtime_arm_cpu_features(CPUFeatures * const cpu_features)$/;"	f	file:
_sodium_runtime_get_cpu_features	libsodium/src/libsodium/sodium/runtime.c	/^_sodium_runtime_get_cpu_features(void)$/;"	f
_sodium_runtime_intel_cpu_features	libsodium/src/libsodium/sodium/runtime.c	/^_sodium_runtime_intel_cpu_features(CPUFeatures * const cpu_features)$/;"	f	file:
_stream_salsa20_xmm6	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^_stream_salsa20_xmm6:$/;"	l
_stream_salsa20_xmm6_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^_stream_salsa20_xmm6_xor_ic:$/;"	l
_timeb	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	47;"	d	file:
_unprotected_ptr_from_user_ptr	libsodium/src/libsodium/sodium/utils.c	/^_unprotected_ptr_from_user_ptr(void *const ptr)$/;"	f	file:
a	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> a;$/;"	m	class:libsnark::sha256_round_function_gadget
a	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    linear_combination<FieldT> a, b, c;$/;"	m	class:libsnark::r1cs_constraint
a	libsodium/test/default/auth.c	/^static unsigned char a[crypto_auth_BYTES];$/;"	v	file:
a	libsodium/test/default/auth2.c	/^static unsigned char a[32];$/;"	v	file:
a	libsodium/test/default/auth3.c	/^static unsigned char a[32] = { 0x37, 0x2e, 0xfc, 0xf9, 0xb4, 0x0b, 0x35, 0xc2,$/;"	v	file:
a	libsodium/test/default/auth5.c	/^static unsigned char a[32];$/;"	v	file:
a	libsodium/test/default/auth6.c	/^static unsigned char a[64];$/;"	v	file:
a	libsodium/test/default/auth7.c	/^static unsigned char a[64];$/;"	v	file:
a	libsodium/test/default/onetimeauth.c	/^static unsigned char a[16];$/;"	v	file:
a	libsodium/test/default/onetimeauth2.c	/^static unsigned char a[16] = { 0xf3, 0xff, 0xc7, 0x70, 0x3f, 0x94, 0x00, 0xe5,$/;"	v	file:
a	libsodium/test/default/onetimeauth7.c	/^static unsigned char a[16];$/;"	v	file:
a2	libsodium/test/default/auth.c	/^static unsigned char a2[crypto_auth_hmacsha512_BYTES];$/;"	v	file:
a_pk	zcash/Address.hpp	/^    uint256 a_pk;$/;"	m	class:libzcash::PaymentAddress
a_pk	zcash/Note.hpp	/^    uint256 a_pk;$/;"	m	class:libzcash::Note
a_pk	zcash/circuit/note.tcc	/^    std::shared_ptr<digest_variable<FieldT>> a_pk;$/;"	m	class:input_note_gadget	file:
a_pk	zcash/circuit/note.tcc	/^    std::shared_ptr<digest_variable<FieldT>> a_pk;$/;"	m	class:output_note_gadget	file:
a_sk	zcash/circuit/note.tcc	/^    std::shared_ptr<digest_variable<FieldT>> a_sk;$/;"	m	class:input_note_gadget	file:
abs_builddir	Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel$/;"	m
abs_builddir	demo/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/demo$/;"	m
abs_builddir	libsodium/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_builddir	libsodium/contrib/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/contrib$/;"	m
abs_builddir	libsodium/dist-build/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/dist-build$/;"	m
abs_builddir	libsodium/msvc-scripts/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/msvc-scripts$/;"	m
abs_builddir	libsodium/src/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/src$/;"	m
abs_builddir	libsodium/src/libsodium/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/src\/libsodium$/;"	m
abs_builddir	libsodium/src/libsodium/include/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/src\/libsodium\/include$/;"	m
abs_builddir	libsodium/test/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/test$/;"	m
abs_builddir	libsodium/test/default/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/test\/default$/;"	m
abs_builddir	zcash/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/zcash$/;"	m
abs_builddir	zcash/secp256k1/Makefile	/^abs_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1$/;"	m
abs_srcdir	Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel$/;"	m
abs_srcdir	demo/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/demo$/;"	m
abs_srcdir	libsodium/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_srcdir	libsodium/contrib/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/contrib$/;"	m
abs_srcdir	libsodium/dist-build/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/dist-build$/;"	m
abs_srcdir	libsodium/msvc-scripts/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/msvc-scripts$/;"	m
abs_srcdir	libsodium/src/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/src$/;"	m
abs_srcdir	libsodium/src/libsodium/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/src\/libsodium$/;"	m
abs_srcdir	libsodium/src/libsodium/include/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/src\/libsodium\/include$/;"	m
abs_srcdir	libsodium/test/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/test$/;"	m
abs_srcdir	libsodium/test/default/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/test\/default$/;"	m
abs_srcdir	zcash/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/zcash$/;"	m
abs_srcdir	zcash/secp256k1/Makefile	/^abs_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1$/;"	m
abs_top_builddir	Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel$/;"	m
abs_top_builddir	demo/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel$/;"	m
abs_top_builddir	libsodium/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_builddir	libsodium/contrib/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_builddir	libsodium/dist-build/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_builddir	libsodium/msvc-scripts/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_builddir	libsodium/src/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_builddir	libsodium/src/libsodium/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_builddir	libsodium/src/libsodium/include/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_builddir	libsodium/test/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_builddir	libsodium/test/default/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_builddir	zcash/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel$/;"	m
abs_top_builddir	zcash/secp256k1/Makefile	/^abs_top_builddir = \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1$/;"	m
abs_top_srcdir	Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel$/;"	m
abs_top_srcdir	demo/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel$/;"	m
abs_top_srcdir	libsodium/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_srcdir	libsodium/contrib/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_srcdir	libsodium/dist-build/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_srcdir	libsodium/msvc-scripts/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_srcdir	libsodium/src/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_srcdir	libsodium/src/libsodium/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_srcdir	libsodium/src/libsodium/include/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_srcdir	libsodium/test/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_srcdir	libsodium/test/default/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium$/;"	m
abs_top_srcdir	zcash/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel$/;"	m
abs_top_srcdir	zcash/secp256k1/Makefile	/^abs_top_srcdir = \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1$/;"	m
ac_ct_AR	libsodium/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/contrib/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/dist-build/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/msvc-scripts/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/src/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/src/libsodium/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/src/libsodium/include/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/test/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	libsodium/test/default/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_AR	zcash/secp256k1/Makefile	/^ac_ct_AR = ar$/;"	m
ac_ct_CC	Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	demo/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libsodium/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libsodium/contrib/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libsodium/dist-build/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libsodium/msvc-scripts/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libsodium/src/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libsodium/src/libsodium/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libsodium/src/libsodium/include/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libsodium/test/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	libsodium/test/default/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	zcash/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC	zcash/secp256k1/Makefile	/^ac_ct_CC = gcc$/;"	m
ac_ct_CC_FOR_BUILD	zcash/secp256k1/Makefile	/^ac_ct_CC_FOR_BUILD = gcc$/;"	m
ac_ct_CXX	Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	demo/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_CXX	zcash/Makefile	/^ac_ct_CXX = g++$/;"	m
ac_ct_DUMPBIN	libsodium/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/contrib/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/dist-build/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/msvc-scripts/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/src/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/src/libsodium/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/src/libsodium/include/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/test/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	libsodium/test/default/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_ct_DUMPBIN	zcash/secp256k1/Makefile	/^ac_ct_DUMPBIN = $/;"	m
ac_fn_c_check_func	libsodium/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_func	zcash/secp256k1/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	libsodium/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_compile	zcash/secp256k1/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_check_header_mongrel	libsodium/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_header_mongrel	zcash/secp256k1/configure	/^ac_fn_c_check_header_mongrel ()$/;"	f
ac_fn_c_check_type	zcash/secp256k1/configure	/^ac_fn_c_check_type ()$/;"	f
ac_fn_c_find_intX_t	configure	/^ac_fn_c_find_intX_t ()$/;"	f
ac_fn_c_find_uintX_t	configure	/^ac_fn_c_find_uintX_t ()$/;"	f
ac_fn_c_try_compile	configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_compile	libsodium/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_compile	zcash/secp256k1/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_cpp	libsodium/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_cpp	zcash/secp256k1/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	libsodium/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_link	zcash/secp256k1/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	libsodium/configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_c_try_run	zcash/secp256k1/configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_check_decl	configure	/^ac_fn_cxx_check_decl ()$/;"	f
ac_fn_cxx_check_func	configure	/^ac_fn_cxx_check_func ()$/;"	f
ac_fn_cxx_check_header_compile	configure	/^ac_fn_cxx_check_header_compile ()$/;"	f
ac_fn_cxx_check_header_mongrel	configure	/^ac_fn_cxx_check_header_mongrel ()$/;"	f
ac_fn_cxx_check_type	configure	/^ac_fn_cxx_check_type ()$/;"	f
ac_fn_cxx_try_compile	configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	configure	/^ac_fn_cxx_try_link ()$/;"	f
ac_fn_cxx_try_run	configure	/^ac_fn_cxx_try_run ()$/;"	f
accumulate	libsnark/src/common/data_structures/sparse_vector.tcc	/^std::pair<T, sparse_vector<T> > sparse_vector<T>::accumulate(const typename std::vector<FieldT>::const_iterator &it_begin,$/;"	f	class:libsnark::sparse_vector
accumulate_chunk	libsnark/src/common/data_structures/accumulation_vector.tcc	/^accumulation_vector<T> accumulation_vector<T>::accumulate_chunk(const typename std::vector<FieldT>::const_iterator &it_begin,$/;"	f	class:libsnark::accumulation_vector
accumulation_vector	libsnark/src/common/data_structures/accumulation_vector.hpp	/^    accumulation_vector(T &&first, sparse_vector<T> &&rest) : first(std::move(first)), rest(std::move(rest)) {};$/;"	f	class:libsnark::accumulation_vector
accumulation_vector	libsnark/src/common/data_structures/accumulation_vector.hpp	/^    accumulation_vector(T &&first, std::vector<T> &&v) : first(std::move(first)), rest(std::move(v)) {}$/;"	f	class:libsnark::accumulation_vector
accumulation_vector	libsnark/src/common/data_structures/accumulation_vector.hpp	/^    accumulation_vector(std::vector<T> &&v) : first(T::zero()), rest(std::move(v)) {};$/;"	f	class:libsnark::accumulation_vector
accumulation_vector	libsnark/src/common/data_structures/accumulation_vector.hpp	/^class accumulation_vector {$/;"	c	namespace:libsnark
ad	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *ad;    \/* associated data array *\/$/;"	m	struct:Argon2_Context
ad_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *ad_hex;$/;"	m	struct:__anon2	file:
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%r11$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%r13$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%r15$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%r9$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^adc %rdx,%rbp$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%r10$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%r12$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%r14$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%rbp$/;"	l
adc	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^adc %rdx,%rbx$/;"	l
add	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::add(const alt_bn128_G1 &other) const$/;"	f	class:libsnark::alt_bn128_G1
add	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::add(const alt_bn128_G2 &other) const$/;"	f	class:libsnark::alt_bn128_G2
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r10,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r11,%r12$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r12,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r13,%r14$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r14,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r15,%rbx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %r9,%r10$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%r10$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%r12$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%r14$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%r8$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rax,%rbx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rbx,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add  %rdx,%r8$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add $96,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r10,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r11,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r12,%r13$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r13,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r14,%r15$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r15,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %r8,%r8$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%r13$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%r15$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rax,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rbx,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rcx,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add  %rcx,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add $64,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%r8$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%r9$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add  %r12,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add $32,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^add  $4,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^add  $760,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^add $1856,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^add  $4,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^add  $760,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^add $1568,%r11$/;"	l
add	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^add %r11,%rsp$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^add  $1,%rcx$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^add  $1,%rdx$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^add  $256,%rdi$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^add  $256,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^add  $64,%rdi$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^add  $64,%rsi$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^add $512,%r11$/;"	l
add	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^add %r11,%rsp$/;"	l
add_cnt	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^long long alt_bn128_G1::add_cnt = 0;$/;"	m	class:libsnark::alt_bn128_G1	file:
add_cnt	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    static long long add_cnt;$/;"	m	class:libsnark::alt_bn128_G1
add_cnt	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^long long alt_bn128_G2::add_cnt = 0;$/;"	m	class:libsnark::alt_bn128_G2	file:
add_cnt	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    static long long add_cnt;$/;"	m	class:libsnark::alt_bn128_G2
add_cnt	libsnark/src/algebra/fields/fp.hpp	/^    static long long add_cnt;$/;"	m	class:libsnark::Fp_model
add_cnt	libsnark/src/algebra/fields/fp.hpp	/^long long Fp_model<n, modulus>::add_cnt = 0;$/;"	m	class:libsnark::Fp_model
add_constraint	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^void r1cs_constraint_system<FieldT>::add_constraint(const r1cs_constraint<FieldT> &c)$/;"	f	class:libsnark::r1cs_constraint_system
add_constraint	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^void r1cs_constraint_system<FieldT>::add_constraint(const r1cs_constraint<FieldT> &c, const std::string &annotation)$/;"	f	class:libsnark::r1cs_constraint_system
add_l	libsodium/test/default/sign.c	/^static void add_l(unsigned char * const S)$/;"	f	file:
add_poly_Z	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^void basic_radix2_domain<FieldT>::add_poly_Z(const FieldT &coeff, std::vector<FieldT> &H)$/;"	f	class:libsnark::basic_radix2_domain
add_r1cs_constraint	libsnark/src/gadgetlib1/protoboard.tcc	/^void protoboard<FieldT>::add_r1cs_constraint(const r1cs_constraint<FieldT> &constr, const std::string &annotation)$/;"	f	class:libsnark::protoboard
add_term	libsnark/src/relations/variable.tcc	/^void linear_combination<FieldT>::add_term(const linear_term<FieldT> &other)$/;"	f	class:libsnark::linear_combination
add_term	libsnark/src/relations/variable.tcc	/^void linear_combination<FieldT>::add_term(const variable<FieldT> &var)$/;"	f	class:libsnark::linear_combination
add_term	libsnark/src/relations/variable.tcc	/^void linear_combination<FieldT>::add_term(const variable<FieldT> &var, const FieldT &coeff)$/;"	f	class:libsnark::linear_combination
add_term	libsnark/src/relations/variable.tcc	/^void linear_combination<FieldT>::add_term(const variable<FieldT> &var, const integer_coeff_t int_coeff)$/;"	f	class:libsnark::linear_combination
add_uint32_big	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	47;"	d
add_uint32_big	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^add_uint32_big(aes_uint128_t *r, uint32_t x)$/;"	f
addmul	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^addmul(unsigned char *c, const unsigned char *a, unsigned int xlen, const unsigned char *b)$/;"	f	file:
addr	zcash/JoinSplit.hpp	/^    PaymentAddress addr;$/;"	m	class:libzcash::JSOutput
address	zcash/Address.cpp	/^PaymentAddress SpendingKey::address() const {$/;"	f	class:libzcash::SpendingKey
address_bits	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    pb_linear_combination_array<FieldT> address_bits;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
address_bits	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    pb_variable_array<FieldT> address_bits;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
adlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t adlen; \/* associated data length *\/$/;"	m	struct:Argon2_Context
aead_aes256gcm_DEPENDENCIES	libsodium/test/default/Makefile	/^aead_aes256gcm_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
aead_aes256gcm_LDADD	libsodium/test/default/Makefile	/^aead_aes256gcm_LDADD = $(TESTS_LDADD)$/;"	m
aead_aes256gcm_OBJECTS	libsodium/test/default/Makefile	/^aead_aes256gcm_OBJECTS = aead_aes256gcm.$(OBJEXT)$/;"	m
aead_aes256gcm_SOURCE	libsodium/test/default/Makefile	/^aead_aes256gcm_SOURCE = cmptest.h aead_aes256gcm.c$/;"	m
aead_aes256gcm_SOURCES	libsodium/test/default/Makefile	/^aead_aes256gcm_SOURCES = aead_aes256gcm.c$/;"	m
aead_chacha20poly1305_DEPENDENCIES	libsodium/test/default/Makefile	/^aead_chacha20poly1305_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
aead_chacha20poly1305_LDADD	libsodium/test/default/Makefile	/^aead_chacha20poly1305_LDADD = $(TESTS_LDADD)$/;"	m
aead_chacha20poly1305_OBJECTS	libsodium/test/default/Makefile	/^aead_chacha20poly1305_OBJECTS = aead_chacha20poly1305.$(OBJEXT)$/;"	m
aead_chacha20poly1305_SOURCE	libsodium/test/default/Makefile	/^aead_chacha20poly1305_SOURCE = cmptest.h aead_chacha20poly1305.c$/;"	m
aead_chacha20poly1305_SOURCES	libsodium/test/default/Makefile	/^aead_chacha20poly1305_SOURCES = aead_chacha20poly1305.c$/;"	m
aead_xchacha20poly1305_DEPENDENCIES	libsodium/test/default/Makefile	/^aead_xchacha20poly1305_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
aead_xchacha20poly1305_LDADD	libsodium/test/default/Makefile	/^aead_xchacha20poly1305_LDADD = $(TESTS_LDADD)$/;"	m
aead_xchacha20poly1305_OBJECTS	libsodium/test/default/Makefile	/^aead_xchacha20poly1305_OBJECTS = aead_xchacha20poly1305.$(OBJEXT)$/;"	m
aead_xchacha20poly1305_SOURCE	libsodium/test/default/Makefile	/^aead_xchacha20poly1305_SOURCE = cmptest.h aead_xchacha20poly1305.c$/;"	m
aead_xchacha20poly1305_SOURCES	libsodium/test/default/Makefile	/^aead_xchacha20poly1305_SOURCES = aead_xchacha20poly1305.c$/;"	m
aes128ctr_nacl_common_H	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	6;"	d
aes128ctr_nacl_consts_H	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/consts.h	2;"	d
aes128ctr_nacl_int128_H	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	2;"	d
aes_uint128_t	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	/^} aes_uint128_t;$/;"	t	typeref:union:__anon12
aesni_addmul8full	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	449;"	d	file:
aesni_decrypt8full	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	466;"	d	file:
aesni_encrypt1	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^aesni_encrypt1(unsigned char *out, __m128i nv, const __m128i *rkeys)$/;"	f	file:
aesni_encrypt8full	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	419;"	d	file:
aesni_key256_expand	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^aesni_key256_expand(const unsigned char *key, __m128i * const rkeys)$/;"	f	file:
aesround	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	529;"	d
affine_pairing_test	libsnark/src/algebra/curves/tests/test_bilinearity.cpp	/^void affine_pairing_test()$/;"	f
aix_post_process_depfile	depcomp	/^aix_post_process_depfile ()$/;"	f
aix_post_process_depfile	libsodium/build-aux/depcomp	/^aix_post_process_depfile ()$/;"	f
aix_post_process_depfile	zcash/secp256k1/build-aux/depcomp	/^aix_post_process_depfile ()$/;"	f
alicepk	libsodium/test/default/box2.c	/^static unsigned char alicepk[32] = { 0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7,$/;"	v	file:
alicepk	libsodium/test/default/box7.c	/^static unsigned char alicepk[crypto_box_PUBLICKEYBYTES];$/;"	v	file:
alicepk	libsodium/test/default/box8.c	/^static unsigned char alicepk[crypto_box_PUBLICKEYBYTES];$/;"	v	file:
alicepk_	libsodium/test/default/scalarmult6.c	/^static unsigned char alicepk_[crypto_scalarmult_SCALARBYTES] = {$/;"	v	file:
alicesk	libsodium/test/default/box.c	/^static const unsigned char alicesk[32] = {$/;"	v	file:
alicesk	libsodium/test/default/box7.c	/^static unsigned char alicesk[crypto_box_SECRETKEYBYTES];$/;"	v	file:
alicesk	libsodium/test/default/box8.c	/^static unsigned char alicesk[crypto_box_SECRETKEYBYTES];$/;"	v	file:
alicesk	libsodium/test/default/box_easy.c	/^static unsigned char alicesk[32] = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5,$/;"	v	file:
alicesk	libsodium/test/default/scalarmult.c	/^static const unsigned char alicesk[crypto_scalarmult_BYTES] = {$/;"	v	file:
alicesk	libsodium/test/default/scalarmult5.c	/^static unsigned char alicesk[32] = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5,$/;"	v	file:
aligned	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    void * base, *aligned;$/;"	m	struct:__anon10
all_zeros_test	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    std::shared_ptr<disjunction_gadget<FieldT> > all_zeros_test;$/;"	m	class:libsnark::comparison_gadget
alloc_region	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^alloc_region(escrypt_region_t *region, size_t size)$/;"	f
alloc_uint256	zcash/circuit/gadget.tcc	/^    void alloc_uint256($/;"	f	class:joinsplit_gadget
alloc_uint64	zcash/circuit/gadget.tcc	/^    void alloc_uint64($/;"	f	class:joinsplit_gadget
allocate	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_variable<FieldT>::allocate(protoboard<FieldT> &pb, const std::string &annotation)$/;"	f	class:libsnark::pb_variable
allocate	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_variable_array<FieldT>::allocate(protoboard<FieldT> &pb, const size_t n, const std::string &annotation_prefix)$/;"	f	class:libsnark::pb_variable_array
allocate	zcash/support/allocators/secure.h	/^    T* allocate(std::size_t n, const void* hint = 0)$/;"	f	struct:secure_allocator
allocate_lc_index	libsnark/src/gadgetlib1/protoboard.tcc	/^lc_index_t protoboard<FieldT>::allocate_lc_index()$/;"	f	class:libsnark::protoboard
allocate_memory	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^allocate_memory(block_region **region, uint32_t m_cost)$/;"	f	file:
allocate_var_index	libsnark/src/gadgetlib1/protoboard.tcc	/^var_index_t protoboard<FieldT>::allocate_var_index(const std::string &annotation)$/;"	f	class:libsnark::protoboard
allocator_type	zcash/streams.h	/^    typedef typename vector_type::allocator_type   allocator_type;$/;"	t	class:CBaseDataStream
alpha	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable_array<FieldT> alpha;$/;"	m	class:libsnark::comparison_gadget
alpha	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable_array<FieldT> alpha;$/;"	m	class:libsnark::loose_multiplexing_gadget
alphaA_g2	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2<ppT> alphaA_g2;$/;"	m	class:libsnark::r1cs_ppzksnark_verification_key
alphaB_g1	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G1<ppT> alphaB_g1;$/;"	m	class:libsnark::r1cs_ppzksnark_verification_key
alphaC_g2	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2<ppT> alphaC_g2;$/;"	m	class:libsnark::r1cs_ppzksnark_verification_key
alpha_packed	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable<FieldT> alpha_packed;$/;"	m	class:libsnark::comparison_gadget
alt_bn128_Fq	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^typedef Fp_model<alt_bn128_q_limbs, alt_bn128_modulus_q> alt_bn128_Fq;$/;"	t	namespace:libsnark
alt_bn128_Fq12	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^typedef Fp12_2over3over2_model<alt_bn128_q_limbs, alt_bn128_modulus_q> alt_bn128_Fq12;$/;"	t	namespace:libsnark
alt_bn128_Fq2	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^typedef Fp2_model<alt_bn128_q_limbs, alt_bn128_modulus_q> alt_bn128_Fq2;$/;"	t	namespace:libsnark
alt_bn128_Fq6	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^typedef Fp6_3over2_model<alt_bn128_q_limbs, alt_bn128_modulus_q> alt_bn128_Fq6;$/;"	t	namespace:libsnark
alt_bn128_Fr	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^typedef Fp_model<alt_bn128_r_limbs, alt_bn128_modulus_r> alt_bn128_Fr;$/;"	t	namespace:libsnark
alt_bn128_G1	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1::alt_bn128_G1()$/;"	f	class:libsnark::alt_bn128_G1
alt_bn128_G1	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    alt_bn128_G1(const alt_bn128_Fq& X, const alt_bn128_Fq& Y, const alt_bn128_Fq& Z) : X(X), Y(Y), Z(Z) {};$/;"	f	class:libsnark::alt_bn128_G1
alt_bn128_G1	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^class alt_bn128_G1 {$/;"	c	namespace:libsnark
alt_bn128_G1_precomp	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^typedef alt_bn128_ate_G1_precomp alt_bn128_G1_precomp;$/;"	t	namespace:libsnark
alt_bn128_G2	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2::alt_bn128_G2()$/;"	f	class:libsnark::alt_bn128_G2
alt_bn128_G2	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    alt_bn128_G2(const alt_bn128_Fq2& X, const alt_bn128_Fq2& Y, const alt_bn128_Fq2& Z) : X(X), Y(Y), Z(Z) {};$/;"	f	class:libsnark::alt_bn128_G2
alt_bn128_G2	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^class alt_bn128_G2 {$/;"	c	namespace:libsnark
alt_bn128_G2_precomp	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^typedef alt_bn128_ate_G2_precomp alt_bn128_G2_precomp;$/;"	t	namespace:libsnark
alt_bn128_GT	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^typedef alt_bn128_Fq12 alt_bn128_GT;$/;"	t	namespace:libsnark
alt_bn128_ate_G1_precomp	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^struct alt_bn128_ate_G1_precomp {$/;"	s	namespace:libsnark
alt_bn128_ate_G2_precomp	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^struct alt_bn128_ate_G2_precomp {$/;"	s	namespace:libsnark
alt_bn128_ate_double_miller_loop	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_Fq12 alt_bn128_ate_double_miller_loop(const alt_bn128_ate_G1_precomp &prec_P1,$/;"	f	namespace:libsnark
alt_bn128_ate_ell_coeffs	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^struct alt_bn128_ate_ell_coeffs {$/;"	s	namespace:libsnark
alt_bn128_ate_is_loop_count_neg	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^bool alt_bn128_ate_is_loop_count_neg;$/;"	m	namespace:libsnark	file:
alt_bn128_ate_loop_count	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^bigint<alt_bn128_q_limbs> alt_bn128_ate_loop_count;$/;"	m	namespace:libsnark	file:
alt_bn128_ate_miller_loop	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_Fq12 alt_bn128_ate_miller_loop(const alt_bn128_ate_G1_precomp &prec_P,$/;"	f	namespace:libsnark
alt_bn128_ate_pairing	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_Fq12 alt_bn128_ate_pairing(const alt_bn128_G1& P, const alt_bn128_G2 &Q)$/;"	f	namespace:libsnark
alt_bn128_ate_precompute_G1	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_ate_G1_precomp alt_bn128_ate_precompute_G1(const alt_bn128_G1& P)$/;"	f	namespace:libsnark
alt_bn128_ate_precompute_G2	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_ate_G2_precomp alt_bn128_ate_precompute_G2(const alt_bn128_G2& Q)$/;"	f	namespace:libsnark
alt_bn128_ate_reduced_pairing	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_GT alt_bn128_ate_reduced_pairing(const alt_bn128_G1 &P, const alt_bn128_G2 &Q)$/;"	f	namespace:libsnark
alt_bn128_coeff_b	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^alt_bn128_Fq alt_bn128_coeff_b;$/;"	m	namespace:libsnark	file:
alt_bn128_double_miller_loop	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_Fq12 alt_bn128_double_miller_loop(const alt_bn128_G1_precomp &prec_P1,$/;"	f	namespace:libsnark
alt_bn128_exp_by_neg_z	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_Fq12 alt_bn128_exp_by_neg_z(const alt_bn128_Fq12 &elt)$/;"	f	namespace:libsnark
alt_bn128_final_exponent	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^bigint<12*alt_bn128_q_limbs> alt_bn128_final_exponent;$/;"	m	namespace:libsnark	file:
alt_bn128_final_exponent_is_z_neg	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^bool alt_bn128_final_exponent_is_z_neg;$/;"	m	namespace:libsnark	file:
alt_bn128_final_exponent_z	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^bigint<alt_bn128_q_limbs> alt_bn128_final_exponent_z;$/;"	m	namespace:libsnark	file:
alt_bn128_final_exponentiation	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_GT alt_bn128_final_exponentiation(const alt_bn128_Fq12 &elt)$/;"	f	namespace:libsnark
alt_bn128_final_exponentiation_first_chunk	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_Fq12 alt_bn128_final_exponentiation_first_chunk(const alt_bn128_Fq12 &elt)$/;"	f	namespace:libsnark
alt_bn128_final_exponentiation_last_chunk	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_Fq12 alt_bn128_final_exponentiation_last_chunk(const alt_bn128_Fq12 &elt)$/;"	f	namespace:libsnark
alt_bn128_miller_loop	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_Fq12 alt_bn128_miller_loop(const alt_bn128_G1_precomp &prec_P,$/;"	f	namespace:libsnark
alt_bn128_modulus_q	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^bigint<alt_bn128_q_limbs> alt_bn128_modulus_q;$/;"	m	namespace:libsnark	file:
alt_bn128_modulus_r	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^bigint<alt_bn128_r_limbs> alt_bn128_modulus_r;$/;"	m	namespace:libsnark	file:
alt_bn128_pairing	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_Fq12 alt_bn128_pairing(const alt_bn128_G1& P,$/;"	f	namespace:libsnark
alt_bn128_pp	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^class alt_bn128_pp {$/;"	c	namespace:libsnark
alt_bn128_precompute_G1	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_G1_precomp alt_bn128_precompute_G1(const alt_bn128_G1& P)$/;"	f	namespace:libsnark
alt_bn128_precompute_G2	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_G2_precomp alt_bn128_precompute_G2(const alt_bn128_G2& Q)$/;"	f	namespace:libsnark
alt_bn128_q_bitcount	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^const mp_size_t alt_bn128_q_bitcount = 254;$/;"	m	namespace:libsnark
alt_bn128_q_limbs	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^const mp_size_t alt_bn128_q_limbs = (alt_bn128_q_bitcount+GMP_NUMB_BITS-1)\/GMP_NUMB_BITS;$/;"	m	namespace:libsnark
alt_bn128_r_bitcount	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^const mp_size_t alt_bn128_r_bitcount = 254;$/;"	m	namespace:libsnark
alt_bn128_r_limbs	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^const mp_size_t alt_bn128_r_limbs = (alt_bn128_r_bitcount+GMP_NUMB_BITS-1)\/GMP_NUMB_BITS;$/;"	m	namespace:libsnark
alt_bn128_reduced_pairing	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^alt_bn128_GT alt_bn128_reduced_pairing(const alt_bn128_G1 &P,$/;"	f	namespace:libsnark
alt_bn128_twist	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^alt_bn128_Fq2 alt_bn128_twist;$/;"	m	namespace:libsnark	file:
alt_bn128_twist_coeff_b	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^alt_bn128_Fq2 alt_bn128_twist_coeff_b;$/;"	m	namespace:libsnark	file:
alt_bn128_twist_mul_by_b_c0	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^alt_bn128_Fq alt_bn128_twist_mul_by_b_c0;$/;"	m	namespace:libsnark	file:
alt_bn128_twist_mul_by_b_c1	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^alt_bn128_Fq alt_bn128_twist_mul_by_b_c1;$/;"	m	namespace:libsnark	file:
alt_bn128_twist_mul_by_q_X	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^alt_bn128_Fq2 alt_bn128_twist_mul_by_q_X;$/;"	m	namespace:libsnark	file:
alt_bn128_twist_mul_by_q_Y	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^alt_bn128_Fq2 alt_bn128_twist_mul_by_q_Y;$/;"	m	namespace:libsnark	file:
altstacktop	zcash/script/interpreter.cpp	58;"	d	file:
am__CONFIG_DISTCLEAN_FILES	Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__CONFIG_DISTCLEAN_FILES	libsodium/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__CONFIG_DISTCLEAN_FILES	zcash/secp256k1/Makefile	/^am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \\$/;"	m
am__DEPENDENCIES_1	demo/Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DEPENDENCIES_1	zcash/Makefile	/^am__DEPENDENCIES_1 =$/;"	m
am__DEPENDENCIES_2	zcash/secp256k1/Makefile	/^am__DEPENDENCIES_2 =$/;"	m
am__DIST_COMMON	Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/config.h.in compile \\$/;"	m
am__DIST_COMMON	demo/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(top_srcdir)\/depcomp$/;"	m
am__DIST_COMMON	libsodium/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in \\$/;"	m
am__DIST_COMMON	libsodium/contrib/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/dist-build/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/msvc-scripts/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/src/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/src/libsodium/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in \\$/;"	m
am__DIST_COMMON	libsodium/src/libsodium/include/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/test/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in$/;"	m
am__DIST_COMMON	libsodium/test/default/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in \\$/;"	m
am__DIST_COMMON	zcash/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(top_srcdir)\/depcomp$/;"	m
am__DIST_COMMON	zcash/secp256k1/Makefile	/^am__DIST_COMMON = $(srcdir)\/Makefile.in $(srcdir)\/libsecp256k1.pc.in \\$/;"	m
am__EXEEXT_1	libsodium/test/default/Makefile	/^am__EXEEXT_1 =  \\$/;"	m
am__EXEEXT_2	libsodium/test/default/Makefile	/^am__EXEEXT_2 = pwhash_scrypt$(EXEEXT) \\$/;"	m
am__EXEEXT_2	zcash/secp256k1/Makefile	/^am__EXEEXT_2 = tests$(EXEEXT)$/;"	m
am__EXEEXT_3	libsodium/test/default/Makefile	/^am__EXEEXT_3 = aead_aes256gcm$(EXEEXT) aead_chacha20poly1305$(EXEEXT) \\$/;"	m
am__EXEEXT_3	zcash/secp256k1/Makefile	/^am__EXEEXT_3 = exhaustive_tests$(EXEEXT)$/;"	m
am__aclocal_m4_deps	Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_boost_base.m4 \\$/;"	m
am__aclocal_m4_deps	demo/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_boost_base.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_catchable_segv.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/contrib/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_catchable_segv.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/dist-build/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_catchable_segv.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/msvc-scripts/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_catchable_segv.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/src/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_catchable_segv.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/src/libsodium/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_catchable_segv.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/src/libsodium/include/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_catchable_segv.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/test/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_catchable_segv.m4 \\$/;"	m
am__aclocal_m4_deps	libsodium/test/default/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_check_catchable_segv.m4 \\$/;"	m
am__aclocal_m4_deps	zcash/Makefile	/^am__aclocal_m4_deps = $(top_srcdir)\/m4\/ax_boost_base.m4 \\$/;"	m
am__aclocal_m4_deps	zcash/secp256k1/Makefile	/^am__aclocal_m4_deps =  \\$/;"	m
am__append_1	libsodium/src/libsodium/Makefile	/^am__append_1 = \\$/;"	m
am__append_1	libsodium/test/default/Makefile	/^am__append_1 = \\$/;"	m
am__append_11	libsodium/src/libsodium/Makefile	/^am__append_11 = \\$/;"	m
am__append_13	zcash/secp256k1/Makefile	/^am__append_13 = include\/secp256k1_recovery.h$/;"	m
am__append_14	zcash/secp256k1/Makefile	/^am__append_14 =  \\$/;"	m
am__append_2	libsodium/test/default/Makefile	/^am__append_2 = \\$/;"	m
am__append_2	zcash/secp256k1/Makefile	/^am__append_2 = tests$/;"	m
am__append_3	libsodium/src/libsodium/Makefile	/^am__append_3 = \\$/;"	m
am__append_3	zcash/secp256k1/Makefile	/^am__append_3 = -DVERIFY$/;"	m
am__append_4	libsodium/src/libsodium/Makefile	/^am__append_4 = \\$/;"	m
am__append_4	zcash/secp256k1/Makefile	/^am__append_4 = tests$/;"	m
am__append_5	zcash/secp256k1/Makefile	/^am__append_5 = exhaustive_tests$/;"	m
am__append_6	libsodium/src/libsodium/Makefile	/^am__append_6 = \\$/;"	m
am__append_6	zcash/secp256k1/Makefile	/^am__append_6 = -DVERIFY$/;"	m
am__append_7	zcash/secp256k1/Makefile	/^am__append_7 = exhaustive_tests$/;"	m
am__append_8	libsodium/src/libsodium/Makefile	/^am__append_8 = \\$/;"	m
am__append_8	zcash/secp256k1/Makefile	/^am__append_8 = -I$(top_srcdir)$/;"	m
am__append_9	libsodium/src/libsodium/Makefile	/^am__append_9 = \\$/;"	m
am__append_9	zcash/secp256k1/Makefile	/^am__append_9 = -Wall -Wextra -Wno-unused-function$/;"	m
am__base_list	libsodium/Makefile	/^am__base_list = \\$/;"	m
am__base_list	libsodium/src/libsodium/Makefile	/^am__base_list = \\$/;"	m
am__base_list	libsodium/src/libsodium/include/Makefile	/^am__base_list = \\$/;"	m
am__base_list	libsodium/test/default/Makefile	/^am__base_list = \\$/;"	m
am__base_list	zcash/secp256k1/Makefile	/^am__base_list = \\$/;"	m
am__bench_ecdh_SOURCES_DIST	zcash/secp256k1/Makefile	/^am__bench_ecdh_SOURCES_DIST = src\/bench_ecdh.c$/;"	m
am__bench_internal_SOURCES_DIST	zcash/secp256k1/Makefile	/^am__bench_internal_SOURCES_DIST = src\/bench_internal.c$/;"	m
am__bench_recover_SOURCES_DIST	zcash/secp256k1/Makefile	/^am__bench_recover_SOURCES_DIST = src\/bench_recover.c$/;"	m
am__bench_sign_SOURCES_DIST	zcash/secp256k1/Makefile	/^am__bench_sign_SOURCES_DIST = src\/bench_sign.c$/;"	m
am__bench_verify_SOURCES_DIST	zcash/secp256k1/Makefile	/^am__bench_verify_SOURCES_DIST = src\/bench_verify.c$/;"	m
am__can_run_installinfo	Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	demo/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/contrib/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/dist-build/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/msvc-scripts/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/src/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/src/libsodium/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/src/libsodium/include/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/test/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	libsodium/test/default/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	zcash/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__can_run_installinfo	zcash/secp256k1/Makefile	/^am__can_run_installinfo = \\$/;"	m
am__cd	Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	demo/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/contrib/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/dist-build/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/msvc-scripts/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/src/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/src/libsodium/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/src/libsodium/include/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/test/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	libsodium/test/default/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	zcash/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__cd	zcash/secp256k1/Makefile	/^am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd$/;"	m
am__check_pre	libsodium/test/default/Makefile	/^am__check_pre = \\$/;"	m
am__check_pre	zcash/secp256k1/Makefile	/^am__check_pre = \\$/;"	m
am__common_driver_flags	libsodium/test/default/Makefile	/^am__common_driver_flags = \\$/;"	m
am__common_driver_flags	zcash/secp256k1/Makefile	/^am__common_driver_flags = \\$/;"	m
am__configure_deps	Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	demo/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/contrib/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/dist-build/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/msvc-scripts/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/src/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/src/libsodium/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/src/libsodium/include/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/test/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	libsodium/test/default/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	zcash/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__configure_deps	zcash/secp256k1/Makefile	/^am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\$/;"	m
am__copy_in_global_log_rx	libsodium/test/default/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__copy_in_global_log_rx	zcash/secp256k1/Makefile	/^am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*$/;"	m
am__create_global_log	libsodium/test/default/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__create_global_log	zcash/secp256k1/Makefile	/^am__create_global_log = $(AWK) ' \\$/;"	m
am__define_uniq_tagged_files	Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	demo/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/src/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/src/libsodium/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/src/libsodium/include/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/test/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	libsodium/test/default/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	zcash/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__define_uniq_tagged_files	zcash/secp256k1/Makefile	/^am__define_uniq_tagged_files = \\$/;"	m
am__depfiles_maybe	demo/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	libsodium/src/libsodium/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	libsodium/test/default/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	zcash/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__depfiles_maybe	zcash/secp256k1/Makefile	/^am__depfiles_maybe = depfiles$/;"	m
am__dirstamp	libsodium/src/libsodium/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dirstamp	zcash/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__dirstamp	zcash/secp256k1/Makefile	/^am__dirstamp = $(am__leading_dot)dirstamp$/;"	m
am__distuninstallcheck_listfiles	Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__distuninstallcheck_listfiles	libsodium/Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__distuninstallcheck_listfiles	zcash/secp256k1/Makefile	/^am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \\$/;"	m
am__exhaustive_tests_SOURCES_DIST	zcash/secp256k1/Makefile	/^am__exhaustive_tests_SOURCES_DIST = src\/tests_exhaustive.c$/;"	m
am__global_test_result_rx	libsodium/test/default/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__global_test_result_rx	zcash/secp256k1/Makefile	/^am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*$/;"	m
am__include	Makefile	/^am__include = include$/;"	m
am__include	demo/Makefile	/^am__include = include$/;"	m
am__include	libsodium/Makefile	/^am__include = include$/;"	m
am__include	libsodium/contrib/Makefile	/^am__include = include$/;"	m
am__include	libsodium/dist-build/Makefile	/^am__include = include$/;"	m
am__include	libsodium/msvc-scripts/Makefile	/^am__include = include$/;"	m
am__include	libsodium/src/Makefile	/^am__include = include$/;"	m
am__include	libsodium/src/libsodium/Makefile	/^am__include = include$/;"	m
am__include	libsodium/src/libsodium/include/Makefile	/^am__include = include$/;"	m
am__include	libsodium/test/Makefile	/^am__include = include$/;"	m
am__include	libsodium/test/default/Makefile	/^am__include = include$/;"	m
am__include	zcash/Makefile	/^am__include = include$/;"	m
am__include	zcash/secp256k1/Makefile	/^am__include = include$/;"	m
am__include_HEADERS_DIST	zcash/secp256k1/Makefile	/^am__include_HEADERS_DIST = include\/secp256k1.h \\$/;"	m
am__install_max	libsodium/Makefile	/^am__install_max = 40$/;"	m
am__install_max	libsodium/src/libsodium/Makefile	/^am__install_max = 40$/;"	m
am__install_max	libsodium/src/libsodium/include/Makefile	/^am__install_max = 40$/;"	m
am__install_max	libsodium/test/default/Makefile	/^am__install_max = 40$/;"	m
am__install_max	zcash/secp256k1/Makefile	/^am__install_max = 40$/;"	m
am__installdirs	demo/Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__installdirs	libsodium/Makefile	/^am__installdirs = "$(DESTDIR)$(pkgconfigdir)"$/;"	m
am__installdirs	libsodium/src/libsodium/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(defexecdir)"$/;"	m
am__installdirs	libsodium/src/libsodium/include/Makefile	/^am__installdirs = "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"$/;"	m
am__installdirs	zcash/Makefile	/^am__installdirs = "$(DESTDIR)$(bindir)"$/;"	m
am__installdirs	zcash/secp256k1/Makefile	/^am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(pkgconfigdir)" \\$/;"	m
am__is_gnu_make	Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	demo/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/contrib/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/dist-build/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/msvc-scripts/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/src/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/src/libsodium/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/src/libsodium/include/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/test/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	libsodium/test/default/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	zcash/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__is_gnu_make	zcash/secp256k1/Makefile	/^am__is_gnu_make = { \\$/;"	m
am__leading_dot	Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	demo/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/contrib/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/dist-build/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/msvc-scripts/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/src/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/src/libsodium/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/src/libsodium/include/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/test/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	libsodium/test/default/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	zcash/Makefile	/^am__leading_dot = .$/;"	m
am__leading_dot	zcash/secp256k1/Makefile	/^am__leading_dot = .$/;"	m
am__libsecp256k1_common_la_SOURCES_DIST	zcash/secp256k1/Makefile	/^am__libsecp256k1_common_la_SOURCES_DIST = src\/asm\/field_10x26_arm.s$/;"	m
am__libsodium_la_SOURCES_DIST	libsodium/src/libsodium/Makefile	/^am__libsodium_la_SOURCES_DIST =  \\$/;"	m
am__libsse2_la_SOURCES_DIST	libsodium/src/libsodium/Makefile	/^am__libsse2_la_SOURCES_DIST =  \\$/;"	m
am__list_recheck_tests	libsodium/test/default/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__list_recheck_tests	zcash/secp256k1/Makefile	/^am__list_recheck_tests = $(AWK) '{ \\$/;"	m
am__make_dryrun	Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	demo/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/contrib/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/dist-build/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/msvc-scripts/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/src/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/src/libsodium/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/src/libsodium/include/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/test/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	libsodium/test/default/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	zcash/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_dryrun	zcash/secp256k1/Makefile	/^am__make_dryrun = (target_option=n; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	demo/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/contrib/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/dist-build/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/msvc-scripts/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/src/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/src/libsodium/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/src/libsodium/include/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/test/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	libsodium/test/default/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	zcash/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_keepgoing	zcash/secp256k1/Makefile	/^am__make_keepgoing = (target_option=k; $(am__make_running_with_option))$/;"	m
am__make_running_with_option	Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	demo/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/contrib/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/dist-build/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/msvc-scripts/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/src/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/src/libsodium/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/src/libsodium/include/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/test/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	libsodium/test/default/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	zcash/Makefile	/^am__make_running_with_option = \\$/;"	m
am__make_running_with_option	zcash/secp256k1/Makefile	/^am__make_running_with_option = \\$/;"	m
am__mv	demo/Makefile	/^am__mv = mv -f$/;"	m
am__mv	libsodium/src/libsodium/Makefile	/^am__mv = mv -f$/;"	m
am__mv	libsodium/test/default/Makefile	/^am__mv = mv -f$/;"	m
am__mv	zcash/Makefile	/^am__mv = mv -f$/;"	m
am__mv	zcash/secp256k1/Makefile	/^am__mv = mv -f$/;"	m
am__nobase_include_HEADERS_DIST	libsodium/src/libsodium/include/Makefile	/^am__nobase_include_HEADERS_DIST = sodium.h sodium\/core.h \\$/;"	m
am__nobase_list	libsodium/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	libsodium/src/libsodium/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	libsodium/src/libsodium/include/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	libsodium/test/default/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_list	zcash/secp256k1/Makefile	/^am__nobase_list = $(am__nobase_strip_setup); \\$/;"	m
am__nobase_strip	libsodium/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	libsodium/src/libsodium/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	libsodium/src/libsodium/include/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	libsodium/test/default/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip	zcash/secp256k1/Makefile	/^am__nobase_strip = \\$/;"	m
am__nobase_strip_setup	libsodium/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	libsodium/src/libsodium/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	libsodium/src/libsodium/include/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	libsodium/test/default/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__nobase_strip_setup	zcash/secp256k1/Makefile	/^am__nobase_strip_setup = \\$/;"	m
am__noinst_HEADERS_DIST	zcash/secp256k1/Makefile	/^am__noinst_HEADERS_DIST = src\/scalar.h src\/scalar_4x64.h \\$/;"	m
am__objects_1	libsodium/src/libsodium/Makefile	/^am__objects_1 = randombytes\/salsa20\/libsodium_la-randombytes_salsa20_random.lo$/;"	m
am__objects_10	libsodium/src/libsodium/Makefile	/^am__objects_10 = crypto_pwhash\/scryptsalsa208sha256\/sse\/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo$/;"	m
am__objects_3	libsodium/src/libsodium/Makefile	/^am__objects_3 = randombytes\/sysrandom\/libsodium_la-randombytes_sysrandom.lo$/;"	m
am__objects_4	libsodium/src/libsodium/Makefile	/^am__objects_4 = crypto_scalarmult\/curve25519\/donna_c64\/libsodium_la-curve25519_donna_c64.lo$/;"	m
am__objects_6	libsodium/src/libsodium/Makefile	/^am__objects_6 = crypto_stream\/salsa20\/xmm6\/libsodium_la-salsa20_xmm6-asm.lo \\$/;"	m
am__objects_8	libsodium/src/libsodium/Makefile	/^am__objects_8 = crypto_scalarmult\/curve25519\/sandy2x\/libsodium_la-curve25519_sandy2x.lo \\$/;"	m
am__objects_9	libsodium/src/libsodium/Makefile	/^am__objects_9 = crypto_box\/curve25519xchacha20poly1305\/libsodium_la-box_curve25519xchacha20poly1305.lo \\$/;"	m
am__post_remove_distdir	Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__post_remove_distdir	libsodium/Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__post_remove_distdir	zcash/secp256k1/Makefile	/^am__post_remove_distdir = $(am__remove_distdir)$/;"	m
am__quote	Makefile	/^am__quote = $/;"	m
am__quote	demo/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/contrib/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/dist-build/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/msvc-scripts/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/src/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/src/libsodium/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/src/libsodium/include/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/test/Makefile	/^am__quote = $/;"	m
am__quote	libsodium/test/default/Makefile	/^am__quote = $/;"	m
am__quote	zcash/Makefile	/^am__quote = $/;"	m
am__quote	zcash/secp256k1/Makefile	/^am__quote = $/;"	m
am__recheck_rx	libsodium/test/default/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recheck_rx	zcash/secp256k1/Makefile	/^am__recheck_rx = ^[ 	]*:recheck:[ 	]*$/;"	m
am__recursive_targets	Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	libsodium/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	libsodium/src/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	libsodium/src/libsodium/Makefile	/^am__recursive_targets = \\$/;"	m
am__recursive_targets	libsodium/test/Makefile	/^am__recursive_targets = \\$/;"	m
am__relativize	Makefile	/^am__relativize = \\$/;"	m
am__relativize	libsodium/Makefile	/^am__relativize = \\$/;"	m
am__relativize	libsodium/src/Makefile	/^am__relativize = \\$/;"	m
am__relativize	libsodium/src/libsodium/Makefile	/^am__relativize = \\$/;"	m
am__relativize	libsodium/test/Makefile	/^am__relativize = \\$/;"	m
am__remove_distdir	Makefile	/^am__remove_distdir = \\$/;"	m
am__remove_distdir	libsodium/Makefile	/^am__remove_distdir = \\$/;"	m
am__remove_distdir	zcash/secp256k1/Makefile	/^am__remove_distdir = \\$/;"	m
am__rst_title	libsodium/test/default/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__rst_title	zcash/secp256k1/Makefile	/^am__rst_title = { sed 's\/.*\/   &   \/;h;s\/.\/=\/g;p;x;s\/ *$$\/\/;p;g' && echo; }$/;"	m
am__set_TESTS_bases	libsodium/test/default/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_TESTS_bases	zcash/secp256k1/Makefile	/^am__set_TESTS_bases = \\$/;"	m
am__set_b	libsodium/test/default/Makefile	/^am__set_b = \\$/;"	m
am__set_b	zcash/secp256k1/Makefile	/^am__set_b = \\$/;"	m
am__sh_e_setup	libsodium/test/default/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__sh_e_setup	zcash/secp256k1/Makefile	/^am__sh_e_setup = case $$- in *e*) set +e;; esac$/;"	m
am__strip_dir	libsodium/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	libsodium/src/libsodium/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	libsodium/src/libsodium/include/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	libsodium/test/default/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__strip_dir	zcash/secp256k1/Makefile	/^am__strip_dir = f=`echo $$p | sed -e 's|^.*\/||'`;$/;"	m
am__tagged_files	Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \\$/;"	m
am__tagged_files	demo/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/contrib/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/dist-build/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/msvc-scripts/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/src/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/src/libsodium/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/src/libsodium/include/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/test/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	libsodium/test/default/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	zcash/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tagged_files	zcash/secp256k1/Makefile	/^am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)$/;"	m
am__tar	Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	demo/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	libsodium/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/contrib/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/dist-build/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/msvc-scripts/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/src/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/src/libsodium/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/src/libsodium/include/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/test/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	libsodium/test/default/Makefile	/^am__tar = tar --format=ustar -chf - "$$tardir"$/;"	m
am__tar	zcash/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__tar	zcash/secp256k1/Makefile	/^am__tar = $${TAR-tar} chof - "$$tardir"$/;"	m
am__test_logs1	libsodium/test/default/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs1	zcash/secp256k1/Makefile	/^am__test_logs1 = $(TESTS:=.log)$/;"	m
am__test_logs2	libsodium/test/default/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__test_logs2	zcash/secp256k1/Makefile	/^am__test_logs2 = $(am__test_logs1:.log=.log)$/;"	m
am__tests_SOURCES_DIST	zcash/secp256k1/Makefile	/^am__tests_SOURCES_DIST = src\/tests.c$/;"	m
am__tty_colors	libsodium/test/default/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors	zcash/secp256k1/Makefile	/^am__tty_colors = { \\$/;"	m
am__tty_colors_dummy	libsodium/test/default/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__tty_colors_dummy	zcash/secp256k1/Makefile	/^am__tty_colors_dummy = \\$/;"	m
am__uninstall_files_from_dir	libsodium/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	libsodium/src/libsodium/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	libsodium/src/libsodium/include/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	libsodium/test/default/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uninstall_files_from_dir	zcash/secp256k1/Makefile	/^am__uninstall_files_from_dir = { \\$/;"	m
am__uniquify_input	Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	demo/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/src/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/src/libsodium/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/src/libsodium/include/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/test/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	libsodium/test/default/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	zcash/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__uniquify_input	zcash/secp256k1/Makefile	/^am__uniquify_input = $(AWK) '\\$/;"	m
am__untar	Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	demo/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	libsodium/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/contrib/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/dist-build/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/msvc-scripts/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/src/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/src/libsodium/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/src/libsodium/include/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/test/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	libsodium/test/default/Makefile	/^am__untar = tar -xf -$/;"	m
am__untar	zcash/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__untar	zcash/secp256k1/Makefile	/^am__untar = $${TAR-tar} xf -$/;"	m
am__v_CCAS_	zcash/secp256k1/Makefile	/^am__v_CCAS_ = $(am__v_CCAS_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCAS_0	zcash/secp256k1/Makefile	/^am__v_CCAS_0 = @echo "  CCAS    " $@;$/;"	m
am__v_CCAS_1	zcash/secp256k1/Makefile	/^am__v_CCAS_1 = $/;"	m
am__v_CCLD_	libsodium/src/libsodium/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	libsodium/test/default/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_	zcash/secp256k1/Makefile	/^am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CCLD_0	libsodium/src/libsodium/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	libsodium/test/default/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_0	zcash/secp256k1/Makefile	/^am__v_CCLD_0 = @echo "  CCLD    " $@;$/;"	m
am__v_CCLD_1	libsodium/src/libsodium/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	libsodium/test/default/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CCLD_1	zcash/secp256k1/Makefile	/^am__v_CCLD_1 = $/;"	m
am__v_CC_	libsodium/src/libsodium/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	libsodium/test/default/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_	zcash/secp256k1/Makefile	/^am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CC_0	libsodium/src/libsodium/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	libsodium/test/default/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_0	zcash/secp256k1/Makefile	/^am__v_CC_0 = @echo "  CC      " $@;$/;"	m
am__v_CC_1	libsodium/src/libsodium/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	libsodium/test/default/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CC_1	zcash/secp256k1/Makefile	/^am__v_CC_1 = $/;"	m
am__v_CPPAS_	libsodium/src/libsodium/Makefile	/^am__v_CPPAS_ = $(am__v_CPPAS_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CPPAS_0	libsodium/src/libsodium/Makefile	/^am__v_CPPAS_0 = @echo "  CPPAS   " $@;$/;"	m
am__v_CPPAS_1	libsodium/src/libsodium/Makefile	/^am__v_CPPAS_1 = $/;"	m
am__v_CXXLD_	demo/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_	zcash/Makefile	/^am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXXLD_0	demo/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_0	zcash/Makefile	/^am__v_CXXLD_0 = @echo "  CXXLD   " $@;$/;"	m
am__v_CXXLD_1	demo/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXXLD_1	zcash/Makefile	/^am__v_CXXLD_1 = $/;"	m
am__v_CXX_	demo/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_	zcash/Makefile	/^am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_CXX_0	demo/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_0	zcash/Makefile	/^am__v_CXX_0 = @echo "  CXX     " $@;$/;"	m
am__v_CXX_1	demo/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_CXX_1	zcash/Makefile	/^am__v_CXX_1 = $/;"	m
am__v_GEN_	Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	demo/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/contrib/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/dist-build/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/msvc-scripts/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/src/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/src/libsodium/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/src/libsodium/include/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/test/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	libsodium/test/default/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	zcash/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_	zcash/secp256k1/Makefile	/^am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_GEN_0	Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	demo/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/contrib/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/dist-build/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/msvc-scripts/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/src/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/src/libsodium/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/src/libsodium/include/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/test/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	libsodium/test/default/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	zcash/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_0	zcash/secp256k1/Makefile	/^am__v_GEN_0 = @echo "  GEN     " $@;$/;"	m
am__v_GEN_1	Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	demo/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/contrib/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/dist-build/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/msvc-scripts/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/src/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/src/libsodium/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/src/libsodium/include/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/test/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	libsodium/test/default/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	zcash/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_GEN_1	zcash/secp256k1/Makefile	/^am__v_GEN_1 = $/;"	m
am__v_P_	Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	demo/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/contrib/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/dist-build/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/msvc-scripts/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/src/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/src/libsodium/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/src/libsodium/include/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/test/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	libsodium/test/default/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	zcash/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_	zcash/secp256k1/Makefile	/^am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_P_0	Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	demo/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/contrib/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/dist-build/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/msvc-scripts/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/src/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/src/libsodium/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/src/libsodium/include/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/test/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	libsodium/test/default/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	zcash/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_0	zcash/secp256k1/Makefile	/^am__v_P_0 = false$/;"	m
am__v_P_1	Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	demo/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/contrib/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/dist-build/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/msvc-scripts/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/src/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/src/libsodium/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/src/libsodium/include/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/test/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	libsodium/test/default/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	zcash/Makefile	/^am__v_P_1 = :$/;"	m
am__v_P_1	zcash/secp256k1/Makefile	/^am__v_P_1 = :$/;"	m
am__v_at_	Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	demo/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/contrib/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/dist-build/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/msvc-scripts/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/src/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/src/libsodium/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/src/libsodium/include/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/test/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	libsodium/test/default/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	zcash/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_	zcash/secp256k1/Makefile	/^am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_at_0	Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	demo/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/contrib/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/dist-build/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/msvc-scripts/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/src/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/src/libsodium/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/src/libsodium/include/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/test/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	libsodium/test/default/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	zcash/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_0	zcash/secp256k1/Makefile	/^am__v_at_0 = @$/;"	m
am__v_at_1	Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	demo/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/contrib/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/dist-build/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/msvc-scripts/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/src/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/src/libsodium/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/src/libsodium/include/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/test/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	libsodium/test/default/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	zcash/Makefile	/^am__v_at_1 = $/;"	m
am__v_at_1	zcash/secp256k1/Makefile	/^am__v_at_1 = $/;"	m
am__v_lt_	libsodium/src/libsodium/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	libsodium/test/default/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_	zcash/secp256k1/Makefile	/^am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))$/;"	m
am__v_lt_0	libsodium/src/libsodium/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	libsodium/test/default/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_0	zcash/secp256k1/Makefile	/^am__v_lt_0 = --silent$/;"	m
am__v_lt_1	libsodium/src/libsodium/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	libsodium/test/default/Makefile	/^am__v_lt_1 = $/;"	m
am__v_lt_1	zcash/secp256k1/Makefile	/^am__v_lt_1 = $/;"	m
am__vpath_adj	libsodium/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	libsodium/src/libsodium/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	libsodium/src/libsodium/include/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	libsodium/test/default/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj	zcash/secp256k1/Makefile	/^am__vpath_adj = case $$p in \\$/;"	m
am__vpath_adj_setup	libsodium/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	libsodium/src/libsodium/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	libsodium/src/libsodium/include/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	libsodium/test/default/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am__vpath_adj_setup	zcash/secp256k1/Makefile	/^am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;$/;"	m
am_circuit_OBJECTS	demo/Makefile	/^am_circuit_OBJECTS = main.$(OBJEXT)$/;"	m
am_createjs_OBJECTS	zcash/Makefile	/^am_createjs_OBJECTS = CreateJoinSplit.$(OBJEXT) Address.$(OBJEXT) \\$/;"	m
am_exhaustive_tests_OBJECTS	zcash/secp256k1/Makefile	/^am_exhaustive_tests_OBJECTS = src\/exhaustive_tests-tests_exhaustive.$(OBJEXT)$/;"	m
am_generate_OBJECTS	zcash/Makefile	/^am_generate_OBJECTS = GenerateParams.$(OBJEXT) Address.$(OBJEXT) \\$/;"	m
am_libaesni_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libaesni_la_OBJECTS = crypto_aead\/aes256gcm\/aesni\/libaesni_la-aead_aes256gcm_aesni.lo$/;"	m
am_libavx2_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libavx2_la_OBJECTS = crypto_generichash\/blake2b\/ref\/libavx2_la-blake2b-compress-avx2.lo \\$/;"	m
am_libsecp256k1_jni_la_OBJECTS	zcash/secp256k1/Makefile	/^am_libsecp256k1_jni_la_OBJECTS =  \\$/;"	m
am_libsecp256k1_la_OBJECTS	zcash/secp256k1/Makefile	/^am_libsecp256k1_la_OBJECTS = src\/libsecp256k1_la-secp256k1.lo$/;"	m
am_libsodium_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libsodium_la_OBJECTS = crypto_aead\/chacha20poly1305\/sodium\/libsodium_la-aead_chacha20poly1305.lo \\$/;"	m
am_libsse2_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libsse2_la_OBJECTS =  \\$/;"	m
am_libsse41_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libsse41_la_OBJECTS = crypto_generichash\/blake2b\/ref\/libsse41_la-blake2b-compress-sse41.lo$/;"	m
am_libssse3_la_OBJECTS	libsodium/src/libsodium/Makefile	/^am_libssse3_la_OBJECTS = crypto_generichash\/blake2b\/ref\/libssse3_la-blake2b-compress-ssse3.lo \\$/;"	m
am_tests_OBJECTS	zcash/secp256k1/Makefile	/^am_tests_OBJECTS = src\/tests-tests.$(OBJEXT)$/;"	m
anchors	zcash/primitives/transaction.h	/^		boost::array<uint256, ZC_NUM_JS_INPUTS> anchors;$/;"	m	class:JSDescription
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r10$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r12$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r14$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r8$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%r9$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%rax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%rbx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and  %rsi,%rcx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r10$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r13$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r15$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r8$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%r9$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%rax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and  %rdx,%rcx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xC0,%ecx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xF0,%ecx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xF8,%eax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xFE,%ecx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xFF,%eax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  $0xFF,%edx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %r12,%r10$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %r12,%rax$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%r8$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%r9$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%rcx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%rdx$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and  %rax,%rsi$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and  $1,%r10d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and  $1,%r11d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and  $1,%r12d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and  $1,%r13d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and  $1,%r10d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and  $1,%r11d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and  $1,%r12d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and  $1,%r13d$/;"	l
and	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^and $31,%r11$/;"	l
and	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^and $31,%r11$/;"	l
and2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	17;"	d
and2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^and2(aes_uint128_t *r, const aes_uint128_t *x)$/;"	f
annotation	libsnark/src/gadgetlib1/constraint_profiling.hpp	/^    std::string annotation;$/;"	m	struct:libsnark::constraint_profiling_entry
annotation_prefix	libsnark/src/gadgetlib1/gadget.hpp	/^    const std::string annotation_prefix;$/;"	m	class:libsnark::gadget
append	zcash/IncrementalMerkleTree.cpp	/^void IncrementalMerkleTree<Depth, Hash>::append(Hash obj) {$/;"	f	class:libzcash::IncrementalMerkleTree
append	zcash/IncrementalMerkleTree.cpp	/^void IncrementalWitness<Depth, Hash>::append(Hash obj) {$/;"	f	class:libzcash::IncrementalWitness
argon2_H	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	13;"	d
argon2_context	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^} argon2_context;$/;"	t	typeref:struct:Argon2_Context
argon2_core_H	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	15;"	d
argon2_ctx	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^argon2_ctx(argon2_context *context, argon2_type type)$/;"	f
argon2_ctx_constants	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^enum argon2_ctx_constants {$/;"	g
argon2_encoding_H	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.h	2;"	d
argon2_error_codes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^} argon2_error_codes;$/;"	t	typeref:enum:Argon2_ErrorCodes
argon2_hash	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^argon2_hash(const uint32_t t_cost, const uint32_t m_cost,$/;"	f
argon2_instance_t	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^} argon2_instance_t;$/;"	t	typeref:struct:Argon2_instance_t
argon2_pick_best_implementation	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^argon2_pick_best_implementation(void)$/;"	f
argon2_position_t	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^} argon2_position_t;$/;"	t	typeref:struct:Argon2_position_t
argon2_thread_data	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^} argon2_thread_data;$/;"	t	typeref:struct:Argon2_thread_data
argon2_type	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^typedef enum Argon2_type { Argon2_i = 1, Argon2_id = 2 } argon2_type;$/;"	t	typeref:enum:Argon2_type
argon2_verify	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^argon2_verify(const char *encoded, const void *pwd, const size_t pwdlen,$/;"	f
argon2i_hash_encoded	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^argon2i_hash_encoded(const uint32_t t_cost, const uint32_t m_cost,$/;"	f
argon2i_hash_raw	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^argon2i_hash_raw(const uint32_t t_cost, const uint32_t m_cost,$/;"	f
argon2i_verify	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^argon2i_verify(const char *encoded, const void *pwd, const size_t pwdlen)$/;"	f
argon2id_hash_encoded	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^argon2id_hash_encoded(const uint32_t t_cost, const uint32_t m_cost,$/;"	f
argon2id_hash_raw	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^argon2id_hash_raw(const uint32_t t_cost, const uint32_t m_cost,$/;"	f
argon2id_verify	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.c	/^argon2id_verify(const char *encoded, const void *pwd, const size_t pwdlen)$/;"	f
arith_uint256	zcash/arith_uint256.h	/^    arith_uint256() {}$/;"	f	class:arith_uint256
arith_uint256	zcash/arith_uint256.h	/^    arith_uint256(const base_uint<256>& b) : base_uint<256>(b) {}$/;"	f	class:arith_uint256
arith_uint256	zcash/arith_uint256.h	/^    arith_uint256(uint64_t b) : base_uint<256>(b) {}$/;"	f	class:arith_uint256
arith_uint256	zcash/arith_uint256.h	/^    explicit arith_uint256(const std::string& str) : base_uint<256>(str) {}$/;"	f	class:arith_uint256
arith_uint256	zcash/arith_uint256.h	/^class arith_uint256 : public base_uint<256> {$/;"	c
arr	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination_array<FieldT> arr;$/;"	m	class:libsnark::loose_multiplexing_gadget
as_bigint	libsnark/src/algebra/fields/fp.tcc	/^bigint<n> Fp_model<n,modulus>::as_bigint() const$/;"	f	class:libsnark::Fp_model
as_fn_append	config.status	/^  as_fn_append ()$/;"	f
as_fn_append	configure	/^  as_fn_append ()$/;"	f
as_fn_append	libsodium/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	libsodium/configure	/^  as_fn_append ()$/;"	f
as_fn_append	zcash/secp256k1/config.status	/^  as_fn_append ()$/;"	f
as_fn_append	zcash/secp256k1/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	configure	/^  as_fn_arith ()$/;"	f
as_fn_arith	libsodium/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	libsodium/configure	/^  as_fn_arith ()$/;"	f
as_fn_arith	zcash/secp256k1/config.status	/^  as_fn_arith ()$/;"	f
as_fn_arith	zcash/secp256k1/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	config.status	/^as_fn_error ()$/;"	f
as_fn_error	configure	/^as_fn_error ()$/;"	f
as_fn_error	libsodium/config.status	/^as_fn_error ()$/;"	f
as_fn_error	libsodium/configure	/^as_fn_error ()$/;"	f
as_fn_error	zcash/secp256k1/config.status	/^as_fn_error ()$/;"	f
as_fn_error	zcash/secp256k1/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	configure	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	libsodium/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	libsodium/configure	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	zcash/secp256k1/config.status	/^as_fn_executable_p ()$/;"	f
as_fn_executable_p	zcash/secp256k1/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	configure	/^as_fn_exit ()$/;"	f
as_fn_exit	libsodium/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	libsodium/configure	/^as_fn_exit ()$/;"	f
as_fn_exit	zcash/secp256k1/config.status	/^as_fn_exit ()$/;"	f
as_fn_exit	zcash/secp256k1/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	libsodium/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_failure	zcash/secp256k1/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	libsodium/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	libsodium/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	zcash/secp256k1/config.status	/^as_fn_mkdir_p ()$/;"	f
as_fn_mkdir_p	zcash/secp256k1/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	libsodium/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_failure	zcash/secp256k1/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	libsodium/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_ret_success	zcash/secp256k1/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	configure	/^as_fn_set_status ()$/;"	f
as_fn_set_status	libsodium/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	libsodium/configure	/^as_fn_set_status ()$/;"	f
as_fn_set_status	zcash/secp256k1/config.status	/^as_fn_set_status ()$/;"	f
as_fn_set_status	zcash/secp256k1/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	libsodium/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_success	zcash/secp256k1/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	configure	/^as_fn_unset ()$/;"	f
as_fn_unset	libsodium/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	libsodium/configure	/^as_fn_unset ()$/;"	f
as_fn_unset	zcash/secp256k1/config.status	/^as_fn_unset ()$/;"	f
as_fn_unset	zcash/secp256k1/configure	/^as_fn_unset ()$/;"	f
as_ulong	libsnark/src/algebra/fields/bigint.tcc	/^unsigned long bigint<n>::as_ulong() const$/;"	f	class:libsnark::bigint
as_ulong	libsnark/src/algebra/fields/fp.tcc	/^unsigned long Fp_model<n,modulus>::as_ulong() const$/;"	f	class:libsnark::Fp_model
assertEquals	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^    public static void assertEquals( String val, String val2, String message ) throws AssertFailException{$/;"	m	class:NativeSecp256k1Util
assertEquals	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^    public static void assertEquals( boolean val, boolean val2, String message ) throws AssertFailException{$/;"	m	class:NativeSecp256k1Util
assertEquals	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^    public static void assertEquals( int val, int val2, String message ) throws AssertFailException{$/;"	m	class:NativeSecp256k1Util
assert_except	libsnark/src/common/assert_except.hpp	/^inline void assert_except(bool condition) {$/;"	f
assign	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_linear_combination<FieldT>::assign(protoboard<FieldT> &pb, const linear_combination<FieldT> &lc)$/;"	f	class:libsnark::pb_linear_combination
assign_big_endian	zcash/secp256k1/src/tests.c	/^static void assign_big_endian(unsigned char *ptr, size_t ptrlen, uint32_t val) {$/;"	f	file:
assume_C_is_zero	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    bool assume_C_is_zero;$/;"	m	class:libsnark::XOR3_gadget
atoi	zcash/utilstrencodings.cpp	/^int atoi(const std::string& str)$/;"	f
atoi64	zcash/utilstrencodings.cpp	/^int64_t atoi64(const char* psz)$/;"	f
atoi64	zcash/utilstrencodings.cpp	/^int64_t atoi64(const std::string& str)$/;"	f
augment_variable_annotation	libsnark/src/gadgetlib1/protoboard.tcc	/^void protoboard<FieldT>::augment_variable_annotation(const pb_variable<FieldT> &v, const std::string &postfix)$/;"	f	class:libsnark::protoboard
auth	zcash/circuit/merkle.tcc	/^    std::shared_ptr<merkle_tree_check_read_gadget<FieldT, sha256_gadget>> auth;$/;"	m	class:merkle_tree_gadget	file:
auth2_DEPENDENCIES	libsodium/test/default/Makefile	/^auth2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth2_LDADD	libsodium/test/default/Makefile	/^auth2_LDADD = $(TESTS_LDADD)$/;"	m
auth2_OBJECTS	libsodium/test/default/Makefile	/^auth2_OBJECTS = auth2.$(OBJEXT)$/;"	m
auth2_SOURCE	libsodium/test/default/Makefile	/^auth2_SOURCE = cmptest.h auth2.c$/;"	m
auth2_SOURCES	libsodium/test/default/Makefile	/^auth2_SOURCES = auth2.c$/;"	m
auth3_DEPENDENCIES	libsodium/test/default/Makefile	/^auth3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth3_LDADD	libsodium/test/default/Makefile	/^auth3_LDADD = $(TESTS_LDADD)$/;"	m
auth3_OBJECTS	libsodium/test/default/Makefile	/^auth3_OBJECTS = auth3.$(OBJEXT)$/;"	m
auth3_SOURCE	libsodium/test/default/Makefile	/^auth3_SOURCE = cmptest.h auth3.c$/;"	m
auth3_SOURCES	libsodium/test/default/Makefile	/^auth3_SOURCES = auth3.c$/;"	m
auth5_DEPENDENCIES	libsodium/test/default/Makefile	/^auth5_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth5_LDADD	libsodium/test/default/Makefile	/^auth5_LDADD = $(TESTS_LDADD)$/;"	m
auth5_OBJECTS	libsodium/test/default/Makefile	/^auth5_OBJECTS = auth5.$(OBJEXT)$/;"	m
auth5_SOURCE	libsodium/test/default/Makefile	/^auth5_SOURCE = cmptest.h auth5.c quirks.h$/;"	m
auth5_SOURCES	libsodium/test/default/Makefile	/^auth5_SOURCES = auth5.c$/;"	m
auth6_DEPENDENCIES	libsodium/test/default/Makefile	/^auth6_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth6_LDADD	libsodium/test/default/Makefile	/^auth6_LDADD = $(TESTS_LDADD)$/;"	m
auth6_OBJECTS	libsodium/test/default/Makefile	/^auth6_OBJECTS = auth6.$(OBJEXT)$/;"	m
auth6_SOURCE	libsodium/test/default/Makefile	/^auth6_SOURCE = cmptest.h auth6.c quirks.h$/;"	m
auth6_SOURCES	libsodium/test/default/Makefile	/^auth6_SOURCES = auth6.c$/;"	m
auth7_DEPENDENCIES	libsodium/test/default/Makefile	/^auth7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth7_LDADD	libsodium/test/default/Makefile	/^auth7_LDADD = $(TESTS_LDADD)$/;"	m
auth7_OBJECTS	libsodium/test/default/Makefile	/^auth7_OBJECTS = auth7.$(OBJEXT)$/;"	m
auth7_SOURCE	libsodium/test/default/Makefile	/^auth7_SOURCE = cmptest.h auth7.c quirks.h$/;"	m
auth7_SOURCES	libsodium/test/default/Makefile	/^auth7_SOURCES = auth7.c$/;"	m
auth_DEPENDENCIES	libsodium/test/default/Makefile	/^auth_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
auth_LDADD	libsodium/test/default/Makefile	/^auth_LDADD = $(TESTS_LDADD)$/;"	m
auth_OBJECTS	libsodium/test/default/Makefile	/^auth_OBJECTS = auth.$(OBJEXT)$/;"	m
auth_SOURCE	libsodium/test/default/Makefile	/^auth_SOURCE = cmptest.h auth.c$/;"	m
auth_SOURCES	libsodium/test/default/Makefile	/^auth_SOURCES = auth.c$/;"	m
authentication_path	zcash/IncrementalMerkleTree.hpp	/^    std::vector<std::vector<bool>> authentication_path;$/;"	m	class:libzcash::MerklePath
authvars	zcash/circuit/merkle.tcc	/^    std::shared_ptr<merkle_authentication_path_variable<FieldT, sha256_gadget>> authvars;$/;"	m	class:merkle_tree_gadget	file:
auxiliary_input	libsnark/src/gadgetlib1/protoboard.tcc	/^r1cs_auxiliary_input<FieldT> protoboard<FieldT>::auxiliary_input() const$/;"	f	class:libsnark::protoboard
auxiliary_input	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.hpp	/^    r1cs_auxiliary_input<FieldT> auxiliary_input;$/;"	m	struct:libsnark::r1cs_example
auxiliary_input_size	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    size_t auxiliary_input_size;$/;"	m	class:libsnark::r1cs_constraint_system
ax_pthread_config	libsodium/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	libsodium/contrib/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	libsodium/dist-build/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	libsodium/msvc-scripts/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	libsodium/src/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	libsodium/src/libsodium/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	libsodium/src/libsodium/include/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	libsodium/test/Makefile	/^ax_pthread_config = $/;"	m
ax_pthread_config	libsodium/test/default/Makefile	/^ax_pthread_config = $/;"	m
b	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> b;$/;"	m	class:libsnark::sha256_round_function_gadget
b	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    linear_combination<FieldT> a, b, c;$/;"	m	class:libsnark::r1cs_constraint
b64_byte_to_char	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^b64_byte_to_char(unsigned x)$/;"	f	file:
b64_char_to_byte	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^b64_char_to_byte(int c)$/;"	f	file:
base	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const ge_precomp base[32][8] = {$/;"	v	file:
base	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    void * base;$/;"	m	struct:block_region_
base	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    void * base, *aligned;$/;"	m	struct:__anon10
base	zcash/support/allocators/secure.h	/^    typedef std::allocator<T> base;$/;"	t	struct:secure_allocator
base	zcash/support/allocators/zeroafterfree.h	/^    typedef std::allocator<T> base;$/;"	t	struct:zero_after_free_allocator
base_blob	zcash/uint256.cpp	/^base_blob<BITS>::base_blob(const std::vector<unsigned char>& vch)$/;"	f	class:base_blob
base_blob	zcash/uint256.h	/^    base_blob()$/;"	f	class:base_blob
base_blob	zcash/uint256.h	/^class base_blob$/;"	c
base_field	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    typedef alt_bn128_Fq base_field;$/;"	t	class:libsnark::alt_bn128_G1
base_field	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    typedef alt_bn128_Fq base_field;$/;"	t	class:libsnark::alt_bn128_G2
base_field_char	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    static bigint<base_field::num_limbs> base_field_char() { return base_field::field_char(); }$/;"	f	class:libsnark::alt_bn128_G1
base_field_char	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    static bigint<base_field::num_limbs> base_field_char() { return base_field::field_char(); }$/;"	f	class:libsnark::alt_bn128_G2
base_field_char	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    static bigint<n> base_field_char() { return modulus; }$/;"	f	class:libsnark::Fp12_2over3over2_model
base_field_char	libsnark/src/algebra/fields/fp2.hpp	/^    static bigint<n> base_field_char() { return modulus; }$/;"	f	class:libsnark::Fp2_model
base_field_char	libsnark/src/algebra/fields/fp3.hpp	/^    static bigint<n> base_field_char() { return modulus; }$/;"	f	class:libsnark::Fp3_model
base_field_char	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    static bigint<n> base_field_char() { return modulus; }$/;"	f	class:libsnark::Fp6_3over2_model
base_uint	zcash/arith_uint256.cpp	/^base_uint<BITS>::base_uint(const std::string& str)$/;"	f	class:base_uint
base_uint	zcash/arith_uint256.h	/^    base_uint()$/;"	f	class:base_uint
base_uint	zcash/arith_uint256.h	/^    base_uint(const base_uint& b)$/;"	f	class:base_uint
base_uint	zcash/arith_uint256.h	/^    base_uint(uint64_t b)$/;"	f	class:base_uint
base_uint	zcash/arith_uint256.h	/^class base_uint$/;"	c
basepoint	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^static const unsigned char basepoint[32] = { 9 };$/;"	v	file:
basic_radix2_domain	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.hpp	/^class basic_radix2_domain : public evaluation_domain<FieldT> {$/;"	c	namespace:libsnark
basic_radix2_domain	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^basic_radix2_domain<FieldT>::basic_radix2_domain(const size_t m) : evaluation_domain<FieldT>(m)$/;"	f	class:libsnark::basic_radix2_domain
batch_exp	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^std::vector<T> batch_exp(const size_t scalar_size,$/;"	f	namespace:libsnark
batch_exp_with_coeff	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^std::vector<T> batch_exp_with_coeff(const size_t scalar_size,$/;"	f	namespace:libsnark
batch_invert	libsnark/src/algebra/fields/field_utils.tcc	/^void batch_invert(std::vector<FieldT> &vec)$/;"	f	namespace:libsnark
batch_to_special	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^void batch_to_special(std::vector<T> &vec)$/;"	f	namespace:libsnark
batch_to_special_all_non_zeros	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^void batch_to_special_all_non_zeros<alt_bn128_G1>(std::vector<alt_bn128_G1> &vec)$/;"	f	namespace:libsnark
batch_to_special_all_non_zeros	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^void batch_to_special_all_non_zeros<alt_bn128_G2>(std::vector<alt_bn128_G2> &vec)$/;"	f	namespace:libsnark
be16toh	zcash/compat/endian.h	/^inline uint16_t be16toh(uint16_t big_endian_16bits)$/;"	f
be32dec_vect	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^be32dec_vect(uint32_t *dst, const unsigned char *src, size_t len)$/;"	f	file:
be32enc_vect	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^be32enc_vect(unsigned char *dst, const uint32_t *src, size_t len)$/;"	f	file:
be32toh	zcash/compat/endian.h	/^inline uint32_t be32toh(uint32_t big_endian_32bits)$/;"	f
be64dec_vect	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^be64dec_vect(uint64_t *dst, const unsigned char *src, size_t len)$/;"	f	file:
be64enc_vect	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^be64enc_vect(unsigned char *dst, const uint64_t *src, size_t len)$/;"	f	file:
be64toh	zcash/compat/endian.h	/^inline uint64_t be64toh(uint64_t big_endian_64bits)$/;"	f
begin	libsnark/src/relations/variable.tcc	/^typename std::vector<linear_term<FieldT> >::const_iterator linear_combination<FieldT>::begin() const$/;"	f	class:libsnark::linear_combination
begin	zcash/key.h	/^    const unsigned char* begin() const { return vch; }$/;"	f	class:CKey
begin	zcash/pubkey.h	/^    const unsigned char* begin() const { return vch; }$/;"	f	class:CPubKey
begin	zcash/serialize.h	/^    char* begin() { return pbegin; }$/;"	f	class:CFlatData
begin	zcash/serialize.h	/^    const char* begin() const { return pbegin; }$/;"	f	class:CFlatData
begin	zcash/streams.h	/^    const_iterator begin() const                     { return vch.begin() + nReadPos; }$/;"	f	class:CBaseDataStream
begin	zcash/streams.h	/^    iterator begin()                                 { return vch.begin() + nReadPos; }$/;"	f	class:CBaseDataStream
begin	zcash/uint252.h	/^    const unsigned char* begin() const$/;"	f	class:uint252
begin	zcash/uint256.h	/^    const unsigned char* begin() const$/;"	f	class:base_blob
begin	zcash/uint256.h	/^    unsigned char* begin()$/;"	f	class:base_blob
begin_ptr	zcash/serialize.h	/^inline T* begin_ptr(std::vector<T,TAl>& v)$/;"	f
begin_ptr	zcash/serialize.h	/^inline const T* begin_ptr(const std::vector<T,TAl>& v)$/;"	f
bench_context_sign	zcash/secp256k1/src/bench_internal.c	/^void bench_context_sign(void* arg) {$/;"	f
bench_context_verify	zcash/secp256k1/src/bench_internal.c	/^void bench_context_verify(void* arg) {$/;"	f
bench_ecdh	zcash/secp256k1/src/bench_ecdh.c	/^static void bench_ecdh(void* arg) {$/;"	f	file:
bench_ecdh_OBJECTS	zcash/secp256k1/Makefile	/^bench_ecdh_OBJECTS = $(am_bench_ecdh_OBJECTS)$/;"	m
bench_ecdh_setup	zcash/secp256k1/src/bench_ecdh.c	/^static void bench_ecdh_setup(void* arg) {$/;"	f	file:
bench_ecdh_t	zcash/secp256k1/src/bench_ecdh.c	/^} bench_ecdh_t;$/;"	t	typeref:struct:__anon41	file:
bench_ecmult_wnaf	zcash/secp256k1/src/bench_internal.c	/^void bench_ecmult_wnaf(void* arg) {$/;"	f
bench_field_inverse	zcash/secp256k1/src/bench_internal.c	/^void bench_field_inverse(void* arg) {$/;"	f
bench_field_inverse_var	zcash/secp256k1/src/bench_internal.c	/^void bench_field_inverse_var(void* arg) {$/;"	f
bench_field_mul	zcash/secp256k1/src/bench_internal.c	/^void bench_field_mul(void* arg) {$/;"	f
bench_field_normalize	zcash/secp256k1/src/bench_internal.c	/^void bench_field_normalize(void* arg) {$/;"	f
bench_field_normalize_weak	zcash/secp256k1/src/bench_internal.c	/^void bench_field_normalize_weak(void* arg) {$/;"	f
bench_field_sqr	zcash/secp256k1/src/bench_internal.c	/^void bench_field_sqr(void* arg) {$/;"	f
bench_field_sqrt	zcash/secp256k1/src/bench_internal.c	/^void bench_field_sqrt(void* arg) {$/;"	f
bench_group_add_affine	zcash/secp256k1/src/bench_internal.c	/^void bench_group_add_affine(void* arg) {$/;"	f
bench_group_add_affine_var	zcash/secp256k1/src/bench_internal.c	/^void bench_group_add_affine_var(void* arg) {$/;"	f
bench_group_add_var	zcash/secp256k1/src/bench_internal.c	/^void bench_group_add_var(void* arg) {$/;"	f
bench_group_double_var	zcash/secp256k1/src/bench_internal.c	/^void bench_group_double_var(void* arg) {$/;"	f
bench_group_jacobi_var	zcash/secp256k1/src/bench_internal.c	/^void bench_group_jacobi_var(void* arg) {$/;"	f
bench_hmac_sha256	zcash/secp256k1/src/bench_internal.c	/^void bench_hmac_sha256(void* arg) {$/;"	f
bench_internal_OBJECTS	zcash/secp256k1/Makefile	/^bench_internal_OBJECTS = $(am_bench_internal_OBJECTS)$/;"	m
bench_inv_t	zcash/secp256k1/src/bench_internal.c	/^} bench_inv_t;$/;"	t	typeref:struct:__anon52	file:
bench_num_jacobi	zcash/secp256k1/src/bench_internal.c	/^void bench_num_jacobi(void* arg) {$/;"	f
bench_recover	zcash/secp256k1/src/bench_recover.c	/^void bench_recover(void* arg) {$/;"	f
bench_recover_OBJECTS	zcash/secp256k1/Makefile	/^bench_recover_OBJECTS = $(am_bench_recover_OBJECTS)$/;"	m
bench_recover_setup	zcash/secp256k1/src/bench_recover.c	/^void bench_recover_setup(void* arg) {$/;"	f
bench_recover_t	zcash/secp256k1/src/bench_recover.c	/^} bench_recover_t;$/;"	t	typeref:struct:__anon39	file:
bench_rfc6979_hmac_sha256	zcash/secp256k1/src/bench_internal.c	/^void bench_rfc6979_hmac_sha256(void* arg) {$/;"	f
bench_scalar_add	zcash/secp256k1/src/bench_internal.c	/^void bench_scalar_add(void* arg) {$/;"	f
bench_scalar_inverse	zcash/secp256k1/src/bench_internal.c	/^void bench_scalar_inverse(void* arg) {$/;"	f
bench_scalar_inverse_var	zcash/secp256k1/src/bench_internal.c	/^void bench_scalar_inverse_var(void* arg) {$/;"	f
bench_scalar_mul	zcash/secp256k1/src/bench_internal.c	/^void bench_scalar_mul(void* arg) {$/;"	f
bench_scalar_negate	zcash/secp256k1/src/bench_internal.c	/^void bench_scalar_negate(void* arg) {$/;"	f
bench_scalar_split	zcash/secp256k1/src/bench_internal.c	/^void bench_scalar_split(void* arg) {$/;"	f
bench_scalar_sqr	zcash/secp256k1/src/bench_internal.c	/^void bench_scalar_sqr(void* arg) {$/;"	f
bench_setup	zcash/secp256k1/src/bench_internal.c	/^void bench_setup(void* arg) {$/;"	f
bench_sha256	zcash/secp256k1/src/bench_internal.c	/^void bench_sha256(void* arg) {$/;"	f
bench_sign	zcash/secp256k1/src/bench_sign.c	/^static void bench_sign(void* arg) {$/;"	f	file:
bench_sign_OBJECTS	zcash/secp256k1/Makefile	/^bench_sign_OBJECTS = $(am_bench_sign_OBJECTS)$/;"	m
bench_sign_setup	zcash/secp256k1/src/bench_sign.c	/^static void bench_sign_setup(void* arg) {$/;"	f	file:
bench_sign_t	zcash/secp256k1/src/bench_sign.c	/^} bench_sign_t;$/;"	t	typeref:struct:__anon47	file:
bench_verify_OBJECTS	zcash/secp256k1/Makefile	/^bench_verify_OBJECTS = $(am_bench_verify_OBJECTS)$/;"	m
bench_wnaf_const	zcash/secp256k1/src/bench_internal.c	/^void bench_wnaf_const(void* arg) {$/;"	f
benchmark_verify	zcash/secp256k1/src/bench_verify.c	/^static void benchmark_verify(void* arg) {$/;"	f	file:
benchmark_verify_openssl	zcash/secp256k1/src/bench_verify.c	/^static void benchmark_verify_openssl(void* arg) {$/;"	f	file:
benchmark_verify_t	zcash/secp256k1/src/bench_verify.c	/^} benchmark_verify_t;$/;"	t	typeref:struct:__anon57	file:
bh	zcash/primitives/transaction.h	/^		boost::array<BHeight, ZC_NUM_JS_INPUTS> bh;$/;"	m	class:JSDescription
bh64	zcash/circuit/gadget.tcc	/^		boost::array<pb_variable_array<FieldT>, NumInputs> bh64;$/;"	m	class:joinsplit_gadget	file:
big_sigma_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^class big_sigma_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
big_sigma_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^big_sigma_gadget<FieldT>::big_sigma_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::big_sigma_gadget
bigint	libsnark/src/algebra/fields/bigint.hpp	/^class bigint {$/;"	c	namespace:libsnark
bigint	libsnark/src/algebra/fields/bigint.tcc	/^bigint<n>::bigint(const char* s) \/\/\/ Initialize from a string containing an integer in decimal notation$/;"	f	class:libsnark::bigint
bigint	libsnark/src/algebra/fields/bigint.tcc	/^bigint<n>::bigint(const mpz_t r) \/\/\/ Initialize from MPZ element$/;"	f	class:libsnark::bigint
bigint	libsnark/src/algebra/fields/bigint.tcc	/^bigint<n>::bigint(const unsigned long x) \/\/\/ Initalize from a small integer$/;"	f	class:libsnark::bigint
bin_PROGRAMS	demo/Makefile	/^bin_PROGRAMS = circuit$(EXEEXT)$/;"	m
bin_PROGRAMS	zcash/Makefile	/^bin_PROGRAMS = generate$(EXEEXT) createjs$(EXEEXT)$/;"	m
bindir	Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	demo/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/contrib/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/dist-build/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/msvc-scripts/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/src/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/src/libsodium/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/src/libsodium/include/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/test/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	libsodium/test/default/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	zcash/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bindir	zcash/secp256k1/Makefile	/^bindir = ${exec_prefix}\/bin$/;"	m
bit_vector	libsnark/src/common/utils.hpp	/^typedef std::vector<bool> bit_vector;$/;"	t	namespace:libsnark
bit_vector_copy_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class bit_vector_copy_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
bit_vector_copy_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^bit_vector_copy_gadget<FieldT>::bit_vector_copy_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::bit_vector_copy_gadget
bitreverse	libsnark/src/common/utils.cpp	/^size_t bitreverse(size_t n, const size_t l)$/;"	f	namespace:libsnark
bits	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination_array<FieldT> bits;$/;"	m	class:libsnark::multipacking_gadget
bits	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination_array<FieldT> bits;$/;"	m	class:libsnark::packing_gadget
bits	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable_array<FieldT> bits;$/;"	m	class:libsnark::dual_variable_gadget
bits	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.hpp	/^    pb_variable_array<FieldT> bits;$/;"	m	class:libsnark::block_variable
bits	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.hpp	/^    pb_variable_array<FieldT> bits;$/;"	m	class:libsnark::digest_variable
bits	zcash/arith_uint256.cpp	/^unsigned int base_uint<BITS>::bits() const$/;"	f	class:base_uint
bitslice	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	432;"	d
bitslicekey	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	405;"	d
bitslicekey0	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	357;"	d
bitslicekey10	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	379;"	d
blake2_H	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	18;"	d
blake2b	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	35;"	d
blake2b	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b(uint8_t *out, const void *in, const void *key, const uint8_t outlen,$/;"	f
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c	/^static const uint64_t blake2b_IV[8] = {$/;"	v	file:
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c	/^static const uint64_t blake2b_IV[8] = {$/;"	v	file:
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.c	/^static const uint64_t blake2b_IV[8] = {$/;"	v	file:
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c	/^static const uint64_t blake2b_IV[8] = {$/;"	v	file:
blake2b_IV	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^static const uint64_t blake2b_IV[8] = {$/;"	v	file:
blake2b_compress	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^static blake2b_compress_fn blake2b_compress = blake2b_compress_ref;$/;"	v	file:
blake2b_compress_avx2	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.c	/^blake2b_compress_avx2(blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES])$/;"	f
blake2b_compress_avx2_H	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-avx2.h	3;"	d
blake2b_compress_fn	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^typedef int (*blake2b_compress_fn)(blake2b_state *S,$/;"	t
blake2b_compress_ref	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c	/^blake2b_compress_ref(blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES])$/;"	f
blake2b_compress_sse41	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.c	/^blake2b_compress_sse41(blake2b_state *S,$/;"	f
blake2b_compress_sse41_H	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-sse41.h	3;"	d
blake2b_compress_ssse3	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c	/^blake2b_compress_ssse3(blake2b_state *S,$/;"	f
blake2b_compress_ssse3_H	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h	3;"	d
blake2b_constant	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^enum blake2b_constant {$/;"	g
blake2b_final	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	34;"	d
blake2b_final	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_final(blake2b_state *S, uint8_t *out, uint8_t outlen)$/;"	f
blake2b_increment_counter	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_increment_counter(blake2b_state *S, const uint64_t inc)$/;"	f	file:
blake2b_init	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	27;"	d
blake2b_init	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_init(blake2b_state *S, const uint8_t outlen)$/;"	f
blake2b_init0	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_init0(blake2b_state *S)$/;"	f	file:
blake2b_init_key	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	30;"	d
blake2b_init_key	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_init_key(blake2b_state *S, const uint8_t outlen, const void *key,$/;"	f
blake2b_init_key_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	31;"	d
blake2b_init_key_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_init_key_salt_personal(blake2b_state *S, const uint8_t outlen,$/;"	f
blake2b_init_param	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	26;"	d
blake2b_init_param	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_init_param(blake2b_state *S, const blake2b_param *P)$/;"	f
blake2b_init_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	28;"	d
blake2b_init_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_init_salt_personal(blake2b_state *S, const uint8_t outlen,$/;"	f
blake2b_is_lastblock	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_is_lastblock(const blake2b_state *S)$/;"	f	file:
blake2b_load_avx2_H	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-avx2.h	2;"	d
blake2b_load_sse2_H	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse2.h	17;"	d
blake2b_load_sse41_H	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-load-sse41.h	17;"	d
blake2b_long	libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.c	/^blake2b_long(void *pout, size_t outlen, const void *in, size_t inlen)$/;"	f
blake2b_long_H	libsodium/src/libsodium/crypto_pwhash/argon2/blake2b-long.h	2;"	d
blake2b_param	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^} blake2b_param;$/;"	t	typeref:struct:blake2b_param_
blake2b_param_	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^typedef struct blake2b_param_ {$/;"	s
blake2b_param_set_personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_param_set_personal(blake2b_param *P,$/;"	f	file:
blake2b_param_set_salt	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_param_set_salt(blake2b_param *P, const uint8_t salt[BLAKE2B_SALTBYTES])$/;"	f	file:
blake2b_pick_best_implementation	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	37;"	d
blake2b_pick_best_implementation	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_pick_best_implementation(void)$/;"	f
blake2b_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	36;"	d
blake2b_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_salt_personal(uint8_t *out, const void *in, const void *key,$/;"	f
blake2b_set_lastblock	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_set_lastblock(blake2b_state *S)$/;"	f	file:
blake2b_set_lastnode	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_set_lastnode(blake2b_state *S)$/;"	f	file:
blake2b_sigma	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-compress-ref.c	/^static const uint8_t blake2b_sigma[12][16] = {$/;"	v	file:
blake2b_state	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^typedef crypto_generichash_blake2b_state blake2b_state;$/;"	t
blake2b_update	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	33;"	d
blake2b_update	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^blake2b_update(blake2b_state *S, const uint8_t *in, uint64_t inlen)$/;"	f
blamka_round_avx2_H	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	2;"	d
blamka_round_ref_H	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h	2;"	d
blamka_round_ssse3_H	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	2;"	d
blind	zcash/secp256k1/src/ecmult_gen.h	/^    secp256k1_scalar blind;$/;"	m	struct:__anon44
blkcpy	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blkcpy(escrypt_block_t *dest, const escrypt_block_t *src, size_t len)$/;"	f	file:
blkcpy_64	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blkcpy_64(escrypt_block_t *dest, const escrypt_block_t *src)$/;"	f	file:
blkxor	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blkxor(escrypt_block_t *dest, const escrypt_block_t *src, size_t len)$/;"	f	file:
blkxor_64	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blkxor_64(escrypt_block_t *dest, const escrypt_block_t *src)$/;"	f	file:
block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^} block;$/;"	t	typeref:struct:block_
block	zcash/circuit/prfs.tcc	/^    std::shared_ptr<block_variable<FieldT>> block;$/;"	m	class:PRF_gadget	file:
block1	zcash/circuit/commitment.tcc	/^    std::shared_ptr<block_variable<FieldT>> block1;$/;"	m	class:note_commitment_gadget	file:
block2	zcash/circuit/commitment.tcc	/^    std::shared_ptr<block_variable<FieldT>> block2;$/;"	m	class:note_commitment_gadget	file:
block_	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct block_ {$/;"	s
block_names	libsnark/src/common/profiling.cpp	/^std::vector<std::string> block_names;$/;"	m	namespace:libsnark	file:
block_region	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^} block_region;$/;"	t	typeref:struct:block_region_
block_region_	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef struct block_region_ {$/;"	s
block_size	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.hpp	/^    size_t block_size;$/;"	m	class:libsnark::block_variable
block_size	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^    block_size = SHA_BLOCKSIZE$/;"	v	class:sha256
block_variable	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.hpp	/^class block_variable : public gadget<FieldT> {$/;"	c	namespace:libsnark
block_variable	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.tcc	/^block_variable<FieldT>::block_variable(protoboard<FieldT> &pb,$/;"	f	class:libsnark::block_variable
blockmix_salsa8	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^blockmix_salsa8(const uint32_t *Bin, uint32_t *Bout, uint32_t *X, size_t r)$/;"	f	file:
blockmix_salsa8	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^blockmix_salsa8(const __m128i *Bin, __m128i *Bout, size_t r)$/;"	f	file:
blockmix_salsa8_xor	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^blockmix_salsa8_xor(const __m128i *Bin1, const __m128i *Bin2, __m128i *Bout,$/;"	f	file:
bobpk	libsodium/test/default/box.c	/^static const unsigned char bobpk[32] = {$/;"	v	file:
bobpk	libsodium/test/default/box7.c	/^static unsigned char bobpk[crypto_box_PUBLICKEYBYTES];$/;"	v	file:
bobpk	libsodium/test/default/box8.c	/^static unsigned char bobpk[crypto_box_PUBLICKEYBYTES];$/;"	v	file:
bobpk	libsodium/test/default/box_easy.c	/^static unsigned char bobpk[32] = { 0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1,$/;"	v	file:
bobpk	libsodium/test/default/scalarmult2.c	/^static unsigned char bobpk[32];$/;"	v	file:
bobpk	libsodium/test/default/scalarmult5.c	/^static unsigned char bobpk[32] = { 0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1,$/;"	v	file:
bobsk	libsodium/test/default/box2.c	/^static unsigned char bobsk[32] = { 0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a,$/;"	v	file:
bobsk	libsodium/test/default/box7.c	/^static unsigned char bobsk[crypto_box_SECRETKEYBYTES];$/;"	v	file:
bobsk	libsodium/test/default/box8.c	/^static unsigned char bobsk[crypto_box_SECRETKEYBYTES];$/;"	v	file:
bobsk	libsodium/test/default/scalarmult.c	/^static const unsigned char bobsk[crypto_scalarmult_BYTES] = {$/;"	v	file:
bobsk	libsodium/test/default/scalarmult2.c	/^static unsigned char bobsk[32] = { 0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a,$/;"	v	file:
bobsk_	libsodium/test/default/scalarmult6.c	/^static unsigned char bobsk_[crypto_scalarmult_SCALARBYTES] = {$/;"	v	file:
boost	zcash/zcashutil.cpp	/^namespace boost {$/;"	n	file:
box2_DEPENDENCIES	libsodium/test/default/Makefile	/^box2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box2_LDADD	libsodium/test/default/Makefile	/^box2_LDADD = $(TESTS_LDADD)$/;"	m
box2_OBJECTS	libsodium/test/default/Makefile	/^box2_OBJECTS = box2.$(OBJEXT)$/;"	m
box2_SOURCE	libsodium/test/default/Makefile	/^box2_SOURCE = cmptest.h box2.c$/;"	m
box2_SOURCES	libsodium/test/default/Makefile	/^box2_SOURCES = box2.c$/;"	m
box7_DEPENDENCIES	libsodium/test/default/Makefile	/^box7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box7_LDADD	libsodium/test/default/Makefile	/^box7_LDADD = $(TESTS_LDADD)$/;"	m
box7_OBJECTS	libsodium/test/default/Makefile	/^box7_OBJECTS = box7.$(OBJEXT)$/;"	m
box7_SOURCE	libsodium/test/default/Makefile	/^box7_SOURCE = cmptest.h box7.c$/;"	m
box7_SOURCES	libsodium/test/default/Makefile	/^box7_SOURCES = box7.c$/;"	m
box8_DEPENDENCIES	libsodium/test/default/Makefile	/^box8_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box8_LDADD	libsodium/test/default/Makefile	/^box8_LDADD = $(TESTS_LDADD)$/;"	m
box8_OBJECTS	libsodium/test/default/Makefile	/^box8_OBJECTS = box8.$(OBJEXT)$/;"	m
box8_SOURCE	libsodium/test/default/Makefile	/^box8_SOURCE = cmptest.h box8.c$/;"	m
box8_SOURCES	libsodium/test/default/Makefile	/^box8_SOURCES = box8.c$/;"	m
box_DEPENDENCIES	libsodium/test/default/Makefile	/^box_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_LDADD	libsodium/test/default/Makefile	/^box_LDADD = $(TESTS_LDADD)$/;"	m
box_OBJECTS	libsodium/test/default/Makefile	/^box_OBJECTS = box.$(OBJEXT)$/;"	m
box_SOURCE	libsodium/test/default/Makefile	/^box_SOURCE = cmptest.h box.c$/;"	m
box_SOURCES	libsodium/test/default/Makefile	/^box_SOURCES = box.c$/;"	m
box_easy2_DEPENDENCIES	libsodium/test/default/Makefile	/^box_easy2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_easy2_LDADD	libsodium/test/default/Makefile	/^box_easy2_LDADD = $(TESTS_LDADD)$/;"	m
box_easy2_OBJECTS	libsodium/test/default/Makefile	/^box_easy2_OBJECTS = box_easy2.$(OBJEXT)$/;"	m
box_easy2_SOURCE	libsodium/test/default/Makefile	/^box_easy2_SOURCE = cmptest.h box_easy2.c$/;"	m
box_easy2_SOURCES	libsodium/test/default/Makefile	/^box_easy2_SOURCES = box_easy2.c$/;"	m
box_easy_DEPENDENCIES	libsodium/test/default/Makefile	/^box_easy_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_easy_LDADD	libsodium/test/default/Makefile	/^box_easy_LDADD = $(TESTS_LDADD)$/;"	m
box_easy_OBJECTS	libsodium/test/default/Makefile	/^box_easy_OBJECTS = box_easy.$(OBJEXT)$/;"	m
box_easy_SOURCE	libsodium/test/default/Makefile	/^box_easy_SOURCE = cmptest.h box_easy.c$/;"	m
box_easy_SOURCES	libsodium/test/default/Makefile	/^box_easy_SOURCES = box_easy.c$/;"	m
box_seal_DEPENDENCIES	libsodium/test/default/Makefile	/^box_seal_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_seal_LDADD	libsodium/test/default/Makefile	/^box_seal_LDADD = $(TESTS_LDADD)$/;"	m
box_seal_OBJECTS	libsodium/test/default/Makefile	/^box_seal_OBJECTS = box_seal.$(OBJEXT)$/;"	m
box_seal_SOURCE	libsodium/test/default/Makefile	/^box_seal_SOURCE = cmptest.h box_seal.c$/;"	m
box_seal_SOURCES	libsodium/test/default/Makefile	/^box_seal_SOURCES = box_seal.c$/;"	m
box_seed_DEPENDENCIES	libsodium/test/default/Makefile	/^box_seed_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
box_seed_LDADD	libsodium/test/default/Makefile	/^box_seed_LDADD = $(TESTS_LDADD)$/;"	m
box_seed_OBJECTS	libsodium/test/default/Makefile	/^box_seed_OBJECTS = box_seed.$(OBJEXT)$/;"	m
box_seed_SOURCE	libsodium/test/default/Makefile	/^box_seed_SOURCE = cmptest.h box_seed.c$/;"	m
box_seed_SOURCES	libsodium/test/default/Makefile	/^box_seed_SOURCES = box_seed.c$/;"	m
bswap_16	zcash/compat/byteswap.h	/^inline uint16_t bswap_16(uint16_t x)$/;"	f
bswap_32	zcash/compat/byteswap.h	/^inline uint32_t bswap_32(uint32_t x)$/;"	f
bswap_64	zcash/compat/byteswap.h	/^inline uint64_t bswap_64(uint64_t x)$/;"	f
buf	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^    uint8_t  buf[64];$/;"	m	struct:crypto_hash_sha256_state
buf	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^    uint8_t  buf[128];$/;"	m	struct:crypto_hash_sha512_state
buf	libsodium/src/libsodium/include/sodium/randombytes.h	/^    void        (*buf)(void * const buf, const size_t size); \/* required *\/$/;"	m	struct:randombytes_implementation
buf	zcash/crypto/ripemd160.h	/^    unsigned char buf[64];$/;"	m	class:CRIPEMD160
buf	zcash/crypto/sha1.h	/^    unsigned char buf[64];$/;"	m	class:CSHA1
buf	zcash/crypto/sha256.h	/^    unsigned char buf[64];$/;"	m	class:CSHA256
buf	zcash/crypto/sha512.h	/^    unsigned char buf[128];$/;"	m	class:CSHA512
buf	zcash/secp256k1/src/hash.h	/^    uint32_t buf[16]; \/* In big endian *\/$/;"	m	struct:__anon49
buffer	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^    unsigned char      buffer[poly1305_block_size];$/;"	m	struct:poly1305_state_internal_t
buffer	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^    unsigned char      buffer[poly1305_block_size];$/;"	m	struct:poly1305_state_internal_t
buffer	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    unsigned char      buffer[poly1305_block_size]; \/* 32 bytes *\/$/;"	m	struct:poly1305_state_internal_t	file:
build	Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	demo/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/contrib/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/dist-build/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/msvc-scripts/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/src/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/src/libsodium/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/src/libsodium/include/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/test/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	libsodium/test/default/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	zcash/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build	zcash/secp256k1/Makefile	/^build = x86_64-pc-linux-gnu$/;"	m
build_alias	Makefile	/^build_alias = $/;"	m
build_alias	demo/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/contrib/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/dist-build/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/msvc-scripts/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/src/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/src/libsodium/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/src/libsodium/include/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/test/Makefile	/^build_alias = $/;"	m
build_alias	libsodium/test/default/Makefile	/^build_alias = $/;"	m
build_alias	zcash/Makefile	/^build_alias = $/;"	m
build_alias	zcash/secp256k1/Makefile	/^build_alias = $/;"	m
build_cpu	Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	demo/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/contrib/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/dist-build/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/msvc-scripts/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/src/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/src/libsodium/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/src/libsodium/include/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/test/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	libsodium/test/default/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	zcash/Makefile	/^build_cpu = x86_64$/;"	m
build_cpu	zcash/secp256k1/Makefile	/^build_cpu = x86_64$/;"	m
build_os	Makefile	/^build_os = linux-gnu$/;"	m
build_os	demo/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/contrib/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/dist-build/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/msvc-scripts/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/src/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/src/libsodium/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/src/libsodium/include/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/test/Makefile	/^build_os = linux-gnu$/;"	m
build_os	libsodium/test/default/Makefile	/^build_os = linux-gnu$/;"	m
build_os	zcash/Makefile	/^build_os = linux-gnu$/;"	m
build_os	zcash/secp256k1/Makefile	/^build_os = linux-gnu$/;"	m
build_triplet	Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	demo/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/contrib/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/dist-build/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/msvc-scripts/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/src/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/src/libsodium/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/src/libsodium/include/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/test/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	libsodium/test/default/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	zcash/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_triplet	zcash/secp256k1/Makefile	/^build_triplet = x86_64-pc-linux-gnu$/;"	m
build_vendor	Makefile	/^build_vendor = pc$/;"	m
build_vendor	demo/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/contrib/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/dist-build/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/msvc-scripts/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/src/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/src/libsodium/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/src/libsodium/include/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/test/Makefile	/^build_vendor = pc$/;"	m
build_vendor	libsodium/test/default/Makefile	/^build_vendor = pc$/;"	m
build_vendor	zcash/Makefile	/^build_vendor = pc$/;"	m
build_vendor	zcash/secp256k1/Makefile	/^build_vendor = pc$/;"	m
builddir	Makefile	/^builddir = .$/;"	m
builddir	demo/Makefile	/^builddir = .$/;"	m
builddir	libsodium/Makefile	/^builddir = .$/;"	m
builddir	libsodium/contrib/Makefile	/^builddir = .$/;"	m
builddir	libsodium/dist-build/Makefile	/^builddir = .$/;"	m
builddir	libsodium/msvc-scripts/Makefile	/^builddir = .$/;"	m
builddir	libsodium/src/Makefile	/^builddir = .$/;"	m
builddir	libsodium/src/libsodium/Makefile	/^builddir = .$/;"	m
builddir	libsodium/src/libsodium/include/Makefile	/^builddir = .$/;"	m
builddir	libsodium/test/Makefile	/^builddir = .$/;"	m
builddir	libsodium/test/default/Makefile	/^builddir = .$/;"	m
builddir	zcash/Makefile	/^builddir = .$/;"	m
builddir	zcash/secp256k1/Makefile	/^builddir = .$/;"	m
bytes	zcash/crypto/ripemd160.h	/^    size_t bytes;$/;"	m	class:CRIPEMD160
bytes	zcash/crypto/sha1.h	/^    size_t bytes;$/;"	m	class:CSHA1
bytes	zcash/crypto/sha256.h	/^    size_t bytes;$/;"	m	class:CSHA256
bytes	zcash/crypto/sha512.h	/^    size_t bytes;$/;"	m	class:CSHA512
bytes	zcash/secp256k1/src/hash.h	/^    size_t bytes;$/;"	m	struct:__anon49
bytes_to_words	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^def bytes_to_words(arr):$/;"	f
c	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> c;$/;"	m	class:libsnark::sha256_round_function_gadget
c	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    linear_combination<FieldT> a, b, c;$/;"	m	class:libsnark::r1cs_constraint
c	libsodium/test/default/auth.c	/^static unsigned char c[]     = "what do ya want for nothing?";$/;"	v	file:
c	libsodium/test/default/auth2.c	/^static unsigned char c[50] = { 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,$/;"	v	file:
c	libsodium/test/default/auth3.c	/^static unsigned char c[50] = { 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,$/;"	v	file:
c	libsodium/test/default/auth5.c	/^static unsigned char c[1000];$/;"	v	file:
c	libsodium/test/default/auth6.c	/^static unsigned char c[]     = "what do ya want for nothing?";$/;"	v	file:
c	libsodium/test/default/auth7.c	/^static unsigned char c[600];$/;"	v	file:
c	libsodium/test/default/box.c	/^static unsigned char c[163];$/;"	v	file:
c	libsodium/test/default/box2.c	/^static unsigned char c[163] = {$/;"	v	file:
c	libsodium/test/default/box_easy.c	/^static unsigned char c[147 + crypto_box_MACBYTES];$/;"	v	file:
c	libsodium/test/default/core1.c	/^static unsigned char c[16] = { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,$/;"	v	file:
c	libsodium/test/default/core2.c	/^static unsigned char c[16] = { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,$/;"	v	file:
c	libsodium/test/default/core3.c	/^static unsigned char c[16] = { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,$/;"	v	file:
c	libsodium/test/default/core4.c	/^static unsigned char c[16] = { 101, 120, 112, 97,  110, 100, 32, 51,$/;"	v	file:
c	libsodium/test/default/core5.c	/^static unsigned char c[16] = { 101, 120, 112, 97,  110, 100, 32, 51,$/;"	v	file:
c	libsodium/test/default/core6.c	/^static unsigned char c[16] = { 101, 120, 112, 97,  110, 100, 32, 51,$/;"	v	file:
c	libsodium/test/default/onetimeauth.c	/^static unsigned char c[131] = {$/;"	v	file:
c	libsodium/test/default/onetimeauth2.c	/^static unsigned char c[131] = {$/;"	v	file:
c	libsodium/test/default/onetimeauth7.c	/^static unsigned char c[1000];$/;"	v	file:
c	libsodium/test/default/secretbox.c	/^static unsigned char c[163];$/;"	v	file:
c	libsodium/test/default/secretbox2.c	/^static unsigned char c[163] = {$/;"	v	file:
c	libsodium/test/default/secretbox7.c	/^static unsigned char c[10000];$/;"	v	file:
c	libsodium/test/default/secretbox8.c	/^static unsigned char c[10000];$/;"	v	file:
c	libsodium/test/default/stream4.c	/^static unsigned char c[163];$/;"	v	file:
c0	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    my_Fp6 c0, c1;$/;"	m	class:libsnark::Fp12_2over3over2_model
c0	libsnark/src/algebra/fields/fp2.hpp	/^    my_Fp c0, c1;$/;"	m	class:libsnark::Fp2_model
c0	libsnark/src/algebra/fields/fp3.hpp	/^    my_Fp c0, c1, c2;$/;"	m	class:libsnark::Fp3_model
c0	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    my_Fp2 c0, c1, c2;$/;"	m	class:libsnark::Fp6_3over2_model
c1	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    my_Fp6 c0, c1;$/;"	m	class:libsnark::Fp12_2over3over2_model
c1	libsnark/src/algebra/fields/fp2.hpp	/^    my_Fp c0, c1;$/;"	m	class:libsnark::Fp2_model
c1	libsnark/src/algebra/fields/fp3.hpp	/^    my_Fp c0, c1, c2;$/;"	m	class:libsnark::Fp3_model
c1	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    my_Fp2 c0, c1, c2;$/;"	m	class:libsnark::Fp6_3over2_model
c2	libsnark/src/algebra/fields/fp3.hpp	/^    my_Fp c0, c1, c2;$/;"	m	class:libsnark::Fp3_model
c2	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    my_Fp2 c0, c1, c2;$/;"	m	class:libsnark::Fp6_3over2_model
canary	libsodium/src/libsodium/sodium/utils.c	/^static unsigned char canary[CANARY_SIZE];$/;"	v	file:
capacity	libsnark/src/algebra/fields/fp.hpp	/^    static size_t capacity() { return num_bits - 1; }$/;"	f	class:libsnark::Fp_model
chRejectCode	zcash/consensus/validation.h	/^    unsigned char chRejectCode;$/;"	m	class:CValidationState
chacha20_DEPENDENCIES	libsodium/test/default/Makefile	/^chacha20_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
chacha20_LDADD	libsodium/test/default/Makefile	/^chacha20_LDADD = $(TESTS_LDADD)$/;"	m
chacha20_OBJECTS	libsodium/test/default/Makefile	/^chacha20_OBJECTS = chacha20.$(OBJEXT)$/;"	m
chacha20_SOURCE	libsodium/test/default/Makefile	/^chacha20_SOURCE = cmptest.h chacha20.c$/;"	m
chacha20_SOURCES	libsodium/test/default/Makefile	/^chacha20_SOURCES = chacha20.c$/;"	m
chacha20_encrypt_bytes	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^chacha20_encrypt_bytes(chacha_ctx *ctx, const uint8_t *m, uint8_t *c,$/;"	f	file:
chacha20_encrypt_bytes	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^chacha20_encrypt_bytes(chacha_ctx *ctx, const uint8_t *m, uint8_t *c,$/;"	f	file:
chacha20_encrypt_bytes	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^chacha20_encrypt_bytes(chacha_ctx *ctx, const uint8_t *m, uint8_t *c,$/;"	f	file:
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^typedef struct chacha_ctx {$/;"	s	file:
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^} chacha_ctx;$/;"	t	typeref:struct:chacha_ctx	file:
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^typedef struct chacha_ctx {$/;"	s	file:
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^} chacha_ctx;$/;"	t	typeref:struct:chacha_ctx	file:
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^struct chacha_ctx {$/;"	s	file:
chacha_ctx	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^typedef struct chacha_ctx chacha_ctx;$/;"	t	typeref:struct:chacha_ctx	file:
chacha_ietf_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^chacha_ietf_ivsetup(chacha_ctx *ctx, const uint8_t *iv, const uint8_t *counter)$/;"	f	file:
chacha_ietf_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^chacha_ietf_ivsetup(chacha_ctx *ctx, const uint8_t *iv, const uint8_t *counter)$/;"	f	file:
chacha_ietf_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^chacha_ietf_ivsetup(chacha_ctx *ctx, const uint8_t *iv, const uint8_t *counter)$/;"	f	file:
chacha_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^chacha_ivsetup(chacha_ctx *ctx, const uint8_t *iv, const uint8_t *counter)$/;"	f	file:
chacha_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^chacha_ivsetup(chacha_ctx *ctx, const uint8_t *iv, const uint8_t *counter)$/;"	f	file:
chacha_ivsetup	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^chacha_ivsetup(chacha_ctx *ctx, const uint8_t *iv, const uint8_t *counter)$/;"	f	file:
chacha_keysetup	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^chacha_keysetup(chacha_ctx *ctx, const uint8_t *k)$/;"	f	file:
chacha_keysetup	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^chacha_keysetup(chacha_ctx *ctx, const uint8_t *k)$/;"	f	file:
chacha_keysetup	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^chacha_keysetup(chacha_ctx *ctx, const uint8_t *k)$/;"	f	file:
chaincode	zcash/key.h	/^    ChainCode chaincode;$/;"	m	struct:CExtKey
chaincode	zcash/pubkey.h	/^    ChainCode chaincode;$/;"	m	struct:CExtPubKey
check	zcash/Proof.cpp	/^bool ProofVerifier::check($/;"	f	class:libzcash::ProofVerifier
check_PROGRAMS	libsodium/test/default/Makefile	/^check_PROGRAMS = $(am__EXEEXT_3)$/;"	m
check_fe_equal	zcash/secp256k1/src/tests.c	/^int check_fe_equal(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
check_fe_inverse	zcash/secp256k1/src/tests.c	/^int check_fe_inverse(const secp256k1_fe *a, const secp256k1_fe *ai) {$/;"	f
check_next_root	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::shared_ptr<bit_vector_copy_gadget<FieldT> > check_next_root;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
check_root	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    std::shared_ptr<bit_vector_copy_gadget<FieldT> > check_root;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
checked_malloc	zcash/secp256k1/src/util.h	/^static SECP256K1_INLINE void *checked_malloc(const secp256k1_callback* cb, size_t size) {$/;"	f
checker	zcash/script/sign.h	/^    const TransactionSignatureChecker checker;$/;"	m	class:TransactionSignatureCreator
choice	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> choice;$/;"	m	class:libsnark::sha256_round_function_gadget
choice_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^class choice_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
choice_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^choice_gadget<FieldT>::choice_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::choice_gadget
chunk_size	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const size_t chunk_size;$/;"	m	class:libsnark::bit_vector_copy_gadget
chunk_size	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const size_t chunk_size;$/;"	m	class:libsnark::multipacking_gadget
ciphertext_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *ciphertext_hex;$/;"	m	struct:__anon2	file:
ciphertexts	zcash/primitives/transaction.h	/^    boost::array<ZCNoteEncryption::Ciphertext, ZC_NUM_JS_OUTPUTS> ciphertexts = {{ {{0}} }};$/;"	m	class:JSDescription
circuit_DEPENDENCIES	demo/Makefile	/^circuit_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)$/;"	m
circuit_LDADD	demo/Makefile	/^circuit_LDADD = $(LIBPATH) $(ADDLIBS)$/;"	m
circuit_OBJECTS	demo/Makefile	/^circuit_OBJECTS = $(am_circuit_OBJECTS)$/;"	m
circuit_SOURCES	demo/Makefile	/^circuit_SOURCES = main.cpp$/;"	m
clamp_curve25519	zcash/NoteEncryption.cpp	/^void clamp_curve25519(unsigned char key[crypto_scalarmult_SCALARBYTES])$/;"	f
cleanup	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static synchronized void cleanup() {$/;"	m	class:NativeSecp256k1
clear	libsnark/src/algebra/fields/bigint.tcc	/^void bigint<n>::clear()$/;"	f	class:libsnark::bigint
clear	libsnark/src/algebra/fields/fp.tcc	/^void Fp_model<n,modulus>::clear()$/;"	f	class:libsnark::Fp_model
clear	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    void clear() { c0.clear(); c1.clear(); }$/;"	f	class:libsnark::Fp12_2over3over2_model
clear	libsnark/src/algebra/fields/fp2.hpp	/^    void clear() { c0.clear(); c1.clear(); }$/;"	f	class:libsnark::Fp2_model
clear	libsnark/src/algebra/fields/fp3.hpp	/^    void clear() { c0.clear(); c1.clear(); c2.clear(); }$/;"	f	class:libsnark::Fp3_model
clear	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    void clear() { c0.clear(); c1.clear(); c2.clear(); }$/;"	f	class:libsnark::Fp6_3over2_model
clear	zcash/script/script.h	/^    void clear()$/;"	f	class:CScript
clear	zcash/streams.h	/^    void clear()                                     { vch.clear(); nReadPos = 0; }$/;"	f	class:CBaseDataStream
clear_memory	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^clear_memory(argon2_instance_t *instance, int clear)$/;"	f	file:
clear_profiling_counters	libsnark/src/common/profiling.cpp	/^void clear_profiling_counters()$/;"	f	namespace:libsnark
clear_values	libsnark/src/gadgetlib1/protoboard.tcc	/^void protoboard<FieldT>::clear_values()$/;"	f	class:libsnark::protoboard
cloneContext	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static long cloneContext() {$/;"	m	class:NativeSecp256k1
close	libsodium/src/libsodium/include/sodium/randombytes.h	/^    int         (*close)(void);               \/* optional *\/$/;"	m	struct:randombytes_implementation
cm	zcash/Note.cpp	/^uint256 Note::cm() const {$/;"	f	class:libzcash::Note
cmov	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^cmov(ge_precomp *t, const ge_precomp *u, unsigned char b)$/;"	f	file:
cmovl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmovl %r11,%r12$/;"	l
cmovne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmovne %r11,%r12$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^cmp  $0,%rsi$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %r10,%rdx$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %rax,%r8$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %rax,%r9$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %rax,%rcx$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^cmp  %rax,%rsi$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^cmp  $0,%rdx$/;"	l
cmp	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^cmp  $0,%rdx$/;"	l
cmp	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^cmp  $0,%r9$/;"	l
cmp	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^cmp  $256,%r9$/;"	l
cmp	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^cmp  $64,%r9$/;"	l
cmult	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^cmult(limb *resultx, limb *resultz, const u8 *n, const limb *q)$/;"	f	file:
coeff	libsnark/src/relations/variable.hpp	/^    FieldT coeff;$/;"	m	class:libsnark::linear_term
coefficients_for_ABCs	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::vector<FieldT> coefficients_for_ABCs;$/;"	m	class:libsnark::qap_witness
coefficients_for_H	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::vector<FieldT> coefficients_for_H;$/;"	m	class:libsnark::qap_witness
coeffs	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^    std::vector<alt_bn128_ate_ell_coeffs> coeffs;$/;"	m	struct:libsnark::alt_bn128_ate_G2_precomp
combine	zcash/IncrementalMerkleTree.cpp	/^SHA256Compress SHA256Compress::combine(const SHA256Compress& a, const SHA256Compress& b)$/;"	f	class:libzcash::SHA256Compress
commit_to_inputs	zcash/circuit/note.tcc	/^    std::shared_ptr<note_commitment_gadget<FieldT>> commit_to_inputs;$/;"	m	class:input_note_gadget	file:
commit_to_outputs	zcash/circuit/note.tcc	/^    std::shared_ptr<note_commitment_gadget<FieldT>> commit_to_outputs;$/;"	m	class:output_note_gadget	file:
commitment	zcash/circuit/note.tcc	/^    std::shared_ptr<digest_variable<FieldT>> commitment;$/;"	m	class:input_note_gadget	file:
commitments	zcash/primitives/transaction.h	/^    boost::array<uint256, ZC_NUM_JS_OUTPUTS> commitments;$/;"	m	class:JSDescription
common_H	libsodium/src/libsodium/include/sodium/private/common.h	2;"	d
comparison_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    comparison_gadget(protoboard<FieldT>& pb,$/;"	f	class:libsnark::comparison_gadget
comparison_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class comparison_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
compat_tests	libsodium/test/default/randombytes.c	/^compat_tests(void)$/;"	f	file:
computePubkey	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] computePubkey(byte[] seckey) throws AssertFailException{$/;"	m	class:NativeSecp256k1
compute_Z	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^FieldT basic_radix2_domain<FieldT>::compute_Z(const FieldT &t)$/;"	f	class:libsnark::basic_radix2_domain
compute_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    std::vector<std::shared_ptr<XOR3_gadget<FieldT> > > compute_bits;$/;"	m	class:libsnark::big_sigma_gadget
compute_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    std::vector<std::shared_ptr<XOR3_gadget<FieldT> > > compute_bits;$/;"	m	class:libsnark::small_sigma_gadget
compute_choice	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::shared_ptr<choice_gadget<FieldT> > compute_choice;$/;"	m	class:libsnark::sha256_round_function_gadget
compute_majority	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::shared_ptr<majority_gadget<FieldT> > compute_majority;$/;"	m	class:libsnark::sha256_round_function_gadget
compute_result	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    std::shared_ptr<inner_product_gadget<FieldT> > compute_result;$/;"	m	class:libsnark::loose_multiplexing_gadget
compute_sigma0	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::shared_ptr<big_sigma_gadget<FieldT> > compute_sigma0;$/;"	m	class:libsnark::sha256_round_function_gadget
compute_sigma0	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::vector<std::shared_ptr<small_sigma_gadget<FieldT> > > compute_sigma0;$/;"	m	class:libsnark::sha256_message_schedule_gadget
compute_sigma1	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::shared_ptr<big_sigma_gadget<FieldT> > compute_sigma1;$/;"	m	class:libsnark::sha256_round_function_gadget
compute_sigma1	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::vector<std::shared_ptr<small_sigma_gadget<FieldT> > > compute_sigma1;$/;"	m	class:libsnark::sha256_message_schedule_gadget
computed_next_root	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::shared_ptr<digest_variable<FieldT> > computed_next_root;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
computed_root	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    std::shared_ptr<digest_variable<FieldT> > computed_root;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
condition	zcash/sync.h	/^    boost::condition_variable condition;$/;"	m	class:CSemaphore
conjunction_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    conjunction_gadget(protoboard<FieldT>& pb,$/;"	f	class:libsnark::conjunction_gadget
conjunction_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class conjunction_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
consistency_check	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > consistency_check;$/;"	m	class:libsnark::dual_variable_gadget
const_iterator	zcash/streams.h	/^    typedef typename vector_type::const_iterator   const_iterator;$/;"	t	class:CBaseDataStream
const_pointer	zcash/support/allocators/secure.h	/^    typedef typename base::const_pointer const_pointer;$/;"	t	struct:secure_allocator
const_pointer	zcash/support/allocators/zeroafterfree.h	/^    typedef typename base::const_pointer const_pointer;$/;"	t	struct:zero_after_free_allocator
const_reference	zcash/streams.h	/^    typedef typename vector_type::const_reference  const_reference;$/;"	t	class:CBaseDataStream
const_reference	zcash/support/allocators/secure.h	/^    typedef typename base::const_reference const_reference;$/;"	t	struct:secure_allocator
const_reference	zcash/support/allocators/zeroafterfree.h	/^    typedef typename base::const_reference const_reference;$/;"	t	struct:zero_after_free_allocator
constant_term	libsnark/src/gadgetlib1/pb_variable.tcc	/^FieldT pb_linear_combination<FieldT>::constant_term() const$/;"	f	class:libsnark::pb_linear_combination
constant_term	libsnark/src/gadgetlib1/protoboard.hpp	/^    FieldT constant_term; \/* only here, because pb.val() needs to be able to return reference to the constant 1 term *\/$/;"	m	class:libsnark::protoboard
constraint_annotations	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    std::map<size_t, std::string> constraint_annotations;$/;"	m	class:libsnark::r1cs_constraint_system
constraint_profiling_entry	libsnark/src/gadgetlib1/constraint_profiling.hpp	/^struct constraint_profiling_entry {$/;"	s	namespace:libsnark
constraint_profiling_indent	libsnark/src/gadgetlib1/constraint_profiling.cpp	/^size_t constraint_profiling_indent = 0;$/;"	m	namespace:libsnark	file:
constraint_profiling_table	libsnark/src/gadgetlib1/constraint_profiling.cpp	/^std::vector<constraint_profiling_entry> constraint_profiling_table;$/;"	m	namespace:libsnark	file:
constraint_system	libsnark/src/gadgetlib1/protoboard.hpp	/^    r1cs_constraint_system<FieldT> constraint_system;$/;"	m	class:libsnark::protoboard
constraint_system	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.hpp	/^    r1cs_constraint_system<FieldT> constraint_system;$/;"	m	struct:libsnark::r1cs_example
constraints	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    std::vector<r1cs_constraint<FieldT> > constraints;$/;"	m	class:libsnark::r1cs_constraint_system
consts_namespace_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	2;"	d
consume_OUTPUT_NEWLINE	libsnark/src/common/serialization.tcc	/^inline void consume_OUTPUT_NEWLINE(std::istream &in)$/;"	f	namespace:libsnark
consume_OUTPUT_SEPARATOR	libsnark/src/common/serialization.tcc	/^inline void consume_OUTPUT_SEPARATOR(std::istream &in)$/;"	f	namespace:libsnark
consume_newline	libsnark/src/common/serialization.tcc	/^inline void consume_newline(std::istream &in)$/;"	f	namespace:libsnark
contents	libsnark/src/gadgetlib1/pb_variable.hpp	/^    typedef std::vector<pb_linear_combination<FieldT> > contents;$/;"	t	class:libsnark::pb_linear_combination_array
contents	libsnark/src/gadgetlib1/pb_variable.hpp	/^    typedef std::vector<pb_variable<FieldT> > contents;$/;"	t	class:libsnark::pb_variable_array
contents	zcash/uint252.h	/^    uint256 contents;$/;"	m	class:uint252
context	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^typedef struct context {$/;"	s	file:
context	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^} context;$/;"	t	typeref:struct:context	file:
context	zcash/secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  private static final long context; \/\/ref to pointer to context obj$/;"	f	class:Secp256k1Context	file:
convertBytesVectorToVector	zcash/util.cpp	/^std::vector<bool> convertBytesVectorToVector(const std::vector<unsigned char>& bytes) {$/;"	f
convertIntToVectorLE	zcash/util.cpp	/^std::vector<unsigned char> convertIntToVectorLE(const uint64_t val_int) {$/;"	f
convertToInt	zcash/tinyformat.h	/^struct convertToInt$/;"	s	namespace:tinyformat::detail
convertToInt	zcash/tinyformat.h	/^struct convertToInt<T,true>$/;"	s	namespace:tinyformat::detail
convertVectorToInt	zcash/util.cpp	/^uint64_t convertVectorToInt(const std::vector<bool>& v) {$/;"	f
convert_bit_vector_to_field_element	libsnark/src/algebra/fields/field_utils.tcc	/^FieldT convert_bit_vector_to_field_element(const bit_vector &v)$/;"	f	namespace:libsnark
convert_bit_vector_to_field_element_vector	libsnark/src/algebra/fields/field_utils.tcc	/^std::vector<FieldT> convert_bit_vector_to_field_element_vector(const bit_vector &v)$/;"	f	namespace:libsnark
convert_field_element_to_bit_vector	libsnark/src/algebra/fields/field_utils.tcc	/^bit_vector convert_field_element_to_bit_vector(const FieldT &el)$/;"	f	namespace:libsnark
convert_field_element_to_bit_vector	libsnark/src/algebra/fields/field_utils.tcc	/^bit_vector convert_field_element_to_bit_vector(const FieldT &el, const size_t bitcount)$/;"	f	namespace:libsnark
convert_field_element_vector_to_bit_vector	libsnark/src/algebra/fields/field_utils.tcc	/^bit_vector convert_field_element_vector_to_bit_vector(const std::vector<FieldT> &v)$/;"	f	namespace:libsnark
copier	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    std::shared_ptr<field_vector_copy_gadget<FieldT> > copier;$/;"	m	class:libsnark::bit_vector_copy_gadget
copy	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^    def copy(self):$/;"	m	class:sha224
copy	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^    def copy(self):$/;"	m	class:sha256
copy2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	23;"	d
copy2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^copy2(aes_uint128_t *r, const aes_uint128_t *x)$/;"	f
copy_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^copy_block(block *dst, const block *src)$/;"	f
core1_DEPENDENCIES	libsodium/test/default/Makefile	/^core1_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core1_LDADD	libsodium/test/default/Makefile	/^core1_LDADD = $(TESTS_LDADD)$/;"	m
core1_OBJECTS	libsodium/test/default/Makefile	/^core1_OBJECTS = core1.$(OBJEXT)$/;"	m
core1_SOURCE	libsodium/test/default/Makefile	/^core1_SOURCE = cmptest.h core1.c$/;"	m
core1_SOURCES	libsodium/test/default/Makefile	/^core1_SOURCES = core1.c$/;"	m
core2_DEPENDENCIES	libsodium/test/default/Makefile	/^core2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core2_LDADD	libsodium/test/default/Makefile	/^core2_LDADD = $(TESTS_LDADD)$/;"	m
core2_OBJECTS	libsodium/test/default/Makefile	/^core2_OBJECTS = core2.$(OBJEXT)$/;"	m
core2_SOURCE	libsodium/test/default/Makefile	/^core2_SOURCE = cmptest.h core2.c$/;"	m
core2_SOURCES	libsodium/test/default/Makefile	/^core2_SOURCES = core2.c$/;"	m
core3_DEPENDENCIES	libsodium/test/default/Makefile	/^core3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core3_LDADD	libsodium/test/default/Makefile	/^core3_LDADD = $(TESTS_LDADD)$/;"	m
core3_OBJECTS	libsodium/test/default/Makefile	/^core3_OBJECTS = core3.$(OBJEXT)$/;"	m
core3_SOURCE	libsodium/test/default/Makefile	/^core3_SOURCE = cmptest.h core3.c$/;"	m
core3_SOURCES	libsodium/test/default/Makefile	/^core3_SOURCES = core3.c$/;"	m
core4_DEPENDENCIES	libsodium/test/default/Makefile	/^core4_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core4_LDADD	libsodium/test/default/Makefile	/^core4_LDADD = $(TESTS_LDADD)$/;"	m
core4_OBJECTS	libsodium/test/default/Makefile	/^core4_OBJECTS = core4.$(OBJEXT)$/;"	m
core4_SOURCE	libsodium/test/default/Makefile	/^core4_SOURCE = cmptest.h core4.c$/;"	m
core4_SOURCES	libsodium/test/default/Makefile	/^core4_SOURCES = core4.c$/;"	m
core5_DEPENDENCIES	libsodium/test/default/Makefile	/^core5_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core5_LDADD	libsodium/test/default/Makefile	/^core5_LDADD = $(TESTS_LDADD)$/;"	m
core5_OBJECTS	libsodium/test/default/Makefile	/^core5_OBJECTS = core5.$(OBJEXT)$/;"	m
core5_SOURCE	libsodium/test/default/Makefile	/^core5_SOURCE = cmptest.h core5.c$/;"	m
core5_SOURCES	libsodium/test/default/Makefile	/^core5_SOURCES = core5.c$/;"	m
core6_DEPENDENCIES	libsodium/test/default/Makefile	/^core6_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
core6_LDADD	libsodium/test/default/Makefile	/^core6_LDADD = $(TESTS_LDADD)$/;"	m
core6_OBJECTS	libsodium/test/default/Makefile	/^core6_OBJECTS = core6.$(OBJEXT)$/;"	m
core6_SOURCE	libsodium/test/default/Makefile	/^core6_SOURCE = cmptest.h core6.c$/;"	m
core6_SOURCES	libsodium/test/default/Makefile	/^core6_SOURCES = core6.c$/;"	m
corruptionPossible	zcash/consensus/validation.h	/^    bool corruptionPossible;$/;"	m	class:CValidationState
cosetFFT	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^void basic_radix2_domain<FieldT>::cosetFFT(std::vector<FieldT> &a, const FieldT &g)$/;"	f	class:libsnark::basic_radix2_domain
coset_shift	libsnark/src/algebra/fields/field_utils.tcc	/^FieldT coset_shift()$/;"	f	namespace:libsnark
count	libsnark/src/gadgetlib1/constraint_profiling.hpp	/^    size_t count;$/;"	m	struct:libsnark::constraint_profiling_entry
count	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^    uint64_t count;$/;"	m	struct:crypto_hash_sha256_state
count	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^    uint64_t count[2];$/;"	m	struct:crypto_hash_sha512_state
count	zcash/secp256k1/src/tests.c	/^static int count = 64;$/;"	v	file:
counting_illegal_callback_fn	zcash/secp256k1/src/tests.c	/^static void counting_illegal_callback_fn(const char* str, void* data) {$/;"	f	file:
cpp_val	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^def cpp_val(s, log_radix=32):$/;"	f
createECDHSecret	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] createECDHSecret(byte[] seckey, byte[] pubkey) throws AssertFailException{$/;"	m	class:NativeSecp256k1
create_linear_combination_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void create_linear_combination_constraints(protoboard<FieldT> &pb,$/;"	f	namespace:libsnark
create_linear_combination_witness	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void create_linear_combination_witness(protoboard<FieldT> &pb,$/;"	f	namespace:libsnark
createjs_DEPENDENCIES	zcash/Makefile	/^createjs_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)$/;"	m
createjs_LDADD	zcash/Makefile	/^createjs_LDADD = $(LIBPATH) $(ADDLIBS)$/;"	m
createjs_OBJECTS	zcash/Makefile	/^createjs_OBJECTS = $(am_createjs_OBJECTS)$/;"	m
createjs_SOURCES	zcash/Makefile	/^createjs_SOURCES = CreateJoinSplit.cpp Address.cpp amount.cpp hash.cpp \\$/;"	m
crecip	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^crecip(felem out, const felem z)$/;"	f	file:
crypto_aead_aes256gcm_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	29;"	d
crypto_aead_aes256gcm_H	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	2;"	d
crypto_aead_aes256gcm_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	17;"	d
crypto_aead_aes256gcm_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	25;"	d
crypto_aead_aes256gcm_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	21;"	d
crypto_aead_aes256gcm_abytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_abytes(void)$/;"	f
crypto_aead_aes256gcm_beforenm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_beforenm(crypto_aead_aes256gcm_state *ctx_,$/;"	f
crypto_aead_aes256gcm_decrypt	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt(unsigned char *m, unsigned long long *mlen_p,$/;"	f
crypto_aead_aes256gcm_decrypt	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt(unsigned char *m,$/;"	f
crypto_aead_aes256gcm_decrypt_afternm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen_p,$/;"	f
crypto_aead_aes256gcm_decrypt_detached	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt_detached(unsigned char *m,$/;"	f
crypto_aead_aes256gcm_decrypt_detached_afternm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_decrypt_detached_afternm(unsigned char *m, unsigned char *nsec,$/;"	f
crypto_aead_aes256gcm_encrypt	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt(unsigned char *c, unsigned long long *clen_p,$/;"	f
crypto_aead_aes256gcm_encrypt	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt(unsigned char *c,$/;"	f
crypto_aead_aes256gcm_encrypt_afternm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c, unsigned long long *clen_p,$/;"	f
crypto_aead_aes256gcm_encrypt_detached	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt_detached(unsigned char *c,$/;"	f
crypto_aead_aes256gcm_encrypt_detached_afternm	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_encrypt_detached_afternm(unsigned char *c,$/;"	f
crypto_aead_aes256gcm_is_available	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_is_available(void)$/;"	f
crypto_aead_aes256gcm_keybytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_keybytes(void)$/;"	f
crypto_aead_aes256gcm_keygen	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_keygen(unsigned char k[crypto_aead_aes256gcm_KEYBYTES])$/;"	f
crypto_aead_aes256gcm_npubbytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_npubbytes(void)$/;"	f
crypto_aead_aes256gcm_nsecbytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_nsecbytes(void)$/;"	f
crypto_aead_aes256gcm_state	libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h	/^typedef CRYPTO_ALIGN(16) unsigned char crypto_aead_aes256gcm_state[512];$/;"	v
crypto_aead_aes256gcm_statebytes	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^crypto_aead_aes256gcm_statebytes(void)$/;"	f
crypto_aead_chacha20poly1305_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	97;"	d
crypto_aead_chacha20poly1305_H	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	2;"	d
crypto_aead_chacha20poly1305_IETF_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	156;"	d
crypto_aead_chacha20poly1305_IETF_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	153;"	d
crypto_aead_chacha20poly1305_IETF_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	155;"	d
crypto_aead_chacha20poly1305_IETF_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	154;"	d
crypto_aead_chacha20poly1305_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	85;"	d
crypto_aead_chacha20poly1305_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	93;"	d
crypto_aead_chacha20poly1305_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	89;"	d
crypto_aead_chacha20poly1305_abytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_abytes(void)$/;"	f
crypto_aead_chacha20poly1305_decrypt	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_decrypt(unsigned char *m,$/;"	f
crypto_aead_chacha20poly1305_decrypt_detached	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_decrypt_detached(unsigned char *m,$/;"	f
crypto_aead_chacha20poly1305_encrypt	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_encrypt(unsigned char *c,$/;"	f
crypto_aead_chacha20poly1305_encrypt_detached	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_encrypt_detached(unsigned char *c,$/;"	f
crypto_aead_chacha20poly1305_ietf_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	29;"	d
crypto_aead_chacha20poly1305_ietf_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	16;"	d
crypto_aead_chacha20poly1305_ietf_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	24;"	d
crypto_aead_chacha20poly1305_ietf_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h	20;"	d
crypto_aead_chacha20poly1305_ietf_abytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_abytes(void)$/;"	f
crypto_aead_chacha20poly1305_ietf_decrypt	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_decrypt(unsigned char *m,$/;"	f
crypto_aead_chacha20poly1305_ietf_decrypt_detached	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_decrypt_detached(unsigned char *m,$/;"	f
crypto_aead_chacha20poly1305_ietf_encrypt	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_encrypt(unsigned char *c,$/;"	f
crypto_aead_chacha20poly1305_ietf_encrypt_detached	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_encrypt_detached(unsigned char *c,$/;"	f
crypto_aead_chacha20poly1305_ietf_keybytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_keybytes(void)$/;"	f
crypto_aead_chacha20poly1305_ietf_keygen	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_keygen(unsigned char k[crypto_aead_chacha20poly1305_ietf_KEYBYTES])$/;"	f
crypto_aead_chacha20poly1305_ietf_npubbytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_npubbytes(void)$/;"	f
crypto_aead_chacha20poly1305_ietf_nsecbytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_ietf_nsecbytes(void)$/;"	f
crypto_aead_chacha20poly1305_keybytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_keybytes(void)$/;"	f
crypto_aead_chacha20poly1305_keygen	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_keygen(unsigned char k[crypto_aead_chacha20poly1305_KEYBYTES])$/;"	f
crypto_aead_chacha20poly1305_npubbytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_npubbytes(void)$/;"	f
crypto_aead_chacha20poly1305_nsecbytes	libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c	/^crypto_aead_chacha20poly1305_nsecbytes(void)$/;"	f
crypto_aead_xchacha20poly1305_H	libsodium/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h	2;"	d
crypto_aead_xchacha20poly1305_IETF_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h	85;"	d
crypto_aead_xchacha20poly1305_IETF_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h	82;"	d
crypto_aead_xchacha20poly1305_IETF_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h	84;"	d
crypto_aead_xchacha20poly1305_IETF_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h	83;"	d
crypto_aead_xchacha20poly1305_ietf_ABYTES	libsodium/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h	26;"	d
crypto_aead_xchacha20poly1305_ietf_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h	14;"	d
crypto_aead_xchacha20poly1305_ietf_NPUBBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h	22;"	d
crypto_aead_xchacha20poly1305_ietf_NSECBYTES	libsodium/src/libsodium/include/sodium/crypto_aead_xchacha20poly1305.h	18;"	d
crypto_aead_xchacha20poly1305_ietf_abytes	libsodium/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c	/^crypto_aead_xchacha20poly1305_ietf_abytes(void)$/;"	f
crypto_aead_xchacha20poly1305_ietf_decrypt	libsodium/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c	/^crypto_aead_xchacha20poly1305_ietf_decrypt(unsigned char *m,$/;"	f
crypto_aead_xchacha20poly1305_ietf_decrypt_detached	libsodium/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c	/^crypto_aead_xchacha20poly1305_ietf_decrypt_detached(unsigned char *m,$/;"	f
crypto_aead_xchacha20poly1305_ietf_encrypt	libsodium/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c	/^crypto_aead_xchacha20poly1305_ietf_encrypt(unsigned char *c,$/;"	f
crypto_aead_xchacha20poly1305_ietf_encrypt_detached	libsodium/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c	/^crypto_aead_xchacha20poly1305_ietf_encrypt_detached(unsigned char *c,$/;"	f
crypto_aead_xchacha20poly1305_ietf_keybytes	libsodium/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c	/^crypto_aead_xchacha20poly1305_ietf_keybytes(void)$/;"	f
crypto_aead_xchacha20poly1305_ietf_keygen	libsodium/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c	/^crypto_aead_xchacha20poly1305_ietf_keygen(unsigned char k[crypto_aead_xchacha20poly1305_ietf_KEYBYTES])$/;"	f
crypto_aead_xchacha20poly1305_ietf_npubbytes	libsodium/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c	/^crypto_aead_xchacha20poly1305_ietf_npubbytes(void)$/;"	f
crypto_aead_xchacha20poly1305_ietf_nsecbytes	libsodium/src/libsodium/crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c	/^crypto_aead_xchacha20poly1305_ietf_nsecbytes(void)$/;"	f
crypto_auth	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth(unsigned char *out, const unsigned char *in,$/;"	f
crypto_auth_BYTES	libsodium/src/libsodium/include/sodium/crypto_auth.h	16;"	d
crypto_auth_H	libsodium/src/libsodium/include/sodium/crypto_auth.h	2;"	d
crypto_auth_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_auth.h	20;"	d
crypto_auth_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_auth.h	24;"	d
crypto_auth_bytes	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth_bytes(void)$/;"	f
crypto_auth_hmacsha256	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c	/^crypto_auth_hmacsha256(unsigned char *out, const unsigned char *in,$/;"	f
crypto_auth_hmacsha256_BYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	15;"	d
crypto_auth_hmacsha256_H	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	2;"	d
crypto_auth_hmacsha256_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	19;"	d
crypto_auth_hmacsha256_bytes	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c	/^crypto_auth_hmacsha256_bytes(void)$/;"	f
crypto_auth_hmacsha256_final	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c	/^crypto_auth_hmacsha256_final(crypto_auth_hmacsha256_state *state,$/;"	f
crypto_auth_hmacsha256_init	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c	/^crypto_auth_hmacsha256_init(crypto_auth_hmacsha256_state *state,$/;"	f
crypto_auth_hmacsha256_keybytes	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c	/^crypto_auth_hmacsha256_keybytes(void)$/;"	f
crypto_auth_hmacsha256_keygen	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c	/^crypto_auth_hmacsha256_keygen(unsigned char k[crypto_auth_hmacsha256_KEYBYTES])$/;"	f
crypto_auth_hmacsha256_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	/^typedef struct crypto_auth_hmacsha256_state {$/;"	s
crypto_auth_hmacsha256_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	/^} crypto_auth_hmacsha256_state;$/;"	t	typeref:struct:crypto_auth_hmacsha256_state
crypto_auth_hmacsha256_statebytes	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c	/^crypto_auth_hmacsha256_statebytes(void)$/;"	f
crypto_auth_hmacsha256_update	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c	/^crypto_auth_hmacsha256_update(crypto_auth_hmacsha256_state *state,$/;"	f
crypto_auth_hmacsha256_verify	libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256.c	/^crypto_auth_hmacsha256_verify(const unsigned char *h, const unsigned char *in,$/;"	f
crypto_auth_hmacsha512	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c	/^crypto_auth_hmacsha512(unsigned char *out, const unsigned char *in,$/;"	f
crypto_auth_hmacsha512256	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c	/^crypto_auth_hmacsha512256(unsigned char *out, const unsigned char *in,$/;"	f
crypto_auth_hmacsha512256_BYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h	15;"	d
crypto_auth_hmacsha512256_H	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h	2;"	d
crypto_auth_hmacsha512256_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h	19;"	d
crypto_auth_hmacsha512256_bytes	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c	/^crypto_auth_hmacsha512256_bytes(void)$/;"	f
crypto_auth_hmacsha512256_final	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c	/^crypto_auth_hmacsha512256_final(crypto_auth_hmacsha512256_state *state,$/;"	f
crypto_auth_hmacsha512256_init	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c	/^crypto_auth_hmacsha512256_init(crypto_auth_hmacsha512256_state *state,$/;"	f
crypto_auth_hmacsha512256_keybytes	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c	/^crypto_auth_hmacsha512256_keybytes(void)$/;"	f
crypto_auth_hmacsha512256_keygen	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c	/^crypto_auth_hmacsha512256_keygen($/;"	f
crypto_auth_hmacsha512256_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h	/^typedef crypto_auth_hmacsha512_state crypto_auth_hmacsha512256_state;$/;"	t
crypto_auth_hmacsha512256_statebytes	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c	/^crypto_auth_hmacsha512256_statebytes(void)$/;"	f
crypto_auth_hmacsha512256_update	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c	/^crypto_auth_hmacsha512256_update(crypto_auth_hmacsha512256_state *state,$/;"	f
crypto_auth_hmacsha512256_verify	libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256.c	/^crypto_auth_hmacsha512256_verify(const unsigned char *h,$/;"	f
crypto_auth_hmacsha512_BYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	15;"	d
crypto_auth_hmacsha512_H	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	2;"	d
crypto_auth_hmacsha512_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	19;"	d
crypto_auth_hmacsha512_bytes	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c	/^crypto_auth_hmacsha512_bytes(void)$/;"	f
crypto_auth_hmacsha512_final	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c	/^crypto_auth_hmacsha512_final(crypto_auth_hmacsha512_state *state,$/;"	f
crypto_auth_hmacsha512_init	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c	/^crypto_auth_hmacsha512_init(crypto_auth_hmacsha512_state *state,$/;"	f
crypto_auth_hmacsha512_keybytes	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c	/^crypto_auth_hmacsha512_keybytes(void)$/;"	f
crypto_auth_hmacsha512_keygen	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c	/^crypto_auth_hmacsha512_keygen(unsigned char k[crypto_auth_hmacsha512_KEYBYTES])$/;"	f
crypto_auth_hmacsha512_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	/^typedef struct crypto_auth_hmacsha512_state {$/;"	s
crypto_auth_hmacsha512_state	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	/^} crypto_auth_hmacsha512_state;$/;"	t	typeref:struct:crypto_auth_hmacsha512_state
crypto_auth_hmacsha512_statebytes	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c	/^crypto_auth_hmacsha512_statebytes(void)$/;"	f
crypto_auth_hmacsha512_update	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c	/^crypto_auth_hmacsha512_update(crypto_auth_hmacsha512_state *state,$/;"	f
crypto_auth_hmacsha512_verify	libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512.c	/^crypto_auth_hmacsha512_verify(const unsigned char *h, const unsigned char *in,$/;"	f
crypto_auth_keybytes	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth_keybytes(void)$/;"	f
crypto_auth_keygen	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth_keygen(unsigned char k[crypto_auth_KEYBYTES])$/;"	f
crypto_auth_primitive	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth_primitive(void)$/;"	f
crypto_auth_verify	libsodium/src/libsodium/crypto_auth/crypto_auth.c	/^crypto_auth_verify(const unsigned char *h, const unsigned char *in,$/;"	f
crypto_box	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_BEFORENMBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	84;"	d
crypto_box_BOXZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	138;"	d
crypto_box_H	libsodium/src/libsodium/include/sodium/crypto_box.h	2;"	d
crypto_box_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	39;"	d
crypto_box_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	35;"	d
crypto_box_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_box.h	43;"	d
crypto_box_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	27;"	d
crypto_box_SEALBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	118;"	d
crypto_box_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	31;"	d
crypto_box_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	23;"	d
crypto_box_ZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_box.h	134;"	d
crypto_box_afternm	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_afternm(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_beforenm	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_beforenm(unsigned char *k, const unsigned char *pk,$/;"	f
crypto_box_beforenmbytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_beforenmbytes(void)$/;"	f
crypto_box_boxzerobytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_boxzerobytes(void)$/;"	f
crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h	27;"	d
crypto_box_curve25519xchacha20poly1305_H	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h	3;"	d
crypto_box_curve25519xchacha20poly1305_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h	35;"	d
crypto_box_curve25519xchacha20poly1305_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h	31;"	d
crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h	19;"	d
crypto_box_curve25519xchacha20poly1305_SEALBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h	128;"	d
crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h	23;"	d
crypto_box_curve25519xchacha20poly1305_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xchacha20poly1305.h	15;"	d
crypto_box_curve25519xchacha20poly1305_beforenm	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_beforenm(unsigned char *k,$/;"	f
crypto_box_curve25519xchacha20poly1305_beforenmbytes	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_beforenmbytes(void)$/;"	f
crypto_box_curve25519xchacha20poly1305_detached	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_detached($/;"	f
crypto_box_curve25519xchacha20poly1305_detached_afternm	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_detached_afternm($/;"	f
crypto_box_curve25519xchacha20poly1305_easy	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_easy($/;"	f
crypto_box_curve25519xchacha20poly1305_easy_afternm	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_easy_afternm(unsigned char *c,$/;"	f
crypto_box_curve25519xchacha20poly1305_keypair	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_keypair(unsigned char *pk,$/;"	f
crypto_box_curve25519xchacha20poly1305_macbytes	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_macbytes(void)$/;"	f
crypto_box_curve25519xchacha20poly1305_noncebytes	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_noncebytes(void)$/;"	f
crypto_box_curve25519xchacha20poly1305_open_detached	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_open_detached($/;"	f
crypto_box_curve25519xchacha20poly1305_open_detached_afternm	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_open_detached_afternm($/;"	f
crypto_box_curve25519xchacha20poly1305_open_easy	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_open_easy($/;"	f
crypto_box_curve25519xchacha20poly1305_open_easy_afternm	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_open_easy_afternm($/;"	f
crypto_box_curve25519xchacha20poly1305_publickeybytes	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_publickeybytes(void)$/;"	f
crypto_box_curve25519xchacha20poly1305_seal	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_seal(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_curve25519xchacha20poly1305_seal_open	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_seal_open(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_curve25519xchacha20poly1305_sealbytes	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_sealbytes(void)$/;"	f
crypto_box_curve25519xchacha20poly1305_secretkeybytes	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_secretkeybytes(void)$/;"	f
crypto_box_curve25519xchacha20poly1305_seed_keypair	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_seed_keypair(unsigned char *pk,$/;"	f
crypto_box_curve25519xchacha20poly1305_seedbytes	libsodium/src/libsodium/crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c	/^crypto_box_curve25519xchacha20poly1305_seedbytes(void)$/;"	f
crypto_box_curve25519xsalsa20poly1305	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	26;"	d
crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	38;"	d
crypto_box_curve25519xsalsa20poly1305_H	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	2;"	d
crypto_box_curve25519xsalsa20poly1305_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	34;"	d
crypto_box_curve25519xsalsa20poly1305_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	30;"	d
crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	18;"	d
crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	22;"	d
crypto_box_curve25519xsalsa20poly1305_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	14;"	d
crypto_box_curve25519xsalsa20poly1305_ZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h	42;"	d
crypto_box_curve25519xsalsa20poly1305_afternm	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_afternm(unsigned char *c,$/;"	f
crypto_box_curve25519xsalsa20poly1305_beforenm	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_beforenm(unsigned char *k,$/;"	f
crypto_box_curve25519xsalsa20poly1305_beforenmbytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_beforenmbytes(void)$/;"	f
crypto_box_curve25519xsalsa20poly1305_boxzerobytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_boxzerobytes(void)$/;"	f
crypto_box_curve25519xsalsa20poly1305_keypair	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_keypair(unsigned char *pk,$/;"	f
crypto_box_curve25519xsalsa20poly1305_macbytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_macbytes(void)$/;"	f
crypto_box_curve25519xsalsa20poly1305_noncebytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_noncebytes(void)$/;"	f
crypto_box_curve25519xsalsa20poly1305_open	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_open($/;"	f
crypto_box_curve25519xsalsa20poly1305_open_afternm	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_open_afternm(unsigned char *m,$/;"	f
crypto_box_curve25519xsalsa20poly1305_publickeybytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_publickeybytes(void)$/;"	f
crypto_box_curve25519xsalsa20poly1305_secretkeybytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_secretkeybytes(void)$/;"	f
crypto_box_curve25519xsalsa20poly1305_seed_keypair	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_seed_keypair(unsigned char *pk,$/;"	f
crypto_box_curve25519xsalsa20poly1305_seedbytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_seedbytes(void)$/;"	f
crypto_box_curve25519xsalsa20poly1305_zerobytes	libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c	/^crypto_box_curve25519xsalsa20poly1305_zerobytes(void)$/;"	f
crypto_box_detached	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_detached(unsigned char *c, unsigned char *mac,$/;"	f
crypto_box_detached_afternm	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_detached_afternm(unsigned char *c, unsigned char *mac,$/;"	f
crypto_box_easy	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_easy(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_easy_afternm	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_easy_afternm(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_keypair	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_keypair(unsigned char *pk, unsigned char *sk)$/;"	f
crypto_box_macbytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_macbytes(void)$/;"	f
crypto_box_noncebytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_noncebytes(void)$/;"	f
crypto_box_open	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_open(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_afternm	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_open_afternm(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_detached	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_open_detached(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_detached_afternm	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_open_detached_afternm(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_easy	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_open_easy(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_open_easy_afternm	libsodium/src/libsodium/crypto_box/crypto_box_easy.c	/^crypto_box_open_easy_afternm(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_primitive	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_primitive(void)$/;"	f
crypto_box_publickeybytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_publickeybytes(void)$/;"	f
crypto_box_seal	libsodium/src/libsodium/crypto_box/crypto_box_seal.c	/^crypto_box_seal(unsigned char *c, const unsigned char *m,$/;"	f
crypto_box_seal_open	libsodium/src/libsodium/crypto_box/crypto_box_seal.c	/^crypto_box_seal_open(unsigned char *m, const unsigned char *c,$/;"	f
crypto_box_sealbytes	libsodium/src/libsodium/crypto_box/crypto_box_seal.c	/^crypto_box_sealbytes(void)$/;"	f
crypto_box_secretkeybytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_secretkeybytes(void)$/;"	f
crypto_box_seed_keypair	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_seed_keypair(unsigned char *pk, unsigned char *sk,$/;"	f
crypto_box_seedbytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_seedbytes(void)$/;"	f
crypto_box_zerobytes	libsodium/src/libsodium/crypto_box/crypto_box.c	/^crypto_box_zerobytes(void)$/;"	f
crypto_core_hchacha20	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20(unsigned char *out, const unsigned char *in,$/;"	f
crypto_core_hchacha20_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	23;"	d
crypto_core_hchacha20_H	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	2;"	d
crypto_core_hchacha20_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	15;"	d
crypto_core_hchacha20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	19;"	d
crypto_core_hchacha20_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hchacha20.h	11;"	d
crypto_core_hchacha20_constbytes	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20_constbytes(void)$/;"	f
crypto_core_hchacha20_inputbytes	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20_inputbytes(void)$/;"	f
crypto_core_hchacha20_keybytes	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20_keybytes(void)$/;"	f
crypto_core_hchacha20_outputbytes	libsodium/src/libsodium/crypto_core/hchacha20/core_hchacha20.c	/^crypto_core_hchacha20_outputbytes(void)$/;"	f
crypto_core_hsalsa20	libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c	/^crypto_core_hsalsa20(unsigned char *out,$/;"	f
crypto_core_hsalsa20_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	23;"	d
crypto_core_hsalsa20_H	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	2;"	d
crypto_core_hsalsa20_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	15;"	d
crypto_core_hsalsa20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	19;"	d
crypto_core_hsalsa20_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h	11;"	d
crypto_core_hsalsa20_constbytes	libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20.c	/^crypto_core_hsalsa20_constbytes(void) {$/;"	f
crypto_core_hsalsa20_inputbytes	libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20.c	/^crypto_core_hsalsa20_inputbytes(void) {$/;"	f
crypto_core_hsalsa20_keybytes	libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20.c	/^crypto_core_hsalsa20_keybytes(void) {$/;"	f
crypto_core_hsalsa20_outputbytes	libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20.c	/^crypto_core_hsalsa20_outputbytes(void) {$/;"	f
crypto_core_salsa	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa(unsigned char *out, const unsigned char *in,$/;"	f	file:
crypto_core_salsa20	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa20(unsigned char *out, const unsigned char *in,$/;"	f
crypto_core_salsa2012	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa2012(unsigned char *out, const unsigned char *in,$/;"	f
crypto_core_salsa2012_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	23;"	d
crypto_core_salsa2012_H	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	2;"	d
crypto_core_salsa2012_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	15;"	d
crypto_core_salsa2012_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	19;"	d
crypto_core_salsa2012_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h	11;"	d
crypto_core_salsa2012_constbytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa2012_constbytes(void)$/;"	f
crypto_core_salsa2012_inputbytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa2012_inputbytes(void)$/;"	f
crypto_core_salsa2012_keybytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa2012_keybytes(void)$/;"	f
crypto_core_salsa2012_outputbytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa2012_outputbytes(void)$/;"	f
crypto_core_salsa208	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa208(unsigned char *out, const unsigned char *in,$/;"	f
crypto_core_salsa208_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	23;"	d
crypto_core_salsa208_H	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	2;"	d
crypto_core_salsa208_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	15;"	d
crypto_core_salsa208_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	19;"	d
crypto_core_salsa208_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h	11;"	d
crypto_core_salsa208_constbytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa208_constbytes(void)$/;"	f
crypto_core_salsa208_inputbytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa208_inputbytes(void)$/;"	f
crypto_core_salsa208_keybytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa208_keybytes(void)$/;"	f
crypto_core_salsa208_outputbytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa208_outputbytes(void)$/;"	f
crypto_core_salsa20_CONSTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	23;"	d
crypto_core_salsa20_H	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	2;"	d
crypto_core_salsa20_INPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	15;"	d
crypto_core_salsa20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	19;"	d
crypto_core_salsa20_OUTPUTBYTES	libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h	11;"	d
crypto_core_salsa20_constbytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa20_constbytes(void)$/;"	f
crypto_core_salsa20_inputbytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa20_inputbytes(void)$/;"	f
crypto_core_salsa20_keybytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa20_keybytes(void)$/;"	f
crypto_core_salsa20_outputbytes	libsodium/src/libsodium/crypto_core/salsa/ref/core_salsa_ref.c	/^crypto_core_salsa20_outputbytes(void)$/;"	f
crypto_generichash	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash(unsigned char *out, size_t outlen, const unsigned char *in,$/;"	f
crypto_generichash_BYTES	libsodium/src/libsodium/include/sodium/crypto_generichash.h	24;"	d
crypto_generichash_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_generichash.h	20;"	d
crypto_generichash_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_generichash.h	16;"	d
crypto_generichash_H	libsodium/src/libsodium/include/sodium/crypto_generichash.h	2;"	d
crypto_generichash_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_generichash.h	36;"	d
crypto_generichash_KEYBYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_generichash.h	32;"	d
crypto_generichash_KEYBYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_generichash.h	28;"	d
crypto_generichash_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_generichash.h	40;"	d
crypto_generichash_blake2b	libsodium/src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c	/^crypto_generichash_blake2b(unsigned char *out, size_t outlen,$/;"	f
crypto_generichash_blake2b_BYTES	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	46;"	d
crypto_generichash_blake2b_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	42;"	d
crypto_generichash_blake2b_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	38;"	d
crypto_generichash_blake2b_H	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	2;"	d
crypto_generichash_blake2b_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	58;"	d
crypto_generichash_blake2b_KEYBYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	54;"	d
crypto_generichash_blake2b_KEYBYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	50;"	d
crypto_generichash_blake2b_PERSONALBYTES	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	66;"	d
crypto_generichash_blake2b_SALTBYTES	libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h	62;"	d
crypto_generichash_blake2b_bytes	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_bytes(void) {$/;"	f
crypto_generichash_blake2b_bytes_max	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_bytes_max(void) {$/;"	f
crypto_generichash_blake2b_bytes_min	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_bytes_min(void) {$/;"	f
crypto_generichash_blake2b_final	libsodium/src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_final(crypto_generichash_blake2b_state *state,$/;"	f
crypto_generichash_blake2b_init	libsodium/src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_init(crypto_generichash_blake2b_state *state,$/;"	f
crypto_generichash_blake2b_init_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_init_salt_personal($/;"	f
crypto_generichash_blake2b_keybytes	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_keybytes(void) {$/;"	f
crypto_generichash_blake2b_keybytes_max	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_keybytes_max(void) {$/;"	f
crypto_generichash_blake2b_keybytes_min	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_keybytes_min(void) {$/;"	f
crypto_generichash_blake2b_keygen	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_keygen(unsigned char k[crypto_generichash_blake2b_KEYBYTES])$/;"	f
crypto_generichash_blake2b_personalbytes	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_personalbytes(void) {$/;"	f
crypto_generichash_blake2b_salt_personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_salt_personal($/;"	f
crypto_generichash_blake2b_saltbytes	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_saltbytes(void) {$/;"	f
crypto_generichash_blake2b_statebytes	libsodium/src/libsodium/crypto_generichash/blake2b/generichash_blake2.c	/^crypto_generichash_blake2b_statebytes(void)$/;"	f
crypto_generichash_blake2b_update	libsodium/src/libsodium/crypto_generichash/blake2b/ref/generichash_blake2b.c	/^crypto_generichash_blake2b_update(crypto_generichash_blake2b_state *state,$/;"	f
crypto_generichash_bytes	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_bytes(void)$/;"	f
crypto_generichash_bytes_max	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_bytes_max(void)$/;"	f
crypto_generichash_bytes_min	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_bytes_min(void)$/;"	f
crypto_generichash_final	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_final(crypto_generichash_state *state,$/;"	f
crypto_generichash_init	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_init(crypto_generichash_state *state,$/;"	f
crypto_generichash_keybytes	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_keybytes(void)$/;"	f
crypto_generichash_keybytes_max	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_keybytes_max(void)$/;"	f
crypto_generichash_keybytes_min	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_keybytes_min(void)$/;"	f
crypto_generichash_keygen	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_keygen(unsigned char k[crypto_generichash_KEYBYTES])$/;"	f
crypto_generichash_primitive	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_primitive(void)$/;"	f
crypto_generichash_state	libsodium/src/libsodium/include/sodium/crypto_generichash.h	/^typedef crypto_generichash_blake2b_state crypto_generichash_state;$/;"	t
crypto_generichash_statebytes	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_statebytes(void)$/;"	f
crypto_generichash_update	libsodium/src/libsodium/crypto_generichash/crypto_generichash.c	/^crypto_generichash_update(crypto_generichash_state *state,$/;"	f
crypto_hash	libsodium/src/libsodium/crypto_hash/crypto_hash.c	/^crypto_hash(unsigned char *out, const unsigned char *in,$/;"	f
crypto_hash_BYTES	libsodium/src/libsodium/include/sodium/crypto_hash.h	23;"	d
crypto_hash_H	libsodium/src/libsodium/include/sodium/crypto_hash.h	2;"	d
crypto_hash_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_hash.h	31;"	d
crypto_hash_bytes	libsodium/src/libsodium/crypto_hash/crypto_hash.c	/^crypto_hash_bytes(void)$/;"	f
crypto_hash_primitive	libsodium/src/libsodium/crypto_hash/crypto_hash.c	/^crypto_hash_primitive(void) {$/;"	f
crypto_hash_sha256	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^crypto_hash_sha256(unsigned char *out, const unsigned char *in,$/;"	f
crypto_hash_sha256_BYTES	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	33;"	d
crypto_hash_sha256_H	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	2;"	d
crypto_hash_sha256_bytes	libsodium/src/libsodium/crypto_hash/sha256/hash_sha256.c	/^crypto_hash_sha256_bytes(void)$/;"	f
crypto_hash_sha256_final	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^crypto_hash_sha256_final(crypto_hash_sha256_state *state, unsigned char *out)$/;"	f
crypto_hash_sha256_init	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^crypto_hash_sha256_init(crypto_hash_sha256_state *state)$/;"	f
crypto_hash_sha256_state	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^typedef struct crypto_hash_sha256_state {$/;"	s
crypto_hash_sha256_state	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^} crypto_hash_sha256_state;$/;"	t	typeref:struct:crypto_hash_sha256_state
crypto_hash_sha256_statebytes	libsodium/src/libsodium/crypto_hash/sha256/hash_sha256.c	/^crypto_hash_sha256_statebytes(void)$/;"	f
crypto_hash_sha256_update	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	/^crypto_hash_sha256_update(crypto_hash_sha256_state *state,$/;"	f
crypto_hash_sha512	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^crypto_hash_sha512(unsigned char *out, const unsigned char *in,$/;"	f
crypto_hash_sha512_BYTES	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	33;"	d
crypto_hash_sha512_H	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	2;"	d
crypto_hash_sha512_bytes	libsodium/src/libsodium/crypto_hash/sha512/hash_sha512.c	/^crypto_hash_sha512_bytes(void)$/;"	f
crypto_hash_sha512_final	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^crypto_hash_sha512_final(crypto_hash_sha512_state *state, unsigned char *out)$/;"	f
crypto_hash_sha512_init	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^crypto_hash_sha512_init(crypto_hash_sha512_state *state)$/;"	f
crypto_hash_sha512_state	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^typedef struct crypto_hash_sha512_state {$/;"	s
crypto_hash_sha512_state	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^} crypto_hash_sha512_state;$/;"	t	typeref:struct:crypto_hash_sha512_state
crypto_hash_sha512_statebytes	libsodium/src/libsodium/crypto_hash/sha512/hash_sha512.c	/^crypto_hash_sha512_statebytes(void)$/;"	f
crypto_hash_sha512_update	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	/^crypto_hash_sha512_update(crypto_hash_sha512_state *state,$/;"	f
crypto_kdf_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_kdf.h	21;"	d
crypto_kdf_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_kdf.h	17;"	d
crypto_kdf_CONTEXTBYTES	libsodium/src/libsodium/include/sodium/crypto_kdf.h	25;"	d
crypto_kdf_H	libsodium/src/libsodium/include/sodium/crypto_kdf.h	2;"	d
crypto_kdf_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_kdf.h	29;"	d
crypto_kdf_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_kdf.h	33;"	d
crypto_kdf_blake2b_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_kdf_blake2b.h	21;"	d
crypto_kdf_blake2b_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_kdf_blake2b.h	17;"	d
crypto_kdf_blake2b_CONTEXTBYTES	libsodium/src/libsodium/include/sodium/crypto_kdf_blake2b.h	25;"	d
crypto_kdf_blake2b_H	libsodium/src/libsodium/include/sodium/crypto_kdf_blake2b.h	2;"	d
crypto_kdf_blake2b_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_kdf_blake2b.h	29;"	d
crypto_kdf_blake2b_bytes_max	libsodium/src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c	/^crypto_kdf_blake2b_bytes_max(void)$/;"	f
crypto_kdf_blake2b_bytes_min	libsodium/src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c	/^crypto_kdf_blake2b_bytes_min(void)$/;"	f
crypto_kdf_blake2b_contextbytes	libsodium/src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c	/^crypto_kdf_blake2b_contextbytes(void)$/;"	f
crypto_kdf_blake2b_derive_from_key	libsodium/src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c	/^int crypto_kdf_blake2b_derive_from_key(unsigned char *subkey, size_t subkey_len,$/;"	f
crypto_kdf_blake2b_keybytes	libsodium/src/libsodium/crypto_kdf/blake2b/kdf_blake2b.c	/^crypto_kdf_blake2b_keybytes(void)$/;"	f
crypto_kdf_bytes_max	libsodium/src/libsodium/crypto_kdf/crypto_kdf.c	/^crypto_kdf_bytes_max(void)$/;"	f
crypto_kdf_bytes_min	libsodium/src/libsodium/crypto_kdf/crypto_kdf.c	/^crypto_kdf_bytes_min(void)$/;"	f
crypto_kdf_contextbytes	libsodium/src/libsodium/crypto_kdf/crypto_kdf.c	/^crypto_kdf_contextbytes(void)$/;"	f
crypto_kdf_derive_from_key	libsodium/src/libsodium/crypto_kdf/crypto_kdf.c	/^crypto_kdf_derive_from_key(unsigned char *subkey, size_t subkey_len,$/;"	f
crypto_kdf_keybytes	libsodium/src/libsodium/crypto_kdf/crypto_kdf.c	/^crypto_kdf_keybytes(void)$/;"	f
crypto_kdf_keygen	libsodium/src/libsodium/crypto_kdf/crypto_kdf.c	/^crypto_kdf_keygen(unsigned char k[crypto_kdf_KEYBYTES])$/;"	f
crypto_kdf_primitive	libsodium/src/libsodium/crypto_kdf/crypto_kdf.c	/^crypto_kdf_primitive(void)$/;"	f
crypto_kx_H	libsodium/src/libsodium/include/sodium/crypto_kx.h	2;"	d
crypto_kx_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_kx.h	31;"	d
crypto_kx_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_kx.h	15;"	d
crypto_kx_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_kx.h	19;"	d
crypto_kx_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_kx.h	23;"	d
crypto_kx_SESSIONKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_kx.h	27;"	d
crypto_kx_client_session_keys	libsodium/src/libsodium/crypto_kx/crypto_kx.c	/^crypto_kx_client_session_keys(unsigned char rx[crypto_kx_SESSIONKEYBYTES],$/;"	f
crypto_kx_keypair	libsodium/src/libsodium/crypto_kx/crypto_kx.c	/^crypto_kx_keypair(unsigned char pk[crypto_kx_PUBLICKEYBYTES],$/;"	f
crypto_kx_primitive	libsodium/src/libsodium/crypto_kx/crypto_kx.c	/^crypto_kx_primitive(void)$/;"	f
crypto_kx_publickeybytes	libsodium/src/libsodium/crypto_kx/crypto_kx.c	/^crypto_kx_publickeybytes(void)$/;"	f
crypto_kx_secretkeybytes	libsodium/src/libsodium/crypto_kx/crypto_kx.c	/^crypto_kx_secretkeybytes(void)$/;"	f
crypto_kx_seed_keypair	libsodium/src/libsodium/crypto_kx/crypto_kx.c	/^crypto_kx_seed_keypair(unsigned char pk[crypto_kx_PUBLICKEYBYTES],$/;"	f
crypto_kx_seedbytes	libsodium/src/libsodium/crypto_kx/crypto_kx.c	/^crypto_kx_seedbytes(void)$/;"	f
crypto_kx_server_session_keys	libsodium/src/libsodium/crypto_kx/crypto_kx.c	/^crypto_kx_server_session_keys(unsigned char rx[crypto_kx_SESSIONKEYBYTES],$/;"	f
crypto_kx_sessionkeybytes	libsodium/src/libsodium/crypto_kx/crypto_kx.c	/^crypto_kx_sessionkeybytes(void)$/;"	f
crypto_onetimeauth	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth(unsigned char *out, const unsigned char *in,$/;"	f
crypto_onetimeauth_BYTES	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	21;"	d
crypto_onetimeauth_H	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	2;"	d
crypto_onetimeauth_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	25;"	d
crypto_onetimeauth_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	29;"	d
crypto_onetimeauth_bytes	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_bytes(void)$/;"	f
crypto_onetimeauth_final	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_final(crypto_onetimeauth_state *state,$/;"	f
crypto_onetimeauth_init	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_init(crypto_onetimeauth_state *state,$/;"	f
crypto_onetimeauth_keybytes	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_keybytes(void)$/;"	f
crypto_onetimeauth_keygen	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^void crypto_onetimeauth_keygen(unsigned char k[crypto_onetimeauth_KEYBYTES])$/;"	f
crypto_onetimeauth_poly1305	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305(unsigned char *out, const unsigned char *in,$/;"	f
crypto_onetimeauth_poly1305_BYTES	libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h	26;"	d
crypto_onetimeauth_poly1305_H	libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h	2;"	d
crypto_onetimeauth_poly1305_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h	30;"	d
crypto_onetimeauth_poly1305_bytes	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_bytes(void)$/;"	f
crypto_onetimeauth_poly1305_donna	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna(unsigned char *out, const unsigned char *m,$/;"	f	file:
crypto_onetimeauth_poly1305_donna_final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna_final($/;"	f	file:
crypto_onetimeauth_poly1305_donna_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^    crypto_onetimeauth_poly1305_donna_implementation = {$/;"	v	typeref:struct:crypto_onetimeauth_poly1305_implementation
crypto_onetimeauth_poly1305_donna_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna_init(crypto_onetimeauth_poly1305_state *state,$/;"	f	file:
crypto_onetimeauth_poly1305_donna_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna_update($/;"	f	file:
crypto_onetimeauth_poly1305_donna_verify	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^crypto_onetimeauth_poly1305_donna_verify(const unsigned char *h,$/;"	f	file:
crypto_onetimeauth_poly1305_final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_final(crypto_onetimeauth_poly1305_state *state,$/;"	f
crypto_onetimeauth_poly1305_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^typedef struct crypto_onetimeauth_poly1305_implementation {$/;"	s
crypto_onetimeauth_poly1305_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^} crypto_onetimeauth_poly1305_implementation;$/;"	t	typeref:struct:crypto_onetimeauth_poly1305_implementation
crypto_onetimeauth_poly1305_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_init(crypto_onetimeauth_poly1305_state *state,$/;"	f
crypto_onetimeauth_poly1305_keybytes	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_keybytes(void)$/;"	f
crypto_onetimeauth_poly1305_keygen	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_keygen($/;"	f
crypto_onetimeauth_poly1305_sse2	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2(unsigned char *out, const unsigned char *m,$/;"	f	file:
crypto_onetimeauth_poly1305_sse2_final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2_final(crypto_onetimeauth_poly1305_state *state,$/;"	f	file:
crypto_onetimeauth_poly1305_sse2_implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    crypto_onetimeauth_poly1305_sse2_implementation = {$/;"	v	typeref:struct:crypto_onetimeauth_poly1305_implementation
crypto_onetimeauth_poly1305_sse2_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2_init(crypto_onetimeauth_poly1305_state *state,$/;"	f	file:
crypto_onetimeauth_poly1305_sse2_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2_update($/;"	f	file:
crypto_onetimeauth_poly1305_sse2_verify	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^crypto_onetimeauth_poly1305_sse2_verify(const unsigned char *h,$/;"	f	file:
crypto_onetimeauth_poly1305_statebytes	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_statebytes(void)$/;"	f
crypto_onetimeauth_poly1305_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_update(crypto_onetimeauth_poly1305_state *state,$/;"	f
crypto_onetimeauth_poly1305_verify	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^crypto_onetimeauth_poly1305_verify(const unsigned char *h,$/;"	f
crypto_onetimeauth_primitive	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_primitive(void)$/;"	f
crypto_onetimeauth_state	libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h	/^typedef crypto_onetimeauth_poly1305_state crypto_onetimeauth_state;$/;"	t
crypto_onetimeauth_statebytes	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_statebytes(void)$/;"	f
crypto_onetimeauth_update	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_update(crypto_onetimeauth_state *state,$/;"	f
crypto_onetimeauth_verify	libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c	/^crypto_onetimeauth_verify(const unsigned char *h, const unsigned char *in,$/;"	f
crypto_pwhash	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash(unsigned char * const out, unsigned long long outlen,$/;"	f
crypto_pwhash_ALG_ARGON2I13	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	17;"	d
crypto_pwhash_ALG_ARGON2ID13	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	21;"	d
crypto_pwhash_ALG_DEFAULT	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	25;"	d
crypto_pwhash_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	33;"	d
crypto_pwhash_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	29;"	d
crypto_pwhash_H	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	2;"	d
crypto_pwhash_MEMLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	77;"	d
crypto_pwhash_MEMLIMIT_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	69;"	d
crypto_pwhash_MEMLIMIT_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	65;"	d
crypto_pwhash_MEMLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	85;"	d
crypto_pwhash_MEMLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	93;"	d
crypto_pwhash_OPSLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	73;"	d
crypto_pwhash_OPSLIMIT_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	61;"	d
crypto_pwhash_OPSLIMIT_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	57;"	d
crypto_pwhash_OPSLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	81;"	d
crypto_pwhash_OPSLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	89;"	d
crypto_pwhash_PASSWD_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	41;"	d
crypto_pwhash_PASSWD_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	37;"	d
crypto_pwhash_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	116;"	d
crypto_pwhash_SALTBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	45;"	d
crypto_pwhash_STRBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	49;"	d
crypto_pwhash_STRPREFIX	libsodium/src/libsodium/include/sodium/crypto_pwhash.h	53;"	d
crypto_pwhash_alg_argon2i13	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_alg_argon2i13(void)$/;"	f
crypto_pwhash_alg_argon2id13	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_alg_argon2id13(void)$/;"	f
crypto_pwhash_alg_default	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_alg_default(void)$/;"	f
crypto_pwhash_argon2i	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i(unsigned char *const out, unsigned long long outlen,$/;"	f
crypto_pwhash_argon2i_ALG_ARGON2I13	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	17;"	d
crypto_pwhash_argon2i_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	25;"	d
crypto_pwhash_argon2i_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	21;"	d
crypto_pwhash_argon2i_H	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	2;"	d
crypto_pwhash_argon2i_MEMLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	69;"	d
crypto_pwhash_argon2i_MEMLIMIT_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	61;"	d
crypto_pwhash_argon2i_MEMLIMIT_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	57;"	d
crypto_pwhash_argon2i_MEMLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	77;"	d
crypto_pwhash_argon2i_MEMLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	85;"	d
crypto_pwhash_argon2i_OPSLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	65;"	d
crypto_pwhash_argon2i_OPSLIMIT_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	53;"	d
crypto_pwhash_argon2i_OPSLIMIT_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	49;"	d
crypto_pwhash_argon2i_OPSLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	73;"	d
crypto_pwhash_argon2i_OPSLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	81;"	d
crypto_pwhash_argon2i_PASSWD_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	33;"	d
crypto_pwhash_argon2i_PASSWD_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	29;"	d
crypto_pwhash_argon2i_SALTBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	37;"	d
crypto_pwhash_argon2i_STRBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	41;"	d
crypto_pwhash_argon2i_STRPREFIX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2i.h	45;"	d
crypto_pwhash_argon2i_alg_argon2i13	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_alg_argon2i13(void)$/;"	f
crypto_pwhash_argon2i_bytes_max	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_bytes_max(void)$/;"	f
crypto_pwhash_argon2i_bytes_min	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_bytes_min(void)$/;"	f
crypto_pwhash_argon2i_memlimit_interactive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_memlimit_interactive(void)$/;"	f
crypto_pwhash_argon2i_memlimit_max	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_memlimit_max(void)$/;"	f
crypto_pwhash_argon2i_memlimit_min	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_memlimit_min(void)$/;"	f
crypto_pwhash_argon2i_memlimit_moderate	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_memlimit_moderate(void)$/;"	f
crypto_pwhash_argon2i_memlimit_sensitive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_memlimit_sensitive(void)$/;"	f
crypto_pwhash_argon2i_opslimit_interactive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_opslimit_interactive(void)$/;"	f
crypto_pwhash_argon2i_opslimit_max	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_opslimit_max(void)$/;"	f
crypto_pwhash_argon2i_opslimit_min	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_opslimit_min(void)$/;"	f
crypto_pwhash_argon2i_opslimit_moderate	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_opslimit_moderate(void)$/;"	f
crypto_pwhash_argon2i_opslimit_sensitive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_opslimit_sensitive(void)$/;"	f
crypto_pwhash_argon2i_passwd_max	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_passwd_max(void)$/;"	f
crypto_pwhash_argon2i_passwd_min	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_passwd_min(void)$/;"	f
crypto_pwhash_argon2i_saltbytes	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_saltbytes(void)$/;"	f
crypto_pwhash_argon2i_str	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_str(char out[crypto_pwhash_argon2i_STRBYTES],$/;"	f
crypto_pwhash_argon2i_str_verify	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_str_verify(const char str[crypto_pwhash_argon2i_STRBYTES],$/;"	f
crypto_pwhash_argon2i_strbytes	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_strbytes(void)$/;"	f
crypto_pwhash_argon2i_strprefix	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2i.c	/^crypto_pwhash_argon2i_strprefix(void)$/;"	f
crypto_pwhash_argon2id	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id(unsigned char *const out, unsigned long long outlen,$/;"	f
crypto_pwhash_argon2id_ALG_ARGON2ID13	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	17;"	d
crypto_pwhash_argon2id_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	25;"	d
crypto_pwhash_argon2id_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	21;"	d
crypto_pwhash_argon2id_H	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	2;"	d
crypto_pwhash_argon2id_MEMLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	69;"	d
crypto_pwhash_argon2id_MEMLIMIT_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	61;"	d
crypto_pwhash_argon2id_MEMLIMIT_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	57;"	d
crypto_pwhash_argon2id_MEMLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	77;"	d
crypto_pwhash_argon2id_MEMLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	85;"	d
crypto_pwhash_argon2id_OPSLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	65;"	d
crypto_pwhash_argon2id_OPSLIMIT_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	53;"	d
crypto_pwhash_argon2id_OPSLIMIT_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	49;"	d
crypto_pwhash_argon2id_OPSLIMIT_MODERATE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	73;"	d
crypto_pwhash_argon2id_OPSLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	81;"	d
crypto_pwhash_argon2id_PASSWD_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	33;"	d
crypto_pwhash_argon2id_PASSWD_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	29;"	d
crypto_pwhash_argon2id_SALTBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	37;"	d
crypto_pwhash_argon2id_STRBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	41;"	d
crypto_pwhash_argon2id_STRPREFIX	libsodium/src/libsodium/include/sodium/crypto_pwhash_argon2id.h	45;"	d
crypto_pwhash_argon2id_alg_argon2id13	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_alg_argon2id13(void)$/;"	f
crypto_pwhash_argon2id_bytes_max	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_bytes_max(void)$/;"	f
crypto_pwhash_argon2id_bytes_min	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_bytes_min(void)$/;"	f
crypto_pwhash_argon2id_memlimit_interactive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_memlimit_interactive(void)$/;"	f
crypto_pwhash_argon2id_memlimit_max	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_memlimit_max(void)$/;"	f
crypto_pwhash_argon2id_memlimit_min	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_memlimit_min(void)$/;"	f
crypto_pwhash_argon2id_memlimit_moderate	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_memlimit_moderate(void)$/;"	f
crypto_pwhash_argon2id_memlimit_sensitive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_memlimit_sensitive(void)$/;"	f
crypto_pwhash_argon2id_opslimit_interactive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_opslimit_interactive(void)$/;"	f
crypto_pwhash_argon2id_opslimit_max	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_opslimit_max(void)$/;"	f
crypto_pwhash_argon2id_opslimit_min	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_opslimit_min(void)$/;"	f
crypto_pwhash_argon2id_opslimit_moderate	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_opslimit_moderate(void)$/;"	f
crypto_pwhash_argon2id_opslimit_sensitive	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_opslimit_sensitive(void)$/;"	f
crypto_pwhash_argon2id_passwd_max	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_passwd_max(void)$/;"	f
crypto_pwhash_argon2id_passwd_min	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_passwd_min(void)$/;"	f
crypto_pwhash_argon2id_saltbytes	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_saltbytes(void)$/;"	f
crypto_pwhash_argon2id_str	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_str(char out[crypto_pwhash_argon2id_STRBYTES],$/;"	f
crypto_pwhash_argon2id_str_verify	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_str_verify(const char str[crypto_pwhash_argon2id_STRBYTES],$/;"	f
crypto_pwhash_argon2id_strbytes	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_strbytes(void)$/;"	f
crypto_pwhash_argon2id_strprefix	libsodium/src/libsodium/crypto_pwhash/argon2/pwhash_argon2id.c	/^crypto_pwhash_argon2id_strprefix(void)$/;"	f
crypto_pwhash_bytes_max	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_bytes_max(void)$/;"	f
crypto_pwhash_bytes_min	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_bytes_min(void)$/;"	f
crypto_pwhash_memlimit_interactive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_memlimit_interactive(void)$/;"	f
crypto_pwhash_memlimit_max	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_memlimit_max(void)$/;"	f
crypto_pwhash_memlimit_min	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_memlimit_min(void)$/;"	f
crypto_pwhash_memlimit_moderate	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_memlimit_moderate(void)$/;"	f
crypto_pwhash_memlimit_sensitive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_memlimit_sensitive(void)$/;"	f
crypto_pwhash_opslimit_interactive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_opslimit_interactive(void)$/;"	f
crypto_pwhash_opslimit_max	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_opslimit_max(void)$/;"	f
crypto_pwhash_opslimit_min	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_opslimit_min(void)$/;"	f
crypto_pwhash_opslimit_moderate	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_opslimit_moderate(void)$/;"	f
crypto_pwhash_opslimit_sensitive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_opslimit_sensitive(void)$/;"	f
crypto_pwhash_passwd_max	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_passwd_max(void)$/;"	f
crypto_pwhash_passwd_min	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_passwd_min(void)$/;"	f
crypto_pwhash_primitive	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_primitive(void) {$/;"	f
crypto_pwhash_saltbytes	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_saltbytes(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256(unsigned char *const       out,$/;"	f
crypto_pwhash_scryptsalsa208sha256_BYTES_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	21;"	d
crypto_pwhash_scryptsalsa208sha256_BYTES_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	17;"	d
crypto_pwhash_scryptsalsa208sha256_H	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	2;"	d
crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	65;"	d
crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	57;"	d
crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	53;"	d
crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	73;"	d
crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	61;"	d
crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	49;"	d
crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	45;"	d
crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	69;"	d
crypto_pwhash_scryptsalsa208sha256_PASSWD_MAX	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	29;"	d
crypto_pwhash_scryptsalsa208sha256_PASSWD_MIN	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	25;"	d
crypto_pwhash_scryptsalsa208sha256_SALTBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	33;"	d
crypto_pwhash_scryptsalsa208sha256_STRBYTES	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	37;"	d
crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	47;"	d
crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES_ENCODED	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	48;"	d
crypto_pwhash_scryptsalsa208sha256_STRPREFIX	libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h	41;"	d
crypto_pwhash_scryptsalsa208sha256_STRPREFIXBYTES	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	43;"	d
crypto_pwhash_scryptsalsa208sha256_STRSALTBYTES	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	45;"	d
crypto_pwhash_scryptsalsa208sha256_STRSALTBYTES_ENCODED	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	46;"	d
crypto_pwhash_scryptsalsa208sha256_STRSETTINGBYTES	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	44;"	d
crypto_pwhash_scryptsalsa208sha256_bytes_max	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_bytes_max(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_bytes_min	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_bytes_min(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_ll	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^crypto_pwhash_scryptsalsa208sha256_ll(const uint8_t *passwd, size_t passwdlen,$/;"	f
crypto_pwhash_scryptsalsa208sha256_memlimit_interactive	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_memlimit_interactive(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_memlimit_max	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_memlimit_max(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_memlimit_min	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_memlimit_min(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_opslimit_interactive	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_opslimit_interactive(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_opslimit_max	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_opslimit_max(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_opslimit_min	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_opslimit_min(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_passwd_max	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_passwd_max(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_passwd_min	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_passwd_min(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_saltbytes	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_saltbytes(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_str	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_str($/;"	f
crypto_pwhash_scryptsalsa208sha256_str_verify	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_str_verify($/;"	f
crypto_pwhash_scryptsalsa208sha256_strbytes	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_strbytes(void)$/;"	f
crypto_pwhash_scryptsalsa208sha256_strprefix	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^crypto_pwhash_scryptsalsa208sha256_strprefix(void)$/;"	f
crypto_pwhash_str	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_str(char out[crypto_pwhash_STRBYTES],$/;"	f
crypto_pwhash_str_verify	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_str_verify(const char str[crypto_pwhash_STRBYTES],$/;"	f
crypto_pwhash_strbytes	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_strbytes(void)$/;"	f
crypto_pwhash_strprefix	libsodium/src/libsodium/crypto_pwhash/crypto_pwhash.c	/^crypto_pwhash_strprefix(void)$/;"	f
crypto_scalarmult	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult(unsigned char *q, const unsigned char *n,$/;"	f
crypto_scalarmult_BYTES	libsodium/src/libsodium/include/sodium/crypto_scalarmult.h	13;"	d
crypto_scalarmult_H	libsodium/src/libsodium/include/sodium/crypto_scalarmult.h	2;"	d
crypto_scalarmult_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_scalarmult.h	21;"	d
crypto_scalarmult_SCALARBYTES	libsodium/src/libsodium/include/sodium/crypto_scalarmult.h	17;"	d
crypto_scalarmult_base	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult_base(unsigned char *q, const unsigned char *n)$/;"	f
crypto_scalarmult_bytes	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult_bytes(void)$/;"	f
crypto_scalarmult_curve25519	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^crypto_scalarmult_curve25519(unsigned char *q, const unsigned char *n,$/;"	f
crypto_scalarmult_curve25519_BYTES	libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h	12;"	d
crypto_scalarmult_curve25519_H	libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h	2;"	d
crypto_scalarmult_curve25519_SCALARBYTES	libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h	16;"	d
crypto_scalarmult_curve25519_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^crypto_scalarmult_curve25519_base(unsigned char *q, const unsigned char *n)$/;"	f
crypto_scalarmult_curve25519_bytes	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^crypto_scalarmult_curve25519_bytes(void)$/;"	f
crypto_scalarmult_curve25519_donna_c64	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^crypto_scalarmult_curve25519_donna_c64(unsigned char *mypublic,$/;"	f	file:
crypto_scalarmult_curve25519_donna_c64_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^crypto_scalarmult_curve25519_donna_c64_base(unsigned char *q,$/;"	f	file:
crypto_scalarmult_curve25519_donna_c64_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^    crypto_scalarmult_curve25519_donna_c64_implementation = {$/;"	v	typeref:struct:crypto_scalarmult_curve25519_implementation
crypto_scalarmult_curve25519_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	/^typedef struct crypto_scalarmult_curve25519_implementation {$/;"	s
crypto_scalarmult_curve25519_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	/^} crypto_scalarmult_curve25519_implementation;$/;"	t	typeref:struct:crypto_scalarmult_curve25519_implementation
crypto_scalarmult_curve25519_ref10	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^crypto_scalarmult_curve25519_ref10(unsigned char *q,$/;"	f	file:
crypto_scalarmult_curve25519_ref10_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^crypto_scalarmult_curve25519_ref10_base(unsigned char *q,$/;"	f	file:
crypto_scalarmult_curve25519_ref10_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^    crypto_scalarmult_curve25519_ref10_implementation = {$/;"	v	typeref:struct:crypto_scalarmult_curve25519_implementation
crypto_scalarmult_curve25519_sandy2x	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	/^crypto_scalarmult_curve25519_sandy2x(unsigned char *q, const unsigned char *n,$/;"	f	file:
crypto_scalarmult_curve25519_sandy2x_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	/^crypto_scalarmult_curve25519_sandy2x_base(unsigned char *q,$/;"	f	file:
crypto_scalarmult_curve25519_sandy2x_implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	/^crypto_scalarmult_curve25519_sandy2x_implementation = {$/;"	v	typeref:struct:crypto_scalarmult_curve25519_implementation
crypto_scalarmult_curve25519_scalarbytes	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^crypto_scalarmult_curve25519_scalarbytes(void)$/;"	f
crypto_scalarmult_primitive	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult_primitive(void)$/;"	f
crypto_scalarmult_scalarbytes	libsodium/src/libsodium/crypto_scalarmult/crypto_scalarmult.c	/^crypto_scalarmult_scalarbytes(void)$/;"	f
crypto_scrypt_H	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	31;"	d
crypto_secretbox	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox(unsigned char *c, const unsigned char *m,$/;"	f
crypto_secretbox_BOXZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	68;"	d
crypto_secretbox_H	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	2;"	d
crypto_secretbox_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	16;"	d
crypto_secretbox_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	24;"	d
crypto_secretbox_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	20;"	d
crypto_secretbox_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	28;"	d
crypto_secretbox_ZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox.h	64;"	d
crypto_secretbox_boxzerobytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_boxzerobytes(void)$/;"	f
crypto_secretbox_detached	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c	/^crypto_secretbox_detached(unsigned char *c, unsigned char *mac,$/;"	f
crypto_secretbox_easy	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c	/^crypto_secretbox_easy(unsigned char *c, const unsigned char *m,$/;"	f
crypto_secretbox_keybytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_keybytes(void)$/;"	f
crypto_secretbox_keygen	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_keygen(unsigned char k[crypto_secretbox_KEYBYTES])$/;"	f
crypto_secretbox_macbytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_macbytes(void)$/;"	f
crypto_secretbox_noncebytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_noncebytes(void)$/;"	f
crypto_secretbox_open	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_open(unsigned char *m, const unsigned char *c,$/;"	f
crypto_secretbox_open_detached	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c	/^crypto_secretbox_open_detached(unsigned char *m, const unsigned char *c,$/;"	f
crypto_secretbox_open_easy	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c	/^crypto_secretbox_open_easy(unsigned char *m, const unsigned char *c,$/;"	f
crypto_secretbox_primitive	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_primitive(void)$/;"	f
crypto_secretbox_xchacha20poly1305_H	libsodium/src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h	2;"	d
crypto_secretbox_xchacha20poly1305_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h	14;"	d
crypto_secretbox_xchacha20poly1305_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h	22;"	d
crypto_secretbox_xchacha20poly1305_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xchacha20poly1305.h	18;"	d
crypto_secretbox_xchacha20poly1305_ZEROBYTES	libsodium/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c	15;"	d	file:
crypto_secretbox_xchacha20poly1305_detached	libsodium/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c	/^crypto_secretbox_xchacha20poly1305_detached(unsigned char *c,$/;"	f
crypto_secretbox_xchacha20poly1305_easy	libsodium/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c	/^crypto_secretbox_xchacha20poly1305_easy(unsigned char *c,$/;"	f
crypto_secretbox_xchacha20poly1305_keybytes	libsodium/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c	/^crypto_secretbox_xchacha20poly1305_keybytes(void)$/;"	f
crypto_secretbox_xchacha20poly1305_macbytes	libsodium/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c	/^crypto_secretbox_xchacha20poly1305_macbytes(void)$/;"	f
crypto_secretbox_xchacha20poly1305_noncebytes	libsodium/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c	/^crypto_secretbox_xchacha20poly1305_noncebytes(void)$/;"	f
crypto_secretbox_xchacha20poly1305_open_detached	libsodium/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c	/^crypto_secretbox_xchacha20poly1305_open_detached(unsigned char *m,$/;"	f
crypto_secretbox_xchacha20poly1305_open_easy	libsodium/src/libsodium/crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c	/^crypto_secretbox_xchacha20poly1305_open_easy(unsigned char *m,$/;"	f
crypto_secretbox_xsalsa20poly1305	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c	/^crypto_secretbox_xsalsa20poly1305(unsigned char *c, const unsigned char *m,$/;"	f
crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	26;"	d
crypto_secretbox_xsalsa20poly1305_H	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	2;"	d
crypto_secretbox_xsalsa20poly1305_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	14;"	d
crypto_secretbox_xsalsa20poly1305_MACBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	22;"	d
crypto_secretbox_xsalsa20poly1305_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	18;"	d
crypto_secretbox_xsalsa20poly1305_ZEROBYTES	libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h	30;"	d
crypto_secretbox_xsalsa20poly1305_boxzerobytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c	/^crypto_secretbox_xsalsa20poly1305_boxzerobytes(void)$/;"	f
crypto_secretbox_xsalsa20poly1305_keybytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c	/^crypto_secretbox_xsalsa20poly1305_keybytes(void)$/;"	f
crypto_secretbox_xsalsa20poly1305_keygen	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c	/^crypto_secretbox_xsalsa20poly1305_keygen(unsigned char k[crypto_secretbox_xsalsa20poly1305_KEYBYTES])$/;"	f
crypto_secretbox_xsalsa20poly1305_macbytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c	/^crypto_secretbox_xsalsa20poly1305_macbytes(void)$/;"	f
crypto_secretbox_xsalsa20poly1305_noncebytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c	/^crypto_secretbox_xsalsa20poly1305_noncebytes(void)$/;"	f
crypto_secretbox_xsalsa20poly1305_open	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c	/^crypto_secretbox_xsalsa20poly1305_open(unsigned char *m, const unsigned char *c,$/;"	f
crypto_secretbox_xsalsa20poly1305_zerobytes	libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c	/^crypto_secretbox_xsalsa20poly1305_zerobytes(void)$/;"	f
crypto_secretbox_zerobytes	libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c	/^crypto_secretbox_zerobytes(void)$/;"	f
crypto_shorthash	libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c	/^crypto_shorthash(unsigned char *out, const unsigned char *in,$/;"	f
crypto_shorthash_BYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash.h	16;"	d
crypto_shorthash_H	libsodium/src/libsodium/include/sodium/crypto_shorthash.h	2;"	d
crypto_shorthash_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash.h	20;"	d
crypto_shorthash_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_shorthash.h	24;"	d
crypto_shorthash_bytes	libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c	/^crypto_shorthash_bytes(void)$/;"	f
crypto_shorthash_keybytes	libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c	/^crypto_shorthash_keybytes(void)$/;"	f
crypto_shorthash_keygen	libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c	/^crypto_shorthash_keygen(unsigned char k[crypto_shorthash_KEYBYTES])$/;"	f
crypto_shorthash_primitive	libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c	/^crypto_shorthash_primitive(void)$/;"	f
crypto_shorthash_siphash24	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c	/^crypto_shorthash_siphash24(unsigned char *out, const unsigned char *in,$/;"	f
crypto_shorthash_siphash24_BYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h	16;"	d
crypto_shorthash_siphash24_H	libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h	2;"	d
crypto_shorthash_siphash24_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h	20;"	d
crypto_shorthash_siphash24_bytes	libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24.c	/^crypto_shorthash_siphash24_bytes(void) {$/;"	f
crypto_shorthash_siphash24_keybytes	libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24.c	/^crypto_shorthash_siphash24_keybytes(void) {$/;"	f
crypto_shorthash_siphashx24	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c	/^crypto_shorthash_siphashx24(unsigned char *out, const unsigned char *in,$/;"	f
crypto_shorthash_siphashx24_BYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h	31;"	d
crypto_shorthash_siphashx24_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h	35;"	d
crypto_shorthash_siphashx24_bytes	libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphashx24.c	/^crypto_shorthash_siphashx24_bytes(void) {$/;"	f
crypto_shorthash_siphashx24_keybytes	libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphashx24.c	/^crypto_shorthash_siphashx24_keybytes(void) {$/;"	f
crypto_sign	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign(unsigned char *sm, unsigned long long *smlen_p,$/;"	f
crypto_sign_BYTES	libsodium/src/libsodium/include/sodium/crypto_sign.h	28;"	d
crypto_sign_H	libsodium/src/libsodium/include/sodium/crypto_sign.h	2;"	d
crypto_sign_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_sign.h	44;"	d
crypto_sign_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign.h	36;"	d
crypto_sign_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign.h	40;"	d
crypto_sign_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_sign.h	32;"	d
crypto_sign_bytes	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_bytes(void)$/;"	f
crypto_sign_check_S_lt_L	libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c	/^crypto_sign_check_S_lt_L(const unsigned char *S)$/;"	f	file:
crypto_sign_detached	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_detached(unsigned char *sig, unsigned long long *siglen_p,$/;"	f
crypto_sign_ed25519	libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c	/^crypto_sign_ed25519(unsigned char *sm, unsigned long long *smlen_p,$/;"	f
crypto_sign_ed25519_BYTES	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	22;"	d
crypto_sign_ed25519_H	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	2;"	d
crypto_sign_ed25519_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	30;"	d
crypto_sign_ed25519_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	34;"	d
crypto_sign_ed25519_SEEDBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	26;"	d
crypto_sign_ed25519_bytes	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519_bytes(void)$/;"	f
crypto_sign_ed25519_detached	libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c	/^crypto_sign_ed25519_detached(unsigned char *sig, unsigned long long *siglen_p,$/;"	f
crypto_sign_ed25519_keypair	libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c	/^crypto_sign_ed25519_keypair(unsigned char *pk, unsigned char *sk)$/;"	f
crypto_sign_ed25519_open	libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c	/^crypto_sign_ed25519_open(unsigned char *m, unsigned long long *mlen_p,$/;"	f
crypto_sign_ed25519_pk_to_curve25519	libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c	/^crypto_sign_ed25519_pk_to_curve25519(unsigned char *curve25519_pk,$/;"	f
crypto_sign_ed25519_publickeybytes	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519_publickeybytes(void)$/;"	f
crypto_sign_ed25519_secretkeybytes	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519_secretkeybytes(void)$/;"	f
crypto_sign_ed25519_seed_keypair	libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c	/^crypto_sign_ed25519_seed_keypair(unsigned char *pk, unsigned char *sk,$/;"	f
crypto_sign_ed25519_seedbytes	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519_seedbytes(void)$/;"	f
crypto_sign_ed25519_sk_to_curve25519	libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c	/^crypto_sign_ed25519_sk_to_curve25519(unsigned char *curve25519_sk,$/;"	f
crypto_sign_ed25519_sk_to_pk	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519_sk_to_pk(unsigned char *pk, const unsigned char *sk)$/;"	f
crypto_sign_ed25519_sk_to_seed	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519_sk_to_seed(unsigned char *seed, const unsigned char *sk)$/;"	f
crypto_sign_ed25519_verify_detached	libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c	/^crypto_sign_ed25519_verify_detached(const unsigned char *sig,$/;"	f
crypto_sign_ed25519ph_final_create	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519ph_final_create(crypto_sign_ed25519ph_state *state,$/;"	f
crypto_sign_ed25519ph_final_verify	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519ph_final_verify(crypto_sign_ed25519ph_state *state,$/;"	f
crypto_sign_ed25519ph_init	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519ph_init(crypto_sign_ed25519ph_state *state)$/;"	f
crypto_sign_ed25519ph_state	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	/^typedef struct crypto_sign_ed25519ph_state {$/;"	s
crypto_sign_ed25519ph_state	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	/^} crypto_sign_ed25519ph_state;$/;"	t	typeref:struct:crypto_sign_ed25519ph_state
crypto_sign_ed25519ph_statebytes	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519ph_statebytes(void)$/;"	f
crypto_sign_ed25519ph_update	libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519.c	/^crypto_sign_ed25519ph_update(crypto_sign_ed25519ph_state *state,$/;"	f
crypto_sign_edwards25519sha512batch	libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c	/^crypto_sign_edwards25519sha512batch(unsigned char       *sm,$/;"	f
crypto_sign_edwards25519sha512batch_BYTES	libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h	25;"	d
crypto_sign_edwards25519sha512batch_H	libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h	2;"	d
crypto_sign_edwards25519sha512batch_PUBLICKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h	26;"	d
crypto_sign_edwards25519sha512batch_SECRETKEYBYTES	libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h	27;"	d
crypto_sign_edwards25519sha512batch_keypair	libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c	/^crypto_sign_edwards25519sha512batch_keypair(unsigned char *pk,$/;"	f
crypto_sign_edwards25519sha512batch_open	libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c	/^crypto_sign_edwards25519sha512batch_open(unsigned char       *m,$/;"	f
crypto_sign_final_create	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_final_create(crypto_sign_state *state, unsigned char *sig,$/;"	f
crypto_sign_final_verify	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_final_verify(crypto_sign_state *state, unsigned char *sig,$/;"	f
crypto_sign_init	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_init(crypto_sign_state *state)$/;"	f
crypto_sign_keypair	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_keypair(unsigned char *pk, unsigned char *sk)$/;"	f
crypto_sign_open	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_open(unsigned char *m, unsigned long long *mlen_p,$/;"	f
crypto_sign_primitive	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_primitive(void)$/;"	f
crypto_sign_publickeybytes	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_publickeybytes(void)$/;"	f
crypto_sign_secretkeybytes	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_secretkeybytes(void)$/;"	f
crypto_sign_seed_keypair	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_seed_keypair(unsigned char *pk, unsigned char *sk,$/;"	f
crypto_sign_seedbytes	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_seedbytes(void)$/;"	f
crypto_sign_state	libsodium/src/libsodium/include/sodium/crypto_sign.h	/^typedef crypto_sign_ed25519ph_state crypto_sign_state;$/;"	t
crypto_sign_statebytes	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_statebytes(void)$/;"	f
crypto_sign_update	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_update(crypto_sign_state *state, const unsigned char *m,$/;"	f
crypto_sign_verify_detached	libsodium/src/libsodium/crypto_sign/crypto_sign.c	/^crypto_sign_verify_detached(const unsigned char *sig, const unsigned char *m,$/;"	f
crypto_stream	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_H	libsodium/src/libsodium/include/sodium/crypto_stream.h	2;"	d
crypto_stream_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream.h	24;"	d
crypto_stream_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream.h	28;"	d
crypto_stream_PRIMITIVE	libsodium/src/libsodium/include/sodium/crypto_stream.h	32;"	d
crypto_stream_aes128ctr	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/stream_aes128ctr_nacl.c	/^crypto_stream_aes128ctr(unsigned char *out, unsigned long long outlen,$/;"	f
crypto_stream_aes128ctr_BEFORENMBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h	30;"	d
crypto_stream_aes128ctr_H	libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h	2;"	d
crypto_stream_aes128ctr_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h	22;"	d
crypto_stream_aes128ctr_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h	26;"	d
crypto_stream_aes128ctr_afternm	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/afternm_aes128ctr.c	/^crypto_stream_aes128ctr_afternm(unsigned char *out, unsigned long long len,$/;"	f
crypto_stream_aes128ctr_beforenm	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/beforenm_aes128ctr.c	/^crypto_stream_aes128ctr_beforenm(unsigned char *c, const unsigned char *k)$/;"	f
crypto_stream_aes128ctr_beforenmbytes	libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr.c	/^crypto_stream_aes128ctr_beforenmbytes(void)$/;"	f
crypto_stream_aes128ctr_keybytes	libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr.c	/^crypto_stream_aes128ctr_keybytes(void)$/;"	f
crypto_stream_aes128ctr_noncebytes	libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr.c	/^crypto_stream_aes128ctr_noncebytes(void)$/;"	f
crypto_stream_aes128ctr_xor	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/stream_aes128ctr_nacl.c	/^crypto_stream_aes128ctr_xor(unsigned char *out, const unsigned char *in,$/;"	f
crypto_stream_aes128ctr_xor_afternm	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/xor_afternm_aes128ctr.c	/^crypto_stream_aes128ctr_xor_afternm(unsigned char *out, const unsigned char *in,$/;"	f
crypto_stream_chacha20	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_chacha20_H	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	2;"	d
crypto_stream_chacha20_IETF_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	81;"	d
crypto_stream_chacha20_IETF_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	82;"	d
crypto_stream_chacha20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	23;"	d
crypto_stream_chacha20_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	27;"	d
crypto_stream_chacha20_dolbeau_avx2_implementation	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^    crypto_stream_chacha20_dolbeau_avx2_implementation = {$/;"	v	typeref:struct:crypto_stream_chacha20_implementation
crypto_stream_chacha20_dolbeau_ssse3_implementation	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^    crypto_stream_chacha20_dolbeau_ssse3_implementation = {$/;"	v	typeref:struct:crypto_stream_chacha20_implementation
crypto_stream_chacha20_ietf	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_chacha20_ietf_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	53;"	d
crypto_stream_chacha20_ietf_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h	57;"	d
crypto_stream_chacha20_ietf_keybytes	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf_keybytes(void) {$/;"	f
crypto_stream_chacha20_ietf_keygen	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf_keygen(unsigned char k[crypto_stream_chacha20_ietf_KEYBYTES])$/;"	f
crypto_stream_chacha20_ietf_noncebytes	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf_noncebytes(void) {$/;"	f
crypto_stream_chacha20_ietf_xor	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_chacha20_ietf_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_ietf_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_chacha20_implementation	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^typedef struct crypto_stream_chacha20_implementation {$/;"	s
crypto_stream_chacha20_implementation	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^} crypto_stream_chacha20_implementation;$/;"	t	typeref:struct:crypto_stream_chacha20_implementation
crypto_stream_chacha20_keybytes	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_keybytes(void) {$/;"	f
crypto_stream_chacha20_keygen	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_keygen(unsigned char k[crypto_stream_chacha20_KEYBYTES])$/;"	f
crypto_stream_chacha20_noncebytes	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_noncebytes(void) {$/;"	f
crypto_stream_chacha20_ref_implementation	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^    crypto_stream_chacha20_ref_implementation = {$/;"	v	typeref:struct:crypto_stream_chacha20_implementation
crypto_stream_chacha20_xor	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_chacha20_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^crypto_stream_chacha20_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_keybytes	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream_keybytes(void)$/;"	f
crypto_stream_keygen	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream_keygen(unsigned char k[crypto_stream_KEYBYTES])$/;"	f
crypto_stream_noncebytes	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream_noncebytes(void)$/;"	f
crypto_stream_primitive	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream_primitive(void)$/;"	f
crypto_stream_salsa20	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c	/^crypto_stream_salsa20(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_salsa2012	libsodium/src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012_ref.c	/^crypto_stream_salsa2012(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_salsa2012_H	libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h	2;"	d
crypto_stream_salsa2012_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h	22;"	d
crypto_stream_salsa2012_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h	26;"	d
crypto_stream_salsa2012_keybytes	libsodium/src/libsodium/crypto_stream/salsa2012/stream_salsa2012.c	/^crypto_stream_salsa2012_keybytes(void)$/;"	f
crypto_stream_salsa2012_keygen	libsodium/src/libsodium/crypto_stream/salsa2012/stream_salsa2012.c	/^crypto_stream_salsa2012_keygen(unsigned char k[crypto_stream_salsa2012_KEYBYTES])$/;"	f
crypto_stream_salsa2012_noncebytes	libsodium/src/libsodium/crypto_stream/salsa2012/stream_salsa2012.c	/^crypto_stream_salsa2012_noncebytes(void)$/;"	f
crypto_stream_salsa2012_xor	libsodium/src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012_ref.c	/^crypto_stream_salsa2012_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_salsa208	libsodium/src/libsodium/crypto_stream/salsa208/ref/stream_salsa208_ref.c	/^crypto_stream_salsa208(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_salsa208_H	libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h	2;"	d
crypto_stream_salsa208_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h	22;"	d
crypto_stream_salsa208_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h	26;"	d
crypto_stream_salsa208_keybytes	libsodium/src/libsodium/crypto_stream/salsa208/stream_salsa208.c	/^crypto_stream_salsa208_keybytes(void)$/;"	f
crypto_stream_salsa208_keygen	libsodium/src/libsodium/crypto_stream/salsa208/stream_salsa208.c	/^crypto_stream_salsa208_keygen(unsigned char k[crypto_stream_salsa208_KEYBYTES])$/;"	f
crypto_stream_salsa208_noncebytes	libsodium/src/libsodium/crypto_stream/salsa208/stream_salsa208.c	/^crypto_stream_salsa208_noncebytes(void)$/;"	f
crypto_stream_salsa208_xor	libsodium/src/libsodium/crypto_stream/salsa208/ref/stream_salsa208_ref.c	/^crypto_stream_salsa208_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_salsa20_H	libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h	2;"	d
crypto_stream_salsa20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h	23;"	d
crypto_stream_salsa20_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h	27;"	d
crypto_stream_salsa20_implementation	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.h	/^typedef struct crypto_stream_salsa20_implementation {$/;"	s
crypto_stream_salsa20_implementation	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.h	/^} crypto_stream_salsa20_implementation;$/;"	t	typeref:struct:crypto_stream_salsa20_implementation
crypto_stream_salsa20_keybytes	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c	/^crypto_stream_salsa20_keybytes(void)$/;"	f
crypto_stream_salsa20_keygen	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c	/^crypto_stream_salsa20_keygen(unsigned char k[crypto_stream_salsa20_KEYBYTES])$/;"	f
crypto_stream_salsa20_noncebytes	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c	/^crypto_stream_salsa20_noncebytes(void)$/;"	f
crypto_stream_salsa20_ref_implementation	libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c	/^    crypto_stream_salsa20_ref_implementation = {$/;"	v	typeref:struct:crypto_stream_salsa20_implementation
crypto_stream_salsa20_xmm6_implementation	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6.c	/^    crypto_stream_salsa20_xmm6_implementation = {$/;"	v	typeref:struct:crypto_stream_salsa20_implementation
crypto_stream_salsa20_xmm6int_avx2_implementation	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^    crypto_stream_salsa20_xmm6int_avx2_implementation = {$/;"	v	typeref:struct:crypto_stream_salsa20_implementation
crypto_stream_salsa20_xmm6int_sse2_implementation	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^    crypto_stream_salsa20_xmm6int_sse2_implementation = {$/;"	v	typeref:struct:crypto_stream_salsa20_implementation
crypto_stream_salsa20_xor	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c	/^crypto_stream_salsa20_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_salsa20_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c	/^crypto_stream_salsa20_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_xchacha20	libsodium/src/libsodium/crypto_stream/xchacha20/stream_xchacha20.c	/^crypto_stream_xchacha20(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_xchacha20_H	libsodium/src/libsodium/include/sodium/crypto_stream_xchacha20.h	2;"	d
crypto_stream_xchacha20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_xchacha20.h	23;"	d
crypto_stream_xchacha20_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_xchacha20.h	27;"	d
crypto_stream_xchacha20_keybytes	libsodium/src/libsodium/crypto_stream/xchacha20/stream_xchacha20.c	/^crypto_stream_xchacha20_keybytes(void)$/;"	f
crypto_stream_xchacha20_keygen	libsodium/src/libsodium/crypto_stream/xchacha20/stream_xchacha20.c	/^crypto_stream_xchacha20_keygen($/;"	f
crypto_stream_xchacha20_noncebytes	libsodium/src/libsodium/crypto_stream/xchacha20/stream_xchacha20.c	/^crypto_stream_xchacha20_noncebytes(void)$/;"	f
crypto_stream_xchacha20_xor	libsodium/src/libsodium/crypto_stream/xchacha20/stream_xchacha20.c	/^crypto_stream_xchacha20_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_xchacha20_xor_ic	libsodium/src/libsodium/crypto_stream/xchacha20/stream_xchacha20.c	/^crypto_stream_xchacha20_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_xor	libsodium/src/libsodium/crypto_stream/crypto_stream.c	/^crypto_stream_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_xsalsa20	libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20.c	/^crypto_stream_xsalsa20(unsigned char *c, unsigned long long clen,$/;"	f
crypto_stream_xsalsa20_H	libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h	2;"	d
crypto_stream_xsalsa20_KEYBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h	23;"	d
crypto_stream_xsalsa20_NONCEBYTES	libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h	27;"	d
crypto_stream_xsalsa20_keybytes	libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20.c	/^crypto_stream_xsalsa20_keybytes(void)$/;"	f
crypto_stream_xsalsa20_keygen	libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20.c	/^crypto_stream_xsalsa20_keygen(unsigned char k[crypto_stream_xsalsa20_KEYBYTES])$/;"	f
crypto_stream_xsalsa20_noncebytes	libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20.c	/^crypto_stream_xsalsa20_noncebytes(void)$/;"	f
crypto_stream_xsalsa20_xor	libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20.c	/^crypto_stream_xsalsa20_xor(unsigned char *c, const unsigned char *m,$/;"	f
crypto_stream_xsalsa20_xor_ic	libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20.c	/^crypto_stream_xsalsa20_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f
crypto_verify_16	libsodium/src/libsodium/crypto_verify/sodium/verify.c	/^crypto_verify_16(const unsigned char *x, const unsigned char *y)$/;"	f
crypto_verify_16_BYTES	libsodium/src/libsodium/include/sodium/crypto_verify_16.h	11;"	d
crypto_verify_16_H	libsodium/src/libsodium/include/sodium/crypto_verify_16.h	2;"	d
crypto_verify_16_bytes	libsodium/src/libsodium/crypto_verify/sodium/verify.c	/^crypto_verify_16_bytes(void)$/;"	f
crypto_verify_32	libsodium/src/libsodium/crypto_verify/sodium/verify.c	/^crypto_verify_32(const unsigned char *x, const unsigned char *y)$/;"	f
crypto_verify_32_BYTES	libsodium/src/libsodium/include/sodium/crypto_verify_32.h	11;"	d
crypto_verify_32_H	libsodium/src/libsodium/include/sodium/crypto_verify_32.h	2;"	d
crypto_verify_32_bytes	libsodium/src/libsodium/crypto_verify/sodium/verify.c	/^crypto_verify_32_bytes(void)$/;"	f
crypto_verify_64	libsodium/src/libsodium/crypto_verify/sodium/verify.c	/^crypto_verify_64(const unsigned char *x, const unsigned char *y)$/;"	f
crypto_verify_64_BYTES	libsodium/src/libsodium/include/sodium/crypto_verify_64.h	11;"	d
crypto_verify_64_H	libsodium/src/libsodium/include/sodium/crypto_verify_64.h	2;"	d
crypto_verify_64_bytes	libsodium/src/libsodium/crypto_verify/sodium/verify.c	/^crypto_verify_64_bytes(void)$/;"	f
crypto_verify_n	libsodium/src/libsodium/crypto_verify/sodium/verify.c	/^crypto_verify_n(const unsigned char *x_, const unsigned char *y_,$/;"	f	file:
cs	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.hpp	/^    const r1cs_constraint_system<FieldT> cs;$/;"	m	class:libsnark::gadget_from_r1cs
csPathCached	zcash/zcashutil.cpp	/^static CCriticalSection csPathCached;$/;"	v	file:
cs_KeyStore	zcash/keystore.h	/^    mutable CCriticalSection cs_KeyStore;$/;"	m	class:CKeyStore
cs_LoadKeys	zcash/JoinSplit.cpp	/^CCriticalSection cs_LoadKeys;$/;"	m	namespace:libzcash	file:
cs_ParamsIO	zcash/JoinSplit.cpp	/^CCriticalSection cs_ParamsIO;$/;"	m	namespace:libzcash	file:
cs_SpendingKeyStore	zcash/keystore.h	/^    mutable CCriticalSection cs_SpendingKeyStore;$/;"	m	class:CKeyStore
cs_sigcache	zcash/script/sigcache.cpp	/^    boost::shared_mutex cs_sigcache;$/;"	m	class:__anon24::CSignatureCache	file:
cs_to_vars	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.hpp	/^    std::map<size_t, size_t> cs_to_vars;$/;"	m	class:libsnark::gadget_from_r1cs
ctx	zcash/hash.h	/^    CHash256 ctx;$/;"	m	class:CHashWriter
ctx	zcash/secp256k1/src/bench_ecdh.c	/^    secp256k1_context *ctx;$/;"	m	struct:__anon41	file:
ctx	zcash/secp256k1/src/bench_recover.c	/^    secp256k1_context *ctx;$/;"	m	struct:__anon39	file:
ctx	zcash/secp256k1/src/bench_sign.c	/^    secp256k1_context* ctx;$/;"	m	struct:__anon47	file:
ctx	zcash/secp256k1/src/bench_verify.c	/^    secp256k1_context *ctx;$/;"	m	struct:__anon57	file:
ctx	zcash/secp256k1/src/tests.c	/^static secp256k1_context *ctx = NULL;$/;"	v	file:
cumulative_op_counts	libsnark/src/common/profiling.cpp	/^std::map<std::pair<std::string, std::string>, long long> cumulative_op_counts; \/\/ ((msg, data_point), value)$/;"	m	namespace:libsnark	file:
cumulative_times	libsnark/src/common/profiling.cpp	/^std::map<std::string, long long> cumulative_times;$/;"	m	namespace:libsnark	file:
cursor	zcash/IncrementalMerkleTree.hpp	/^    boost::optional<IncrementalMerkleTree<Depth, Hash>> cursor;$/;"	m	class:libzcash::IncrementalWitness
cursor_depth	zcash/IncrementalMerkleTree.hpp	/^    size_t cursor_depth = 0;$/;"	m	class:libzcash::IncrementalWitness
curve25519_donna_c64_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.h	2;"	d
curve25519_ref10_H	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	2;"	d
curve25519_sandy2x_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.h	2;"	d
curve_Fq	zcash/Proof.cpp	/^typedef alt_bn128_pp::Fq_type curve_Fq;$/;"	t	file:
curve_Fq2	zcash/Proof.cpp	/^typedef alt_bn128_pp::Fqe_type curve_Fq2;$/;"	t	file:
curve_Fr	zcash/Proof.cpp	/^typedef alt_bn128_pp::Fp_type curve_Fr;$/;"	t	file:
curve_G1	zcash/Proof.cpp	/^typedef alt_bn128_pp::G1_type curve_G1;$/;"	t	file:
curve_G2	zcash/Proof.cpp	/^typedef alt_bn128_pp::G2_type curve_G2;$/;"	t	file:
curve_GT	zcash/Proof.cpp	/^typedef alt_bn128_pp::GT_type curve_GT;$/;"	t	file:
curve_pp	zcash/Proof.cpp	/^typedef alt_bn128_pp curve_pp;$/;"	t	file:
cyclotomic_exp	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n, modulus> Fp12_2over3over2_model<n,modulus>::cyclotomic_exp(const bigint<m> &exponent) const$/;"	f	class:libsnark::Fp12_2over3over2_model
cyclotomic_squared	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::cyclotomic_squared() const$/;"	f	class:libsnark::Fp12_2over3over2_model
d	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> d;$/;"	m	class:libsnark::sha256_round_function_gadget
d	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const fe d = { -10913610, 13857413, -15372611, 6949391,   114729,$/;"	v	file:
d	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    uint64_t d[8];$/;"	m	union:__anon11
d	zcash/secp256k1/src/scalar_4x64.h	/^    uint64_t d[4];$/;"	m	struct:__anon48
d	zcash/secp256k1/src/scalar_8x32.h	/^    uint32_t d[8];$/;"	m	struct:__anon40
d1	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    FieldT d1, d2, d3;$/;"	m	class:libsnark::qap_witness
d2	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    FieldT d1, d2, d3;$/;"	m	class:libsnark::qap_witness
d2	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const fe d2 = { -21827239, -5839606,  -30745221, 13898782, 229458,$/;"	v	file:
d3	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    FieldT d1, d2, d3;$/;"	m	class:libsnark::qap_witness
damage_array	zcash/secp256k1/src/tests.c	/^static void damage_array(unsigned char *sig, size_t *len) {$/;"	f	file:
data	libsnark/src/algebra/fields/bigint.hpp	/^    mp_limb_t data[n] = {0};$/;"	m	class:libsnark::bigint
data	zcash/Proof.hpp	/^    base_blob<256> data;$/;"	m	class:libzcash::Fq
data	zcash/Proof.hpp	/^    base_blob<512> data;$/;"	m	class:libzcash::Fq2
data	zcash/secp256k1/include/secp256k1.h	/^    unsigned char data[64];$/;"	m	struct:__anon35
data	zcash/secp256k1/include/secp256k1.h	/^    unsigned char data[64];$/;"	m	struct:__anon36
data	zcash/secp256k1/include/secp256k1_recovery.h	/^    unsigned char data[65];$/;"	m	struct:__anon37
data	zcash/secp256k1/src/bench_internal.c	/^    unsigned char data[64];$/;"	m	struct:__anon52	file:
data	zcash/secp256k1/src/num_gmp.h	/^    mp_limb_t data[2*NUM_LIMBS];$/;"	m	struct:__anon38
data	zcash/secp256k1/src/util.h	/^    const void* data;$/;"	m	struct:__anon58
data	zcash/uint256.h	/^    alignas(uint32_t) uint8_t data[WIDTH];$/;"	m	class:base_blob
datadir	Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	demo/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/contrib/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/dist-build/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/msvc-scripts/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/src/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/src/libsodium/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/src/libsodium/include/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/test/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	libsodium/test/default/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	zcash/Makefile	/^datadir = ${datarootdir}$/;"	m
datadir	zcash/secp256k1/Makefile	/^datadir = ${datarootdir}$/;"	m
datarootdir	Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	demo/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/contrib/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/dist-build/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/msvc-scripts/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/src/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/src/libsodium/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/src/libsodium/include/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/test/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	libsodium/test/default/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	zcash/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
datarootdir	zcash/secp256k1/Makefile	/^datarootdir = ${prefix}\/share$/;"	m
dbl	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::dbl() const$/;"	f	class:libsnark::alt_bn128_G1
dbl	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::dbl() const$/;"	f	class:libsnark::alt_bn128_G2
dbl_cnt	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^long long alt_bn128_G1::dbl_cnt = 0;$/;"	m	class:libsnark::alt_bn128_G1	file:
dbl_cnt	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    static long long dbl_cnt;$/;"	m	class:libsnark::alt_bn128_G1
dbl_cnt	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^long long alt_bn128_G2::dbl_cnt = 0;$/;"	m	class:libsnark::alt_bn128_G2	file:
dbl_cnt	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    static long long dbl_cnt;$/;"	m	class:libsnark::alt_bn128_G2
dd_mutex	zcash/sync.cpp	/^static boost::mutex dd_mutex;$/;"	v	file:
deallocate	zcash/support/allocators/secure.h	/^    void deallocate(T* p, std::size_t n)$/;"	f	struct:secure_allocator
deallocate	zcash/support/allocators/zeroafterfree.h	/^    void deallocate(T* p, std::size_t n)$/;"	f	struct:zero_after_free_allocator
debugPrintInitFlag	zcash/zcashutil.cpp	/^static boost::once_flag debugPrintInitFlag = BOOST_ONCE_INIT;$/;"	v	file:
decode64_one	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^decode64_one(uint32_t *dst, uint8_t src)$/;"	f	file:
decode64_uint32	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^decode64_uint32(uint32_t *dst, uint32_t dstbits, const uint8_t *src)$/;"	f	file:
decode_decimal	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^decode_decimal(const char *str, unsigned long *v)$/;"	f	file:
decode_string	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^decode_string(argon2_context *ctx, const char *str, argon2_type type)$/;"	f
decrypt	zcash/Note.cpp	/^NotePlaintext NotePlaintext::decrypt(const ZCNoteDecryption& decryptor,$/;"	f	class:libzcash::NotePlaintext
decrypt	zcash/NoteEncryption.cpp	/^typename NoteDecryption<MLEN>::Plaintext NoteDecryption<MLEN>::decrypt$/;"	f	class:libzcash::NoteDecryption
default_ec_pp	libsnark/src/common/default_types/ec_pp.hpp	/^typedef alt_bn128_pp default_ec_pp;$/;"	t	namespace:libsnark
default_ec_pp	libsnark/src/common/default_types/ec_pp.hpp	/^typedef bn128_pp default_ec_pp;$/;"	t	namespace:libsnark
default_ec_pp	libsnark/src/common/default_types/ec_pp.hpp	/^typedef edwards_pp default_ec_pp;$/;"	t	namespace:libsnark
default_ec_pp	libsnark/src/common/default_types/ec_pp.hpp	/^typedef mnt4_pp default_ec_pp;$/;"	t	namespace:libsnark
default_ec_pp	libsnark/src/common/default_types/ec_pp.hpp	/^typedef mnt6_pp default_ec_pp;$/;"	t	namespace:libsnark
default_error_callback	zcash/secp256k1/src/gen_context.c	/^static const secp256k1_callback default_error_callback = {$/;"	v	file:
default_error_callback	zcash/secp256k1/src/secp256k1.c	/^static const secp256k1_callback default_error_callback = {$/;"	v	file:
default_error_callback_fn	zcash/secp256k1/src/gen_context.c	/^static void default_error_callback_fn(const char* str, void* data) {$/;"	f	file:
default_error_callback_fn	zcash/secp256k1/src/secp256k1.c	/^static void default_error_callback_fn(const char* str, void* data) {$/;"	f	file:
default_illegal_callback	zcash/secp256k1/src/secp256k1.c	/^static const secp256k1_callback default_illegal_callback = {$/;"	v	file:
default_illegal_callback_fn	zcash/secp256k1/src/secp256k1.c	/^static void default_illegal_callback_fn(const char* str, void* data) {$/;"	f	file:
default_r1cs_ppzksnark_pp	libsnark/src/common/default_types/r1cs_ppzksnark_pp.hpp	/^typedef default_ec_pp default_r1cs_ppzksnark_pp;$/;"	t	namespace:libsnark
degree	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^size_t qap_instance<FieldT>::degree() const$/;"	f	class:libsnark::qap_instance
degree	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^size_t qap_instance_evaluation<FieldT>::degree() const$/;"	f	class:libsnark::qap_instance_evaluation
degree	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^size_t qap_witness<FieldT>::degree() const$/;"	f	class:libsnark::qap_witness
degree_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    size_t degree_;$/;"	m	class:libsnark::qap_instance
degree_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    size_t degree_;$/;"	m	class:libsnark::qap_instance_evaluation
degree_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    size_t degree_;$/;"	m	class:libsnark::qap_witness
depcomp	demo/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	libsodium/src/libsodium/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/build-aux\/depcomp$/;"	m
depcomp	libsodium/test/default/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/build-aux\/depcomp$/;"	m
depcomp	zcash/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/depcomp$/;"	m
depcomp	zcash/secp256k1/Makefile	/^depcomp = $(SHELL) $(top_srcdir)\/build-aux\/depcomp$/;"	m
depth	libsnark/src/common/data_structures/merkle_tree.hpp	/^    size_t depth;$/;"	m	class:libsnark::merkle_tree
depth	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t depth;                           \/*  4 *\/$/;"	m	struct:blake2b_param_
deserialize_bit_vector	libsnark/src/common/utils.cpp	/^void deserialize_bit_vector(std::istream &in, bit_vector &v)$/;"	f	namespace:libsnark
detail	zcash/tinyformat.h	/^namespace detail {$/;"	n	namespace:tinyformat
difference_type	zcash/streams.h	/^    typedef typename vector_type::difference_type  difference_type;$/;"	t	class:CBaseDataStream
difference_type	zcash/support/allocators/secure.h	/^    typedef typename base::difference_type difference_type;$/;"	t	struct:secure_allocator
difference_type	zcash/support/allocators/zeroafterfree.h	/^    typedef typename base::difference_type difference_type;$/;"	t	struct:zero_after_free_allocator
digest	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^    def digest(self):$/;"	m	class:sha256
digest_length	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t digest_length;                   \/*  1 *\/$/;"	m	struct:blake2b_param_
digest_selector_gadget	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.hpp	/^class digest_selector_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
digest_selector_gadget	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.tcc	/^digest_selector_gadget<FieldT>::digest_selector_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::digest_selector_gadget
digest_size	libsnark/src/common/data_structures/merkle_tree.hpp	/^    size_t digest_size;$/;"	m	class:libsnark::merkle_tree
digest_size	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.hpp	/^    size_t digest_size;$/;"	m	class:libsnark::digest_selector_gadget
digest_size	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.hpp	/^    size_t digest_size;$/;"	m	class:libsnark::digest_variable
digest_size	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    const size_t digest_size;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
digest_size	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    const size_t digest_size;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
digest_variable	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.hpp	/^class digest_variable : public gadget<FieldT> {$/;"	c	namespace:libsnark
digest_variable	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.tcc	/^digest_variable<FieldT>::digest_variable(protoboard<FieldT> &pb,$/;"	f	class:libsnark::digest_variable
disjunction_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    disjunction_gadget(protoboard<FieldT>& pb,$/;"	f	class:libsnark::disjunction_gadget
disjunction_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class disjunction_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
distcleancheck_listfiles	Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distcleancheck_listfiles	libsodium/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distcleancheck_listfiles	zcash/secp256k1/Makefile	/^distcleancheck_listfiles = find . -type f -print$/;"	m
distdir	Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distdir	libsodium/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distdir	zcash/secp256k1/Makefile	/^distdir = $(PACKAGE)-$(VERSION)$/;"	m
distuninstallcheck_listfiles	Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
distuninstallcheck_listfiles	libsodium/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
distuninstallcheck_listfiles	zcash/secp256k1/Makefile	/^distuninstallcheck_listfiles = find . -type f -print$/;"	m
div_ceil	libsnark/src/common/utils.cpp	/^long long div_ceil(long long x, long long y)$/;"	f	namespace:libsnark
div_qr	libsnark/src/algebra/fields/bigint.tcc	/^inline void bigint<n>::div_qr(bigint<n-d+1>& quotient, bigint<d>& remainder,$/;"	f	class:libsnark::bigint
divide_by_Z_on_coset	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^void basic_radix2_domain<FieldT>::divide_by_Z_on_coset(std::vector<FieldT> &P)$/;"	f	class:libsnark::basic_radix2_domain
do_copy	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination<FieldT> do_copy;$/;"	m	class:libsnark::bit_vector_copy_gadget
do_copy	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination<FieldT> do_copy;$/;"	m	class:libsnark::field_vector_copy_gadget
docdir	Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	demo/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/contrib/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/dist-build/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/msvc-scripts/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/src/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/src/libsodium/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/src/libsodium/include/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/test/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	libsodium/test/default/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	zcash/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
docdir	zcash/secp256k1/Makefile	/^docdir = ${datarootdir}\/doc\/${PACKAGE_TARNAME}$/;"	m
domain	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::shared_ptr<evaluation_domain<FieldT> > domain;$/;"	m	class:libsnark::qap_instance
domain	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    std::shared_ptr<evaluation_domain<FieldT> > domain;$/;"	m	class:libsnark::qap_instance_evaluation
domain_size	libsnark/src/common/data_structures/accumulation_vector.tcc	/^size_t accumulation_vector<T>::domain_size() const$/;"	f	class:libsnark::accumulation_vector
domain_size	libsnark/src/common/data_structures/sparse_vector.tcc	/^size_t sparse_vector<T>::domain_size() const$/;"	f	class:libsnark::sparse_vector
domain_size_	libsnark/src/common/data_structures/sparse_vector.hpp	/^    size_t domain_size_ = 0;$/;"	m	struct:libsnark::sparse_vector
double_miller_loop	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.cpp	/^alt_bn128_Fq12 alt_bn128_pp::double_miller_loop(const alt_bn128_G1_precomp &prec_P1,$/;"	f	class:libsnark::alt_bn128_pp
double_miller_loop_test	libsnark/src/algebra/curves/tests/test_bilinearity.cpp	/^void double_miller_loop_test()$/;"	f
doubling_step_for_flipped_miller_loop	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^void doubling_step_for_flipped_miller_loop(const alt_bn128_Fq two_inv,$/;"	f	namespace:libsnark
dual_variable_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    dual_variable_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::dual_variable_gadget
dual_variable_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class dual_variable_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
dummy	zcash/tinyformat.h	/^        struct fail { char dummy[2]; };$/;"	m	struct:tinyformat::detail::is_convertible::fail
dummy	zcash/tinyformat.h	/^        struct succeed { char dummy; };$/;"	m	struct:tinyformat::detail::is_convertible::succeed
dummyChecker	zcash/script/sign.cpp	/^const DummySignatureChecker dummyChecker;$/;"	m	namespace:__anon15	file:
dummy_verification_key	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^r1cs_ppzksnark_verification_key<ppT> r1cs_ppzksnark_verification_key<ppT>::dummy_verification_key(const size_t input_size)$/;"	f	class:libsnark::r1cs_ppzksnark_verification_key
dump	libsnark/src/common/data_structures/merkle_tree.tcc	/^void merkle_tree<HashT>::dump() const$/;"	f	class:libsnark::merkle_tree
dump_r1cs_constraint	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^void dump_r1cs_constraint(const r1cs_constraint<FieldT> &constraint,$/;"	f	namespace:libsnark
dump_variables	libsnark/src/gadgetlib1/protoboard.tcc	/^void protoboard<FieldT>::dump_variables() const$/;"	f	class:libsnark::protoboard
dvidir	Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	demo/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/contrib/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/dist-build/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/msvc-scripts/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/src/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/src/libsodium/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/src/libsodium/include/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/test/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	libsodium/test/default/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	zcash/Makefile	/^dvidir = ${docdir}$/;"	m
dvidir	zcash/secp256k1/Makefile	/^dvidir = ${docdir}$/;"	m
e	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> e;$/;"	m	class:libsnark::sha256_round_function_gadget
ec_group	zcash/secp256k1/src/bench_verify.c	/^    EC_GROUP* ec_group;$/;"	m	struct:__anon57	file:
ec_privkey_export_der	zcash/key.cpp	/^static int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *key32, int compressed) {$/;"	f	file:
ec_privkey_export_der	zcash/secp256k1/contrib/lax_der_privatekey_parsing.c	/^int ec_privkey_export_der(const secp256k1_context *ctx, unsigned char *privkey, size_t *privkeylen, const unsigned char *key32, int compressed) {$/;"	f
ec_privkey_import_der	zcash/key.cpp	/^static int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *out32, const unsigned char *privkey, size_t privkeylen) {$/;"	f	file:
ec_privkey_import_der	zcash/secp256k1/contrib/lax_der_privatekey_parsing.c	/^int ec_privkey_import_der(const secp256k1_context* ctx, unsigned char *out32, const unsigned char *privkey, size_t privkeylen) {$/;"	f
ec_pubkey_parse_pointtest	zcash/secp256k1/src/tests.c	/^void ec_pubkey_parse_pointtest(const unsigned char *input, int xvalid, int yvalid) {$/;"	f
ecdsa_signature_parse_der_lax	zcash/secp256k1/contrib/lax_der_parsing.c	/^int ecdsa_signature_parse_der_lax(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input, size_t inputlen) {$/;"	f
ecmult_const_chain_multiply	zcash/secp256k1/src/tests.c	/^void ecmult_const_chain_multiply(void) {$/;"	f
ecmult_const_commutativity	zcash/secp256k1/src/tests.c	/^void ecmult_const_commutativity(void) {$/;"	f
ecmult_const_mult_zero_one	zcash/secp256k1/src/tests.c	/^void ecmult_const_mult_zero_one(void) {$/;"	f
ecmult_const_random_mult	zcash/secp256k1/src/tests.c	/^void ecmult_const_random_mult(void) {$/;"	f
ecmult_ctx	zcash/secp256k1/src/secp256k1.c	/^    secp256k1_ecmult_context ecmult_ctx;$/;"	m	struct:secp256k1_context_struct	file:
ecmult_gen_ctx	zcash/secp256k1/src/secp256k1.c	/^    secp256k1_ecmult_gen_context ecmult_gen_ctx;$/;"	m	struct:secp256k1_context_struct	file:
ed25519_convert_DEPENDENCIES	libsodium/test/default/Makefile	/^ed25519_convert_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
ed25519_convert_LDADD	libsodium/test/default/Makefile	/^ed25519_convert_LDADD = $(TESTS_LDADD)$/;"	m
ed25519_convert_OBJECTS	libsodium/test/default/Makefile	/^ed25519_convert_OBJECTS = ed25519_convert.$(OBJEXT)$/;"	m
ed25519_convert_SOURCE	libsodium/test/default/Makefile	/^ed25519_convert_SOURCE = cmptest.h ed25519_convert.c$/;"	m
ed25519_convert_SOURCES	libsodium/test/default/Makefile	/^ed25519_convert_SOURCES = ed25519_convert.c$/;"	m
ed25519_ref10_H	libsodium/src/libsodium/crypto_sign/ed25519/ref10/ed25519_ref10.h	2;"	d
edwards_to_montgomery	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^edwards_to_montgomery(fe montgomeryX, const fe edwardsY, const fe edwardsZ)$/;"	f	file:
eh_HashState	zcash/crypto/equihash.h	/^typedef crypto_generichash_blake2b_state eh_HashState;$/;"	t
eh_index	zcash/crypto/equihash.h	/^typedef uint32_t eh_index;$/;"	t
eh_trunc	zcash/crypto/equihash.h	/^typedef uint8_t eh_trunc;$/;"	t
element	zcash/IncrementalMerkleTree.hpp	/^    Hash element() const {$/;"	f	class:libzcash::IncrementalWitness
ell_0	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^    alt_bn128_Fq2 ell_0;$/;"	m	struct:libsnark::alt_bn128_ate_ell_coeffs
ell_VV	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^    alt_bn128_Fq2 ell_VV;$/;"	m	struct:libsnark::alt_bn128_ate_ell_coeffs
ell_VW	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^    alt_bn128_Fq2 ell_VW;$/;"	m	struct:libsnark::alt_bn128_ate_ell_coeffs
empty	libsnark/src/common/data_structures/sparse_vector.tcc	/^bool sparse_vector<T>::empty() const$/;"	f	class:libsnark::sparse_vector
empty	zcash/streams.h	/^    bool empty() const                               { return vch.size() == nReadPos; }$/;"	f	class:CBaseDataStream
empty_root	zcash/IncrementalMerkleTree.hpp	/^    Hash empty_root(size_t depth) {$/;"	f	class:libzcash::EmptyMerkleRoots
empty_root	zcash/IncrementalMerkleTree.hpp	/^    static Hash empty_root() {$/;"	f	class:libzcash::IncrementalMerkleTree
empty_roots	zcash/IncrementalMerkleTree.hpp	/^    boost::array<Hash, Depth+1> empty_roots;$/;"	m	class:libzcash::EmptyMerkleRoots
emptyroots	zcash/IncrementalMerkleTree.cpp	/^    static EmptyMerkleRoots<Depth, Hash> emptyroots;$/;"	m	class:libzcash::PathFiller	file:
emptyroots	zcash/IncrementalMerkleTree.cpp	/^EmptyMerkleRoots<Depth, Hash> IncrementalMerkleTree<Depth, Hash>::emptyroots;$/;"	m	class:libzcash::IncrementalMerkleTree	file:
emptyroots	zcash/IncrementalMerkleTree.cpp	/^EmptyMerkleRoots<Depth, Hash> PathFiller<Depth, Hash>::emptyroots;$/;"	m	class:libzcash::PathFiller	file:
emptyroots	zcash/IncrementalMerkleTree.hpp	/^    static EmptyMerkleRoots<Depth, Hash> emptyroots;$/;"	m	class:libzcash::IncrementalMerkleTree
enabled	zcash/secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  private static final boolean enabled; \/\/true if the library is loaded$/;"	f	class:Secp256k1Context	file:
encode64	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^encode64(uint8_t *dst, size_t dstlen, const uint8_t *src, size_t srclen)$/;"	f	file:
encode64_uint32	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^encode64_uint32(uint8_t *dst, size_t dstlen, uint32_t src, uint32_t srcbits)$/;"	f	file:
encode_string	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^encode_string(char *dst, size_t dst_len, argon2_context *ctx, argon2_type type)$/;"	f
encoded_IC_query	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    accumulation_vector<G1<ppT> > encoded_IC_query;$/;"	m	class:libsnark::r1cs_ppzksnark_processed_verification_key
encoded_IC_query	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    accumulation_vector<G1<ppT> > encoded_IC_query;$/;"	m	class:libsnark::r1cs_ppzksnark_verification_key
encrypt	zcash/Note.cpp	/^ZCNoteEncryption::Ciphertext NotePlaintext::encrypt(ZCNoteEncryption& encryptor,$/;"	f	class:libzcash::NotePlaintext
encrypt	zcash/NoteEncryption.cpp	/^typename NoteEncryption<MLEN>::Ciphertext NoteEncryption<MLEN>::encrypt$/;"	f	class:libzcash::NoteEncryption
end	libsnark/src/relations/variable.tcc	/^typename std::vector<linear_term<FieldT> >::const_iterator linear_combination<FieldT>::end() const$/;"	f	class:libsnark::linear_combination
end	libsodium/builds/msvc/build/buildbase.bat	/^:end$/;"	l
end	zcash/key.h	/^    const unsigned char* end() const { return vch + size(); }$/;"	f	class:CKey
end	zcash/pubkey.h	/^    const unsigned char* end() const { return vch + size(); }$/;"	f	class:CPubKey
end	zcash/serialize.h	/^    char* end() { return pend; }$/;"	f	class:CFlatData
end	zcash/serialize.h	/^    const char* end() const { return pend; }$/;"	f	class:CFlatData
end	zcash/streams.h	/^    const_iterator end() const                       { return vch.end(); }$/;"	f	class:CBaseDataStream
end	zcash/streams.h	/^    iterator end()                                   { return vch.end(); }$/;"	f	class:CBaseDataStream
end	zcash/uint252.h	/^    const unsigned char* end() const$/;"	f	class:uint252
end	zcash/uint256.h	/^    const unsigned char* end() const$/;"	f	class:base_blob
end	zcash/uint256.h	/^    unsigned char* end()$/;"	f	class:base_blob
end_ptr	zcash/serialize.h	/^inline T* end_ptr(std::vector<T,TAl>& v)$/;"	f
end_ptr	zcash/serialize.h	/^inline const T* end_ptr(const std::vector<T,TAl>& v)$/;"	f
enter_block	libsnark/src/common/profiling.cpp	/^void enter_block(const std::string &msg, const bool indent)$/;"	f	namespace:libsnark
enter_cpu_times	libsnark/src/common/profiling.cpp	/^std::map<std::string, long long> enter_cpu_times;$/;"	m	namespace:libsnark	file:
enter_times	libsnark/src/common/profiling.cpp	/^std::map<std::string, long long> enter_times;$/;"	m	namespace:libsnark	file:
eof	zcash/streams.h	/^    bool eof() const             { return size() == 0; }$/;"	f	class:CBaseDataStream
eof	zcash/streams.h	/^    bool eof() const {$/;"	f	class:CBufferedFile
ephemeralKey	zcash/primitives/transaction.h	/^    uint256 ephemeralKey;$/;"	m	class:JSDescription
epk	zcash/NoteEncryption.hpp	/^    uint256 epk;$/;"	m	class:libzcash::NoteEncryption
equal	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^equal(signed char b, signed char c)$/;"	f	file:
equihash_solution_size	zcash/crypto/equihash.h	/^inline constexpr size_t equihash_solution_size(unsigned int N, unsigned int K) {$/;"	f
erase	zcash/streams.h	/^    iterator erase(iterator first, iterator last)$/;"	f	class:CBaseDataStream
erase	zcash/streams.h	/^    iterator erase(iterator it)$/;"	f	class:CBaseDataStream
error	libsodium/builds/msvc/build/buildbase.bat	/^:error$/;"	l
error	zcash/zcashutil.h	/^static inline bool error(const char* format)$/;"	f
error_callback	zcash/secp256k1/src/secp256k1.c	/^    secp256k1_callback error_callback;$/;"	m	struct:secp256k1_context_struct	file:
escrypt_block_t	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^} escrypt_block_t;$/;"	t	typeref:union:__anon11
escrypt_free_local	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^escrypt_free_local(escrypt_local_t *local)$/;"	f
escrypt_gensalt_r	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^escrypt_gensalt_r(uint32_t N_log2, uint32_t r, uint32_t p, const uint8_t *src,$/;"	f
escrypt_init_local	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^escrypt_init_local(escrypt_local_t *local)$/;"	f
escrypt_kdf_nosse	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^escrypt_kdf_nosse(escrypt_local_t *local, const uint8_t *passwd,$/;"	f
escrypt_kdf_sse	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^escrypt_kdf_sse(escrypt_local_t *local, const uint8_t *passwd, size_t passwdlen,$/;"	f
escrypt_kdf_t	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^typedef int (*escrypt_kdf_t)(escrypt_local_t *__local, const uint8_t *__passwd,$/;"	t
escrypt_local_t	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^typedef escrypt_region_t escrypt_local_t;$/;"	t
escrypt_r	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^escrypt_r(escrypt_local_t *local, const uint8_t *passwd, size_t passwdlen,$/;"	f
escrypt_region_t	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^} escrypt_region_t;$/;"	t	typeref:struct:__anon10
esk	zcash/NoteEncryption.hpp	/^    uint256 esk;$/;"	m	class:libzcash::NoteEncryption
euler	libsnark/src/algebra/fields/fp.hpp	/^    static bigint<n> euler; \/\/ (modulus-1)\/2$/;"	m	class:libsnark::Fp_model
euler	libsnark/src/algebra/fields/fp.hpp	/^bigint<n> Fp_model<n, modulus>::euler;$/;"	m	class:libsnark::Fp_model
euler	libsnark/src/algebra/fields/fp2.hpp	/^    static bigint<2*n> euler; \/\/ (modulus^2-1)\/2$/;"	m	class:libsnark::Fp2_model
euler	libsnark/src/algebra/fields/fp2.hpp	/^bigint<2*n> Fp2_model<n, modulus>::euler;$/;"	m	class:libsnark::Fp2_model
euler	libsnark/src/algebra/fields/fp3.hpp	/^    static bigint<3*n> euler; \/\/ (modulus^3-1)\/2$/;"	m	class:libsnark::Fp3_model
euler	libsnark/src/algebra/fields/fp3.hpp	/^bigint<3*n> Fp3_model<n, modulus>::euler;$/;"	m	class:libsnark::Fp3_model
evaluate	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_linear_combination<FieldT>::evaluate(protoboard<FieldT> &pb) const$/;"	f	class:libsnark::pb_linear_combination
evaluate	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_linear_combination_array<FieldT>::evaluate(protoboard<FieldT> &pb) const$/;"	f	class:libsnark::pb_linear_combination_array
evaluate	libsnark/src/relations/variable.tcc	/^FieldT linear_combination<FieldT>::evaluate(const std::vector<FieldT> &assignment) const$/;"	f	class:libsnark::linear_combination
evaluation_domain	libsnark/src/algebra/evaluation_domain/evaluation_domain.hpp	/^    evaluation_domain(const size_t m) : m(m) {};$/;"	f	class:libsnark::evaluation_domain
evaluation_domain	libsnark/src/algebra/evaluation_domain/evaluation_domain.hpp	/^class evaluation_domain {$/;"	c	namespace:libsnark
event	zcash/support/events.h	/^MAKE_RAII(event);$/;"	v
event_base	zcash/support/events.h	/^MAKE_RAII(event_base);$/;"	v
evhttp	zcash/support/events.h	/^MAKE_RAII(evhttp);$/;"	v
evhttp_connection	zcash/support/events.h	/^MAKE_RAII(evhttp_connection);$/;"	v
evhttp_request	zcash/support/events.h	/^MAKE_RAII(evhttp_request);$/;"	v
exec_prefix	Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	demo/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/contrib/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/dist-build/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/msvc-scripts/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/src/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/src/libsodium/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/src/libsodium/include/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/test/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	libsodium/test/default/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	zcash/Makefile	/^exec_prefix = ${prefix}$/;"	m
exec_prefix	zcash/secp256k1/Makefile	/^exec_prefix = ${prefix}$/;"	m
exhaustive_tests_CPPFLAGS	zcash/secp256k1/Makefile	/^exhaustive_tests_CPPFLAGS =  \\$/;"	m
exhaustive_tests_DEPENDENCIES	zcash/secp256k1/Makefile	/^exhaustive_tests_DEPENDENCIES =  \\$/;"	m
exhaustive_tests_LDADD	zcash/secp256k1/Makefile	/^exhaustive_tests_LDADD = $(SECP_LIBS)$/;"	m
exhaustive_tests_LDFLAGS	zcash/secp256k1/Makefile	/^exhaustive_tests_LDFLAGS = -static$/;"	m
exhaustive_tests_LINK	zcash/secp256k1/Makefile	/^exhaustive_tests_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \\$/;"	m
exhaustive_tests_OBJECTS	zcash/secp256k1/Makefile	/^exhaustive_tests_OBJECTS = $(am_exhaustive_tests_OBJECTS)$/;"	m
exhaustive_tests_SOURCES	zcash/secp256k1/Makefile	/^exhaustive_tests_SOURCES = src\/tests_exhaustive.c$/;"	m
exp2	libsnark/src/common/utils.hpp	/^inline size_t exp2(size_t k) { return 1ul << k; }$/;"	f	namespace:libsnark
expected_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^size_t sha256_two_to_one_hash_gadget<FieldT>::expected_constraints(const bool ensure_output_bitness)$/;"	f	class:libsnark::sha256_two_to_one_hash_gadget
expected_constraints	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.tcc	/^size_t merkle_tree_check_read_gadget<FieldT, HashT>::expected_constraints(const size_t tree_depth)$/;"	f	class:libsnark::merkle_tree_check_read_gadget
expected_constraints	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.tcc	/^size_t merkle_tree_check_update_gadget<FieldT, HashT>::expected_constraints(const size_t tree_depth)$/;"	f	class:libsnark::merkle_tree_check_update_gadget
expose_nullifiers	zcash/circuit/note.tcc	/^    std::shared_ptr<PRF_nf_gadget<FieldT>> expose_nullifiers;$/;"	m	class:input_note_gadget	file:
extension_degree	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    static size_t extension_degree() { return 12; }$/;"	f	class:libsnark::Fp12_2over3over2_model
extension_degree	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    static size_t extension_degree() { return 6; }$/;"	f	class:libsnark::Fp6_3over2_model
extract	zcash/secp256k1/src/scalar_4x64_impl.h	255;"	d
extract	zcash/secp256k1/src/scalar_4x64_impl.h	888;"	d
extract	zcash/secp256k1/src/scalar_8x32_impl.h	334;"	d
extract	zcash/secp256k1/src/scalar_8x32_impl.h	644;"	d
extract_fast	zcash/secp256k1/src/scalar_4x64_impl.h	263;"	d
extract_fast	zcash/secp256k1/src/scalar_4x64_impl.h	889;"	d
extract_fast	zcash/secp256k1/src/scalar_8x32_impl.h	342;"	d
extract_fast	zcash/secp256k1/src/scalar_8x32_impl.h	645;"	d
f	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> f;$/;"	m	class:libsnark::sha256_round_function_gadget
f	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::shared_ptr<sha256_compression_function_gadget<FieldT> > f;$/;"	m	class:libsnark::sha256_two_to_one_hash_gadget
f1	zcash/crypto/ripemd160.cpp	/^uint32_t inline f1(uint32_t x, uint32_t y, uint32_t z) { return x ^ y ^ z; }$/;"	f	namespace:__anon28::ripemd160
f1	zcash/crypto/sha1.cpp	/^uint32_t inline f1(uint32_t b, uint32_t c, uint32_t d) { return d ^ (b & (c ^ d)); }$/;"	f	namespace:__anon30::sha1
f2	zcash/crypto/ripemd160.cpp	/^uint32_t inline f2(uint32_t x, uint32_t y, uint32_t z) { return (x & y) | (~x & z); }$/;"	f	namespace:__anon28::ripemd160
f2	zcash/crypto/sha1.cpp	/^uint32_t inline f2(uint32_t b, uint32_t c, uint32_t d) { return b ^ c ^ d; }$/;"	f	namespace:__anon30::sha1
f3	zcash/crypto/ripemd160.cpp	/^uint32_t inline f3(uint32_t x, uint32_t y, uint32_t z) { return (x | ~y) ^ z; }$/;"	f	namespace:__anon28::ripemd160
f3	zcash/crypto/sha1.cpp	/^uint32_t inline f3(uint32_t b, uint32_t c, uint32_t d) { return (b & c) | (d & (b | c)); }$/;"	f	namespace:__anon30::sha1
f4	zcash/crypto/ripemd160.cpp	/^uint32_t inline f4(uint32_t x, uint32_t y, uint32_t z) { return (x & z) | (y & ~z); }$/;"	f	namespace:__anon28::ripemd160
f5	zcash/crypto/ripemd160.cpp	/^uint32_t inline f5(uint32_t x, uint32_t y, uint32_t z) { return x ^ (y | ~z); }$/;"	f	namespace:__anon28::ripemd160
fAnyoneCanPay	zcash/script/interpreter.cpp	/^    const bool fAnyoneCanPay;  \/\/! whether the hashtype has the SIGHASH_ANYONECANPAY flag set$/;"	m	class:__anon21::CTransactionSignatureSerializer	file:
fBlaMka	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ref.h	/^fBlaMka(uint64_t x, uint64_t y)$/;"	f
fBlaMka	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	/^fBlaMka(__m128i x, __m128i y)$/;"	f
fCoinbaseMustBeProtected	zcash/consensus/params.h	/^    bool fCoinbaseMustBeProtected;$/;"	m	struct:Consensus::Params
fCompressed	zcash/key.h	/^    bool fCompressed;$/;"	m	class:CKey
fDaemon	zcash/zcashutil.cpp	/^bool fDaemon = false;$/;"	v
fDebug	zcash/zcashutil.cpp	/^bool fDebug = false;$/;"	v
fHashNone	zcash/script/interpreter.cpp	/^    const bool fHashNone;      \/\/! whether the hashtype is SIGHASH_NONE$/;"	m	class:__anon21::CTransactionSignatureSerializer	file:
fHashSingle	zcash/script/interpreter.cpp	/^    const bool fHashSingle;    \/\/! whether the hashtype is SIGHASH_SINGLE$/;"	m	class:__anon21::CTransactionSignatureSerializer	file:
fHaveGrant	zcash/sync.h	/^    bool fHaveGrant;$/;"	m	class:CSemaphoreGrant
fLogIPs	zcash/zcashutil.cpp	/^bool fLogIPs = DEFAULT_LOGIPS;$/;"	v
fLogTimeMicros	zcash/zcashutil.cpp	/^bool fLogTimeMicros = DEFAULT_LOGTIMEMICROS;$/;"	v
fLogTimestamps	zcash/zcashutil.cpp	/^bool fLogTimestamps = DEFAULT_LOGTIMESTAMPS;$/;"	v
fPowAllowMinDifficultyBlocks	zcash/consensus/params.h	/^    bool fPowAllowMinDifficultyBlocks;$/;"	m	struct:Consensus::Params
fPrintToConsole	zcash/zcashutil.cpp	/^bool fPrintToConsole = false;$/;"	v
fPrintToDebugLog	zcash/zcashutil.cpp	/^bool fPrintToDebugLog = true;$/;"	v
fServer	zcash/zcashutil.cpp	/^bool fServer = false;$/;"	v
fTry	zcash/sync.cpp	/^    bool fTry;$/;"	m	struct:CLockLocation	file:
fValid	zcash/key.h	/^    bool fValid;$/;"	m	class:CKey
fail	zcash/tinyformat.h	/^        struct fail { char dummy[2]; };$/;"	s	struct:tinyformat::detail::is_convertible
fanout	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t fanout;                          \/*  3 *\/$/;"	m	struct:blake2b_param_
fclose	zcash/streams.h	/^    void fclose()$/;"	f	class:CAutoFile
fclose	zcash/streams.h	/^    void fclose()$/;"	f	class:CBufferedFile
fcontract	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fcontract(u8 *output, const felem input)$/;"	f	file:
fdifference_backwards	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fdifference_backwards(felem out, const felem in)$/;"	f	file:
fe	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h	/^typedef uint64_t fe[10];$/;"	t
fe	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^typedef int32_t fe[10];$/;"	t
fe	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	7;"	d
fe51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h	/^fe51;$/;"	t	typeref:struct:__anon4
fe51	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	4;"	d
fe51_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h	9;"	d
fe51_invert	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c	/^void fe51_invert(fe51 *r, const fe51 *x)$/;"	f
fe51_invert	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	13;"	d
fe51_mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^fe51_mul:$/;"	l
fe51_mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	8;"	d
fe51_namespace_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	2;"	d
fe51_nsquare	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	10;"	d
fe51_nsquare	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^fe51_nsquare:$/;"	l
fe51_pack	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h	6;"	d
fe51_pack	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^fe51_pack:$/;"	l
fe51_square	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c	10;"	d	file:
fe_0	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_0(fe h)$/;"	f
fe_0	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	23;"	d
fe_1	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_1(fe h)$/;"	f
fe_1	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	24;"	d
fe_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h	7;"	d
fe_add	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_add(fe h, const fe f, const fe g)$/;"	f
fe_add	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	26;"	d
fe_cmov	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_cmov(fe f, const fe g, unsigned int b)$/;"	f
fe_cmov	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	25;"	d
fe_copy	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_copy(fe h, const fe f)$/;"	f
fe_copy	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	20;"	d
fe_cswap	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^fe_cswap(fe f, fe g, unsigned int b)$/;"	f	file:
fe_frombytes	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_frombytes(fe h, const unsigned char *s)$/;"	f
fe_frombytes	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h	22;"	d
fe_frombytes	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c	/^void fe_frombytes(fe h,const unsigned char *s)$/;"	f
fe_frombytes	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	18;"	d
fe_invert	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_invert(fe out, const fe z)$/;"	f
fe_invert	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	32;"	d
fe_isnegative	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_isnegative(const fe f)$/;"	f
fe_isnegative	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	22;"	d
fe_isnonzero	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_isnonzero(const fe f)$/;"	f
fe_isnonzero	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	21;"	d
fe_memcmp	zcash/secp256k1/src/tests.c	/^int fe_memcmp(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
fe_mul	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_mul(fe h, const fe f, const fe g)$/;"	f
fe_mul	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	29;"	d
fe_mul121666	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.c	/^fe_mul121666(fe h, const fe f)$/;"	f	file:
fe_neg	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_neg(fe h, const fe f)$/;"	f
fe_neg	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	28;"	d
fe_pow22523	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_pow22523(fe out, const fe z)$/;"	f
fe_pow22523	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	33;"	d
fe_sq	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_sq(fe h, const fe f)$/;"	f
fe_sq	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	30;"	d
fe_sq2	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_sq2(fe h, const fe f)$/;"	f
fe_sq2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	31;"	d
fe_sub	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_sub(fe h, const fe f, const fe g)$/;"	f
fe_sub	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	27;"	d
fe_tobytes	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^fe_tobytes(unsigned char *s, const fe h)$/;"	f
fe_tobytes	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	19;"	d
fe_x	zcash/secp256k1/src/bench_internal.c	/^    secp256k1_fe fe_x, fe_y;$/;"	m	struct:__anon52	file:
fe_y	zcash/secp256k1/src/bench_internal.c	/^    secp256k1_fe fe_x, fe_y;$/;"	m	struct:__anon52	file:
felem	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^typedef limb felem[5];$/;"	t	file:
fexpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fexpand(limb *output, const u8 *in)$/;"	f	file:
field_char	libsnark/src/algebra/fields/fp.hpp	/^    static bigint<n> field_char() { return modulus; }$/;"	f	class:libsnark::Fp_model
field_vector_copy_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class field_vector_copy_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
field_vector_copy_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^field_vector_copy_gadget<FieldT>::field_vector_copy_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::field_vector_copy_gadget
file	zcash/streams.h	/^    FILE* file;	$/;"	m	class:CAutoFile
fileout	zcash/zcashutil.cpp	/^static FILE* fileout = NULL;$/;"	v	file:
fill_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx2.c	/^fill_block(__m256i *state, const uint8_t *ref_block, uint8_t *next_block)$/;"	f	file:
fill_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c	/^fill_block(const block *prev_block, const block *ref_block, block *next_block)$/;"	f	file:
fill_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c	/^fill_block(__m128i *state, const uint8_t *ref_block, uint8_t *next_block)$/;"	f	file:
fill_block_with_xor	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx2.c	/^fill_block_with_xor(__m256i *state, const uint8_t *ref_block,$/;"	f	file:
fill_block_with_xor	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c	/^fill_block_with_xor(const block *prev_block, const block *ref_block,$/;"	f	file:
fill_block_with_xor	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c	/^fill_block_with_xor(__m128i *state, const uint8_t *ref_block,$/;"	f	file:
fill_first_blocks	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^fill_first_blocks(uint8_t *blockhash, const argon2_instance_t *instance)$/;"	f
fill_memory_blocks	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^fill_memory_blocks(argon2_instance_t *instance)$/;"	f
fill_segment	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^static fill_segment_fn fill_segment = fill_segment_ref;$/;"	v	file:
fill_segment_avx2	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx2.c	/^fill_segment_avx2(const argon2_instance_t *instance,$/;"	f
fill_segment_fn	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^typedef int (*fill_segment_fn)(const argon2_instance_t *instance,$/;"	t
fill_segment_ref	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c	/^fill_segment_ref(const argon2_instance_t *instance, argon2_position_t position)$/;"	f
fill_segment_ssse3	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c	/^fill_segment_ssse3(const argon2_instance_t *instance,$/;"	f
fill_with_bits	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_linear_combination_array<FieldT>::fill_with_bits(protoboard<FieldT> &pb, const bit_vector& bits) const$/;"	f	class:libsnark::pb_linear_combination_array
fill_with_bits	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_variable_array<FieldT>::fill_with_bits(protoboard<FieldT> &pb, const bit_vector& bits) const$/;"	f	class:libsnark::pb_variable_array
fill_with_bits_of_field_element	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_linear_combination_array<FieldT>::fill_with_bits_of_field_element(protoboard<FieldT> &pb, const FieldT &r) const$/;"	f	class:libsnark::pb_linear_combination_array
fill_with_bits_of_field_element	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_variable_array<FieldT>::fill_with_bits_of_field_element(protoboard<FieldT> &pb, const FieldT &r) const$/;"	f	class:libsnark::pb_variable_array
fill_with_bits_of_ulong	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_linear_combination_array<FieldT>::fill_with_bits_of_ulong(protoboard<FieldT> &pb, const unsigned long i) const$/;"	f	class:libsnark::pb_linear_combination_array
fill_with_bits_of_ulong	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_variable_array<FieldT>::fill_with_bits_of_ulong(protoboard<FieldT> &pb, const unsigned long i) const$/;"	f	class:libsnark::pb_variable_array
fill_with_field_elements	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_linear_combination_array<FieldT>::fill_with_field_elements(protoboard<FieldT> &pb, const std::vector<FieldT>& vals) const$/;"	f	class:libsnark::pb_linear_combination_array
fill_with_field_elements	libsnark/src/gadgetlib1/pb_variable.tcc	/^void pb_variable_array<FieldT>::fill_with_field_elements(protoboard<FieldT> &pb, const std::vector<FieldT>& vals) const$/;"	f	class:libsnark::pb_variable_array
filled	zcash/IncrementalMerkleTree.hpp	/^    std::vector<Hash> filled;$/;"	m	class:libzcash::IncrementalWitness
final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^    unsigned char      final;$/;"	m	struct:poly1305_state_internal_t
final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^    unsigned char      final;$/;"	m	struct:poly1305_state_internal_t
final_exponentiation	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.cpp	/^alt_bn128_GT alt_bn128_pp::final_exponentiation(const alt_bn128_Fq12 &elt)$/;"	f	class:libsnark::alt_bn128_pp
finalize	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^finalize(const argon2_context *context, argon2_instance_t *instance)$/;"	f
find_wnaf	libsnark/src/algebra/scalar_multiplication/wnaf.tcc	/^std::vector<long> find_wnaf(const size_t window_size, const bigint<n> &scalar)$/;"	f	namespace:libsnark
first	libsnark/src/common/data_structures/accumulation_vector.hpp	/^    T first;$/;"	m	class:libsnark::accumulation_vector
firstkey	libsodium/test/default/core1.c	/^static unsigned char firstkey[32];$/;"	v	file:
firstkey	libsodium/test/default/core2.c	/^static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,$/;"	v	file:
firstkey	libsodium/test/default/secretbox.c	/^static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,$/;"	v	file:
firstkey	libsodium/test/default/secretbox2.c	/^static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,$/;"	v	file:
firstkey	libsodium/test/default/secretbox_easy.c	/^static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,$/;"	v	file:
firstkey	libsodium/test/default/stream.c	/^static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,$/;"	v	file:
firstkey	libsodium/test/default/stream3.c	/^static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,$/;"	v	file:
firstkey	libsodium/test/default/stream4.c	/^static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,$/;"	v	file:
fixed_base_exp_window_table	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^std::vector<size_t> alt_bn128_G1::fixed_base_exp_window_table;$/;"	m	class:libsnark::alt_bn128_G1	file:
fixed_base_exp_window_table	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    static std::vector<size_t> fixed_base_exp_window_table;$/;"	m	class:libsnark::alt_bn128_G1
fixed_base_exp_window_table	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^std::vector<size_t> alt_bn128_G2::fixed_base_exp_window_table;$/;"	m	class:libsnark::alt_bn128_G2	file:
fixed_base_exp_window_table	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    static std::vector<size_t> fixed_base_exp_window_table;$/;"	m	class:libsnark::alt_bn128_G2
fixed_window_wnaf_exp	libsnark/src/algebra/scalar_multiplication/wnaf.tcc	/^T fixed_window_wnaf_exp(const size_t window_size, const T &base, const bigint<n> &scalar)$/;"	f	namespace:libsnark
flags	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint64_t           flags;                       \/*   8 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
flags	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t flags; \/* array of bool options *\/$/;"	m	struct:Argon2_Context
fmonty	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fmonty(limb *x2, limb *z2,         \/* output 2Q *\/$/;"	f	file:
fmul	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fmul(felem output, const felem in2, const felem in)$/;"	f	file:
fn	libsodium/test/default/keygen.c	/^    void (*fn)(unsigned char *k);$/;"	m	struct:KeygenTV_	file:
fn	zcash/secp256k1/src/util.h	/^    void (*fn)(const char *text, void* data);$/;"	m	struct:__anon58
format	zcash/tinyformat.h	/^        void format(std::ostream& out, const char* fmtBegin,$/;"	f	class:tinyformat::detail::FormatArg
format	zcash/tinyformat.h	/^inline std::string format(const char* fmt)$/;"	f	namespace:tinyformat
format	zcash/tinyformat.h	/^inline void format(std::ostream& out, const char* fmt)$/;"	f	namespace:tinyformat
format	zcash/tinyformat.h	/^std::string format(const char* fmt, const Args&... args)$/;"	f	namespace:tinyformat
format	zcash/tinyformat.h	/^std::string format(const std::string &fmt, const Args&... args)$/;"	f	namespace:tinyformat
format	zcash/tinyformat.h	/^void format(std::ostream& out, const char* fmt, const Args&... args)$/;"	f	namespace:tinyformat
formatImpl	zcash/tinyformat.h	/^        TINYFORMAT_HIDDEN static void formatImpl(std::ostream& out, const char* fmtBegin,$/;"	f	class:tinyformat::detail::FormatArg
formatImpl	zcash/tinyformat.h	/^inline void formatImpl(std::ostream& out, const char* fmt,$/;"	f	namespace:tinyformat::detail
formatTruncated	zcash/tinyformat.h	/^inline void formatTruncated(std::ostream& out, const T& value, int ntrunc)$/;"	f	namespace:tinyformat::detail
formatValue	zcash/tinyformat.h	/^inline void formatValue(std::ostream& out, const char* \/*fmtBegin*\/,$/;"	f	namespace:tinyformat
formatValueAsType	zcash/tinyformat.h	/^struct formatValueAsType$/;"	s	namespace:tinyformat::detail
formatValueAsType	zcash/tinyformat.h	/^struct formatValueAsType<T,fmtT,true>$/;"	s	namespace:tinyformat::detail
formatZeroIntegerWorkaround	zcash/tinyformat.h	/^struct formatZeroIntegerWorkaround$/;"	s	namespace:tinyformat::detail
formatZeroIntegerWorkaround	zcash/tinyformat.h	/^struct formatZeroIntegerWorkaround<T,true>$/;"	s	namespace:tinyformat::detail
fp_res	libsodium/test/default/cmptest.h	/^FILE *fp_res;$/;"	v
fq2_to_bigint	zcash/Proof.cpp	/^bigint<8> fq2_to_bigint(const curve_Fq2 &e)$/;"	f	namespace:libzcash
free_memory	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^free_memory(block_region *region)$/;"	f	file:
free_region	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^free_region(escrypt_region_t *region)$/;"	f
freq	libsodium/test/default/randombytes.c	/^static unsigned long long freq[256];$/;"	v	file:
from_base64	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^from_base64(void *dst, size_t *dst_len, const char *src)$/;"	f	file:
from_bits	zcash/circuit/utils.tcc	/^pb_variable_array<FieldT> from_bits(std::vector<bool> bits, pb_variable<FieldT>& ZERO) {$/;"	f
fscalar_product	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fscalar_product(felem output, const felem in, const limb scalar)$/;"	f	file:
fsquare_times	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fsquare_times(felem output, const felem in, limb count)$/;"	f	file:
fsum	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^fsum(limb *output, const limb *in)$/;"	f	file:
full_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination_array<FieldT> full_bits;$/;"	m	class:libsnark::lastbits_gadget
full_variable_assignment	libsnark/src/gadgetlib1/protoboard.tcc	/^r1cs_variable_assignment<FieldT> protoboard<FieldT>::full_variable_assignment() const$/;"	f	class:libsnark::protoboard
func_add_hook	libsodium/build-aux/ltmain.sh	/^func_add_hook ()$/;"	f
func_add_hook	libsodium/libtool	/^func_add_hook ()$/;"	f
func_add_hook	zcash/secp256k1/build-aux/ltmain.sh	/^func_add_hook ()$/;"	f
func_add_hook	zcash/secp256k1/libtool	/^func_add_hook ()$/;"	f
func_append	libsodium/build-aux/ltmain.sh	/^  func_append ()$/;"	f
func_append	libsodium/libtool	/^  func_append ()$/;"	f
func_append	zcash/secp256k1/build-aux/ltmain.sh	/^  func_append ()$/;"	f
func_append	zcash/secp256k1/libtool	/^  func_append ()$/;"	f
func_append_quoted	libsodium/build-aux/ltmain.sh	/^  func_append_quoted ()$/;"	f
func_append_quoted	libsodium/libtool	/^  func_append_quoted ()$/;"	f
func_append_quoted	zcash/secp256k1/build-aux/ltmain.sh	/^  func_append_quoted ()$/;"	f
func_append_quoted	zcash/secp256k1/libtool	/^  func_append_quoted ()$/;"	f
func_append_uniq	libsodium/build-aux/ltmain.sh	/^func_append_uniq ()$/;"	f
func_append_uniq	libsodium/libtool	/^func_append_uniq ()$/;"	f
func_append_uniq	zcash/secp256k1/build-aux/ltmain.sh	/^func_append_uniq ()$/;"	f
func_append_uniq	zcash/secp256k1/libtool	/^func_append_uniq ()$/;"	f
func_arith	libsodium/build-aux/ltmain.sh	/^  func_arith ()$/;"	f
func_arith	libsodium/libtool	/^  func_arith ()$/;"	f
func_arith	zcash/secp256k1/build-aux/ltmain.sh	/^  func_arith ()$/;"	f
func_arith	zcash/secp256k1/libtool	/^  func_arith ()$/;"	f
func_cc_basename	libsodium/config.status	/^func_cc_basename ()$/;"	f
func_cc_basename	libsodium/configure	/^func_cc_basename ()$/;"	f
func_cc_basename	libsodium/libtool	/^func_cc_basename ()$/;"	f
func_cc_basename	zcash/secp256k1/config.status	/^func_cc_basename ()$/;"	f
func_cc_basename	zcash/secp256k1/configure	/^func_cc_basename ()$/;"	f
func_cc_basename	zcash/secp256k1/libtool	/^func_cc_basename ()$/;"	f
func_check_prog_grep	libsodium/build-aux/ltmain.sh	/^  func_check_prog_grep ()$/;"	f
func_check_prog_grep	libsodium/libtool	/^  func_check_prog_grep ()$/;"	f
func_check_prog_grep	zcash/secp256k1/build-aux/ltmain.sh	/^  func_check_prog_grep ()$/;"	f
func_check_prog_grep	zcash/secp256k1/libtool	/^  func_check_prog_grep ()$/;"	f
func_check_prog_sed	libsodium/build-aux/ltmain.sh	/^  func_check_prog_sed ()$/;"	f
func_check_prog_sed	libsodium/libtool	/^  func_check_prog_sed ()$/;"	f
func_check_prog_sed	zcash/secp256k1/build-aux/ltmain.sh	/^  func_check_prog_sed ()$/;"	f
func_check_prog_sed	zcash/secp256k1/libtool	/^  func_check_prog_sed ()$/;"	f
func_check_version_match	libsodium/build-aux/ltmain.sh	/^func_check_version_match ()$/;"	f
func_check_version_match	libsodium/libtool	/^func_check_version_match ()$/;"	f
func_check_version_match	zcash/secp256k1/build-aux/ltmain.sh	/^func_check_version_match ()$/;"	f
func_check_version_match	zcash/secp256k1/libtool	/^func_check_version_match ()$/;"	f
func_cl_dashL	compile	/^func_cl_dashL ()$/;"	f
func_cl_dashL	libsodium/build-aux/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashL	zcash/secp256k1/build-aux/compile	/^func_cl_dashL ()$/;"	f
func_cl_dashl	compile	/^func_cl_dashl ()$/;"	f
func_cl_dashl	libsodium/build-aux/compile	/^func_cl_dashl ()$/;"	f
func_cl_dashl	zcash/secp256k1/build-aux/compile	/^func_cl_dashl ()$/;"	f
func_cl_wrapper	compile	/^func_cl_wrapper ()$/;"	f
func_cl_wrapper	libsodium/build-aux/compile	/^func_cl_wrapper ()$/;"	f
func_cl_wrapper	zcash/secp256k1/build-aux/compile	/^func_cl_wrapper ()$/;"	f
func_config	libsodium/build-aux/ltmain.sh	/^func_config ()$/;"	f
func_config	libsodium/libtool	/^func_config ()$/;"	f
func_config	zcash/secp256k1/build-aux/ltmain.sh	/^func_config ()$/;"	f
func_config	zcash/secp256k1/libtool	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	libsodium/libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_file_wine_to_w32	zcash/secp256k1/libtool	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	libsodium/libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	zcash/secp256k1/libtool	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	libsodium/libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	zcash/secp256k1/libtool	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	libsodium/build-aux/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_check	libsodium/libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_check	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_check	zcash/secp256k1/libtool	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	libsodium/libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_cygwin_to_w32	zcash/secp256k1/libtool	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	libsodium/build-aux/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	libsodium/libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_cygwin	zcash/secp256k1/libtool	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	libsodium/libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_msys_to_w32	zcash/secp256k1/libtool	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	libsodium/build-aux/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	libsodium/libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_cygwin	zcash/secp256k1/libtool	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	libsodium/libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_nix_to_w32	zcash/secp256k1/libtool	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	libsodium/build-aux/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	libsodium/libtool	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_file_noop	zcash/secp256k1/libtool	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	libsodium/build-aux/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_check	libsodium/libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_check	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_check	zcash/secp256k1/libtool	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	libsodium/libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_cygwin_to_w32	zcash/secp256k1/libtool	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	libsodium/build-aux/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	libsodium/libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_front_back_pathsep	zcash/secp256k1/libtool	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	libsodium/build-aux/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	libsodium/libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_cygwin	zcash/secp256k1/libtool	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	libsodium/libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_msys_to_w32	zcash/secp256k1/libtool	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	libsodium/build-aux/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	libsodium/libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_cygwin	zcash/secp256k1/libtool	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	libsodium/build-aux/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	libsodium/libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_nix_to_w32	zcash/secp256k1/libtool	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	libsodium/build-aux/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	libsodium/libtool	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	zcash/secp256k1/build-aux/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_convert_path_noop	zcash/secp256k1/libtool	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	libsodium/build-aux/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	libsodium/libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	zcash/secp256k1/build-aux/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib	zcash/secp256k1/libtool	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	libsodium/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	libsodium/libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	zcash/secp256k1/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback	zcash/secp256k1/libtool	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libsodium/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	libsodium/libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	zcash/secp256k1/build-aux/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_dll_for_implib_fallback_core	zcash/secp256k1/libtool	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	libsodium/build-aux/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	libsodium/libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_gnu_implib_p	zcash/secp256k1/libtool	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	libsodium/build-aux/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	libsodium/libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygming_ms_implib_p	zcash/secp256k1/libtool	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	libsodium/build-aux/ltmain.sh	/^func_cygpath ()$/;"	f
func_cygpath	libsodium/libtool	/^func_cygpath ()$/;"	f
func_cygpath	zcash/secp256k1/build-aux/ltmain.sh	/^func_cygpath ()$/;"	f
func_cygpath	zcash/secp256k1/libtool	/^func_cygpath ()$/;"	f
func_dll_def_p	libsodium/build-aux/ltmain.sh	/^func_dll_def_p ()$/;"	f
func_dll_def_p	libsodium/libtool	/^func_dll_def_p ()$/;"	f
func_dll_def_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_dll_def_p ()$/;"	f
func_dll_def_p	zcash/secp256k1/libtool	/^func_dll_def_p ()$/;"	f
func_echo	libsodium/build-aux/ltmain.sh	/^func_echo ()$/;"	f
func_echo	libsodium/libtool	/^func_echo ()$/;"	f
func_echo	zcash/secp256k1/build-aux/ltmain.sh	/^func_echo ()$/;"	f
func_echo	zcash/secp256k1/libtool	/^func_echo ()$/;"	f
func_echo_all	libsodium/build-aux/ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_all	libsodium/configure	/^func_echo_all ()$/;"	f
func_echo_all	libsodium/libtool	/^func_echo_all ()$/;"	f
func_echo_all	zcash/secp256k1/build-aux/ltmain.sh	/^func_echo_all ()$/;"	f
func_echo_all	zcash/secp256k1/configure	/^func_echo_all ()$/;"	f
func_echo_all	zcash/secp256k1/libtool	/^func_echo_all ()$/;"	f
func_echo_infix_1	libsodium/build-aux/ltmain.sh	/^func_echo_infix_1 ()$/;"	f
func_echo_infix_1	libsodium/libtool	/^func_echo_infix_1 ()$/;"	f
func_echo_infix_1	zcash/secp256k1/build-aux/ltmain.sh	/^func_echo_infix_1 ()$/;"	f
func_echo_infix_1	zcash/secp256k1/libtool	/^func_echo_infix_1 ()$/;"	f
func_emit_cwrapperexe_src	libsodium/build-aux/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	libsodium/libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	zcash/secp256k1/build-aux/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_cwrapperexe_src	zcash/secp256k1/libtool	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	libsodium/build-aux/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	libsodium/libtool	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	zcash/secp256k1/build-aux/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_emit_wrapper	zcash/secp256k1/libtool	/^func_emit_wrapper ()$/;"	f
func_enable_tag	libsodium/build-aux/ltmain.sh	/^func_enable_tag ()$/;"	f
func_enable_tag	libsodium/libtool	/^func_enable_tag ()$/;"	f
func_enable_tag	zcash/secp256k1/build-aux/ltmain.sh	/^func_enable_tag ()$/;"	f
func_enable_tag	zcash/secp256k1/libtool	/^func_enable_tag ()$/;"	f
func_error	libsodium/build-aux/ltmain.sh	/^func_error ()$/;"	f
func_error	libsodium/libtool	/^func_error ()$/;"	f
func_error	zcash/secp256k1/build-aux/ltmain.sh	/^func_error ()$/;"	f
func_error	zcash/secp256k1/libtool	/^func_error ()$/;"	f
func_exec_program	libsodium/build-aux/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program	libsodium/libtool	/^func_exec_program ()$/;"	f
func_exec_program	zcash/secp256k1/build-aux/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program	zcash/secp256k1/libtool	/^func_exec_program ()$/;"	f
func_exec_program_core	libsodium/build-aux/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_exec_program_core	libsodium/libtool	/^func_exec_program_core ()$/;"	f
func_exec_program_core	zcash/secp256k1/build-aux/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_exec_program_core	zcash/secp256k1/libtool	/^func_exec_program_core ()$/;"	f
func_executable_p	libsodium/build-aux/ltmain.sh	/^func_executable_p ()$/;"	f
func_executable_p	libsodium/libtool	/^func_executable_p ()$/;"	f
func_executable_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_executable_p ()$/;"	f
func_executable_p	zcash/secp256k1/libtool	/^func_executable_p ()$/;"	f
func_execute_cmds	libsodium/build-aux/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_execute_cmds	libsodium/libtool	/^func_execute_cmds ()$/;"	f
func_execute_cmds	zcash/secp256k1/build-aux/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_execute_cmds	zcash/secp256k1/libtool	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	libsodium/build-aux/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	libsodium/libtool	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	zcash/secp256k1/build-aux/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_an_archive	zcash/secp256k1/libtool	/^func_extract_an_archive ()$/;"	f
func_extract_archives	libsodium/build-aux/ltmain.sh	/^func_extract_archives ()$/;"	f
func_extract_archives	libsodium/libtool	/^func_extract_archives ()$/;"	f
func_extract_archives	zcash/secp256k1/build-aux/ltmain.sh	/^func_extract_archives ()$/;"	f
func_extract_archives	zcash/secp256k1/libtool	/^func_extract_archives ()$/;"	f
func_fallback_echo	libsodium/build-aux/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libsodium/config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libsodium/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	libsodium/configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	libsodium/libtool	/^func_fallback_echo ()$/;"	f
func_fallback_echo	zcash/secp256k1/build-aux/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fallback_echo	zcash/secp256k1/config.status	/^func_fallback_echo ()$/;"	f
func_fallback_echo	zcash/secp256k1/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	zcash/secp256k1/configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	zcash/secp256k1/libtool	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	libsodium/build-aux/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	libsodium/libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	zcash/secp256k1/build-aux/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_configuration	zcash/secp256k1/libtool	/^func_fatal_configuration ()$/;"	f
func_fatal_error	libsodium/build-aux/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_error	libsodium/libtool	/^func_fatal_error ()$/;"	f
func_fatal_error	zcash/secp256k1/build-aux/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_error	zcash/secp256k1/libtool	/^func_fatal_error ()$/;"	f
func_fatal_help	libsodium/build-aux/ltmain.sh	/^func_fatal_help ()$/;"	f
func_fatal_help	libsodium/libtool	/^func_fatal_help ()$/;"	f
func_fatal_help	zcash/secp256k1/build-aux/ltmain.sh	/^func_fatal_help ()$/;"	f
func_fatal_help	zcash/secp256k1/libtool	/^func_fatal_help ()$/;"	f
func_features	libsodium/build-aux/ltmain.sh	/^func_features ()$/;"	f
func_features	libsodium/libtool	/^func_features ()$/;"	f
func_features	zcash/secp256k1/build-aux/ltmain.sh	/^func_features ()$/;"	f
func_features	zcash/secp256k1/libtool	/^func_features ()$/;"	f
func_file_conv	compile	/^func_file_conv ()$/;"	f
func_file_conv	libsodium/build-aux/compile	/^func_file_conv ()$/;"	f
func_file_conv	zcash/secp256k1/build-aux/compile	/^func_file_conv ()$/;"	f
func_generate_dlsyms	libsodium/build-aux/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	libsodium/libtool	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	zcash/secp256k1/build-aux/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_generate_dlsyms	zcash/secp256k1/libtool	/^func_generate_dlsyms ()$/;"	f
func_generated_by_libtool_p	libsodium/build-aux/ltmain.sh	/^func_generated_by_libtool_p ()$/;"	f
func_generated_by_libtool_p	libsodium/libtool	/^func_generated_by_libtool_p ()$/;"	f
func_generated_by_libtool_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_generated_by_libtool_p ()$/;"	f
func_generated_by_libtool_p	zcash/secp256k1/libtool	/^func_generated_by_libtool_p ()$/;"	f
func_grep	libsodium/build-aux/ltmain.sh	/^func_grep ()$/;"	f
func_grep	libsodium/libtool	/^func_grep ()$/;"	f
func_grep	zcash/secp256k1/build-aux/ltmain.sh	/^func_grep ()$/;"	f
func_grep	zcash/secp256k1/libtool	/^func_grep ()$/;"	f
func_help	libsodium/build-aux/ltmain.sh	/^func_help ()$/;"	f
func_help	libsodium/libtool	/^func_help ()$/;"	f
func_help	zcash/secp256k1/build-aux/ltmain.sh	/^func_help ()$/;"	f
func_help	zcash/secp256k1/libtool	/^func_help ()$/;"	f
func_hookable	libsodium/build-aux/ltmain.sh	/^func_hookable ()$/;"	f
func_hookable	libsodium/libtool	/^func_hookable ()$/;"	f
func_hookable	zcash/secp256k1/build-aux/ltmain.sh	/^func_hookable ()$/;"	f
func_hookable	zcash/secp256k1/libtool	/^func_hookable ()$/;"	f
func_infer_tag	libsodium/build-aux/ltmain.sh	/^func_infer_tag ()$/;"	f
func_infer_tag	libsodium/libtool	/^func_infer_tag ()$/;"	f
func_infer_tag	zcash/secp256k1/build-aux/ltmain.sh	/^func_infer_tag ()$/;"	f
func_infer_tag	zcash/secp256k1/libtool	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	libsodium/build-aux/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	libsodium/libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	zcash/secp256k1/build-aux/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_init_to_host_path_cmd	zcash/secp256k1/libtool	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	libsodium/build-aux/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_p	libsodium/libtool	/^func_lalib_p ()$/;"	f
func_lalib_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_p	zcash/secp256k1/libtool	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	libsodium/build-aux/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	libsodium/libtool	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_lalib_unsafe_p	zcash/secp256k1/libtool	/^func_lalib_unsafe_p ()$/;"	f
func_len	libsodium/build-aux/ltmain.sh	/^  func_len ()$/;"	f
func_len	libsodium/libtool	/^  func_len ()$/;"	f
func_len	zcash/secp256k1/build-aux/ltmain.sh	/^  func_len ()$/;"	f
func_len	zcash/secp256k1/libtool	/^  func_len ()$/;"	f
func_lo2o	libsodium/build-aux/ltmain.sh	/^  func_lo2o ()$/;"	f
func_lo2o	libsodium/libtool	/^  func_lo2o ()$/;"	f
func_lo2o	zcash/secp256k1/build-aux/ltmain.sh	/^  func_lo2o ()$/;"	f
func_lo2o	zcash/secp256k1/libtool	/^  func_lo2o ()$/;"	f
func_lt_dump_args	libsodium/build-aux/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	libsodium/libtool	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	zcash/secp256k1/build-aux/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_lt_dump_args	zcash/secp256k1/libtool	/^func_lt_dump_args ()$/;"	f
func_lt_ver	libsodium/build-aux/ltmain.sh	/^func_lt_ver ()$/;"	f
func_lt_ver	libsodium/libtool	/^func_lt_ver ()$/;"	f
func_lt_ver	zcash/secp256k1/build-aux/ltmain.sh	/^func_lt_ver ()$/;"	f
func_lt_ver	zcash/secp256k1/libtool	/^func_lt_ver ()$/;"	f
func_ltwrapper_executable_p	libsodium/build-aux/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	libsodium/libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_executable_p	zcash/secp256k1/libtool	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	libsodium/build-aux/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	libsodium/libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_p	zcash/secp256k1/libtool	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	libsodium/build-aux/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	libsodium/libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_script_p	zcash/secp256k1/libtool	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	libsodium/build-aux/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	libsodium/libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	zcash/secp256k1/build-aux/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_ltwrapper_scriptname	zcash/secp256k1/libtool	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	libsodium/build-aux/ltmain.sh	/^func_missing_arg ()$/;"	f
func_missing_arg	libsodium/libtool	/^func_missing_arg ()$/;"	f
func_missing_arg	zcash/secp256k1/build-aux/ltmain.sh	/^func_missing_arg ()$/;"	f
func_missing_arg	zcash/secp256k1/libtool	/^func_missing_arg ()$/;"	f
func_mkdir_p	libsodium/build-aux/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mkdir_p	libsodium/libtool	/^func_mkdir_p ()$/;"	f
func_mkdir_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mkdir_p	zcash/secp256k1/libtool	/^func_mkdir_p ()$/;"	f
func_mktempdir	libsodium/build-aux/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mktempdir	libsodium/libtool	/^func_mktempdir ()$/;"	f
func_mktempdir	zcash/secp256k1/build-aux/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mktempdir	zcash/secp256k1/libtool	/^func_mktempdir ()$/;"	f
func_mode_compile	libsodium/build-aux/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_compile	libsodium/libtool	/^func_mode_compile ()$/;"	f
func_mode_compile	zcash/secp256k1/build-aux/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_compile	zcash/secp256k1/libtool	/^func_mode_compile ()$/;"	f
func_mode_execute	libsodium/build-aux/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_execute	libsodium/libtool	/^func_mode_execute ()$/;"	f
func_mode_execute	zcash/secp256k1/build-aux/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_execute	zcash/secp256k1/libtool	/^func_mode_execute ()$/;"	f
func_mode_finish	libsodium/build-aux/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_finish	libsodium/libtool	/^func_mode_finish ()$/;"	f
func_mode_finish	zcash/secp256k1/build-aux/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_finish	zcash/secp256k1/libtool	/^func_mode_finish ()$/;"	f
func_mode_help	libsodium/build-aux/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_help	libsodium/libtool	/^func_mode_help ()$/;"	f
func_mode_help	zcash/secp256k1/build-aux/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_help	zcash/secp256k1/libtool	/^func_mode_help ()$/;"	f
func_mode_install	libsodium/build-aux/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_install	libsodium/libtool	/^func_mode_install ()$/;"	f
func_mode_install	zcash/secp256k1/build-aux/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_install	zcash/secp256k1/libtool	/^func_mode_install ()$/;"	f
func_mode_link	libsodium/build-aux/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_link	libsodium/libtool	/^func_mode_link ()$/;"	f
func_mode_link	zcash/secp256k1/build-aux/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_link	zcash/secp256k1/libtool	/^func_mode_link ()$/;"	f
func_mode_uninstall	libsodium/build-aux/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	libsodium/libtool	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	zcash/secp256k1/build-aux/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_mode_uninstall	zcash/secp256k1/libtool	/^func_mode_uninstall ()$/;"	f
func_munge_path_list	libsodium/config.status	/^func_munge_path_list ()$/;"	f
func_munge_path_list	libsodium/configure	/^func_munge_path_list ()$/;"	f
func_munge_path_list	libsodium/libtool	/^func_munge_path_list ()$/;"	f
func_munge_path_list	zcash/secp256k1/config.status	/^func_munge_path_list ()$/;"	f
func_munge_path_list	zcash/secp256k1/configure	/^func_munge_path_list ()$/;"	f
func_munge_path_list	zcash/secp256k1/libtool	/^func_munge_path_list ()$/;"	f
func_normal_abspath	libsodium/build-aux/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_normal_abspath	libsodium/libtool	/^func_normal_abspath ()$/;"	f
func_normal_abspath	zcash/secp256k1/build-aux/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_normal_abspath	zcash/secp256k1/libtool	/^func_normal_abspath ()$/;"	f
func_notquiet	libsodium/build-aux/ltmain.sh	/^func_notquiet ()$/;"	f
func_notquiet	libsodium/libtool	/^func_notquiet ()$/;"	f
func_notquiet	zcash/secp256k1/build-aux/ltmain.sh	/^func_notquiet ()$/;"	f
func_notquiet	zcash/secp256k1/libtool	/^func_notquiet ()$/;"	f
func_options	libsodium/build-aux/ltmain.sh	/^func_options ()$/;"	f
func_options	libsodium/libtool	/^func_options ()$/;"	f
func_options	zcash/secp256k1/build-aux/ltmain.sh	/^func_options ()$/;"	f
func_options	zcash/secp256k1/libtool	/^func_options ()$/;"	f
func_options_prep	libsodium/build-aux/ltmain.sh	/^func_options_prep ()$/;"	f
func_options_prep	libsodium/libtool	/^func_options_prep ()$/;"	f
func_options_prep	zcash/secp256k1/build-aux/ltmain.sh	/^func_options_prep ()$/;"	f
func_options_prep	zcash/secp256k1/libtool	/^func_options_prep ()$/;"	f
func_parse_lt_options	libsodium/build-aux/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	libsodium/libtool	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	zcash/secp256k1/build-aux/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_parse_lt_options	zcash/secp256k1/libtool	/^func_parse_lt_options ()$/;"	f
func_parse_options	libsodium/build-aux/ltmain.sh	/^func_parse_options ()$/;"	f
func_parse_options	libsodium/libtool	/^func_parse_options ()$/;"	f
func_parse_options	zcash/secp256k1/build-aux/ltmain.sh	/^func_parse_options ()$/;"	f
func_parse_options	zcash/secp256k1/libtool	/^func_parse_options ()$/;"	f
func_path_progs	libsodium/build-aux/ltmain.sh	/^func_path_progs ()$/;"	f
func_path_progs	libsodium/libtool	/^func_path_progs ()$/;"	f
func_path_progs	zcash/secp256k1/build-aux/ltmain.sh	/^func_path_progs ()$/;"	f
func_path_progs	zcash/secp256k1/libtool	/^func_path_progs ()$/;"	f
func_quote_for_eval	libsodium/build-aux/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	libsodium/libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	zcash/secp256k1/build-aux/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_eval	zcash/secp256k1/libtool	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	libsodium/build-aux/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	libsodium/libtool	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	zcash/secp256k1/build-aux/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_quote_for_expand	zcash/secp256k1/libtool	/^func_quote_for_expand ()$/;"	f
func_relative_path	libsodium/build-aux/ltmain.sh	/^func_relative_path ()$/;"	f
func_relative_path	libsodium/libtool	/^func_relative_path ()$/;"	f
func_relative_path	zcash/secp256k1/build-aux/ltmain.sh	/^func_relative_path ()$/;"	f
func_relative_path	zcash/secp256k1/libtool	/^func_relative_path ()$/;"	f
func_remove_hook	libsodium/build-aux/ltmain.sh	/^func_remove_hook ()$/;"	f
func_remove_hook	libsodium/libtool	/^func_remove_hook ()$/;"	f
func_remove_hook	zcash/secp256k1/build-aux/ltmain.sh	/^func_remove_hook ()$/;"	f
func_remove_hook	zcash/secp256k1/libtool	/^func_remove_hook ()$/;"	f
func_replace_sysroot	libsodium/build-aux/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	libsodium/libtool	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	zcash/secp256k1/build-aux/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_replace_sysroot	zcash/secp256k1/libtool	/^func_replace_sysroot ()$/;"	f
func_require_term_colors	libsodium/build-aux/ltmain.sh	/^func_require_term_colors ()$/;"	f
func_require_term_colors	libsodium/libtool	/^func_require_term_colors ()$/;"	f
func_require_term_colors	zcash/secp256k1/build-aux/ltmain.sh	/^func_require_term_colors ()$/;"	f
func_require_term_colors	zcash/secp256k1/libtool	/^func_require_term_colors ()$/;"	f
func_resolve_sysroot	libsodium/build-aux/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	libsodium/libtool	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	zcash/secp256k1/build-aux/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_resolve_sysroot	zcash/secp256k1/libtool	/^func_resolve_sysroot ()$/;"	f
func_run_hooks	libsodium/build-aux/ltmain.sh	/^func_run_hooks ()$/;"	f
func_run_hooks	libsodium/libtool	/^func_run_hooks ()$/;"	f
func_run_hooks	zcash/secp256k1/build-aux/ltmain.sh	/^func_run_hooks ()$/;"	f
func_run_hooks	zcash/secp256k1/libtool	/^func_run_hooks ()$/;"	f
func_show_eval	libsodium/build-aux/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval	libsodium/libtool	/^func_show_eval ()$/;"	f
func_show_eval	zcash/secp256k1/build-aux/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval	zcash/secp256k1/libtool	/^func_show_eval ()$/;"	f
func_show_eval_locale	libsodium/build-aux/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	libsodium/libtool	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	zcash/secp256k1/build-aux/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_show_eval_locale	zcash/secp256k1/libtool	/^func_show_eval_locale ()$/;"	f
func_sort_ver	libsodium/build-aux/ltmain.sh	/^func_sort_ver ()$/;"	f
func_sort_ver	libsodium/libtool	/^func_sort_ver ()$/;"	f
func_sort_ver	zcash/secp256k1/build-aux/ltmain.sh	/^func_sort_ver ()$/;"	f
func_sort_ver	zcash/secp256k1/libtool	/^func_sort_ver ()$/;"	f
func_source	libsodium/build-aux/ltmain.sh	/^func_source ()$/;"	f
func_source	libsodium/libtool	/^func_source ()$/;"	f
func_source	zcash/secp256k1/build-aux/ltmain.sh	/^func_source ()$/;"	f
func_source	zcash/secp256k1/libtool	/^func_source ()$/;"	f
func_split_equals	libsodium/build-aux/ltmain.sh	/^  func_split_equals ()$/;"	f
func_split_equals	libsodium/libtool	/^  func_split_equals ()$/;"	f
func_split_equals	zcash/secp256k1/build-aux/ltmain.sh	/^  func_split_equals ()$/;"	f
func_split_equals	zcash/secp256k1/libtool	/^  func_split_equals ()$/;"	f
func_split_short_opt	libsodium/build-aux/ltmain.sh	/^  func_split_short_opt ()$/;"	f
func_split_short_opt	libsodium/libtool	/^  func_split_short_opt ()$/;"	f
func_split_short_opt	zcash/secp256k1/build-aux/ltmain.sh	/^  func_split_short_opt ()$/;"	f
func_split_short_opt	zcash/secp256k1/libtool	/^  func_split_short_opt ()$/;"	f
func_stripname	libsodium/build-aux/ltmain.sh	/^  func_stripname ()$/;"	f
func_stripname	libsodium/libtool	/^  func_stripname ()$/;"	f
func_stripname	zcash/secp256k1/build-aux/ltmain.sh	/^  func_stripname ()$/;"	f
func_stripname	zcash/secp256k1/libtool	/^  func_stripname ()$/;"	f
func_suncc_cstd_abi	libsodium/build-aux/ltmain.sh	/^func_suncc_cstd_abi ()$/;"	f
func_suncc_cstd_abi	libsodium/libtool	/^func_suncc_cstd_abi ()$/;"	f
func_suncc_cstd_abi	zcash/secp256k1/build-aux/ltmain.sh	/^func_suncc_cstd_abi ()$/;"	f
func_suncc_cstd_abi	zcash/secp256k1/libtool	/^func_suncc_cstd_abi ()$/;"	f
func_to_host_file	libsodium/build-aux/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_file	libsodium/libtool	/^func_to_host_file ()$/;"	f
func_to_host_file	zcash/secp256k1/build-aux/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_file	zcash/secp256k1/libtool	/^func_to_host_file ()$/;"	f
func_to_host_path	libsodium/build-aux/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_path	libsodium/libtool	/^func_to_host_path ()$/;"	f
func_to_host_path	zcash/secp256k1/build-aux/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_host_path	zcash/secp256k1/libtool	/^func_to_host_path ()$/;"	f
func_to_tool_file	libsodium/build-aux/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_to_tool_file	libsodium/libtool	/^func_to_tool_file ()$/;"	f
func_to_tool_file	zcash/secp256k1/build-aux/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_to_tool_file	zcash/secp256k1/libtool	/^func_to_tool_file ()$/;"	f
func_tr_sh	libsodium/build-aux/ltmain.sh	/^func_tr_sh ()$/;"	f
func_tr_sh	libsodium/libtool	/^func_tr_sh ()$/;"	f
func_tr_sh	zcash/secp256k1/build-aux/ltmain.sh	/^func_tr_sh ()$/;"	f
func_tr_sh	zcash/secp256k1/libtool	/^func_tr_sh ()$/;"	f
func_usage	libsodium/build-aux/ltmain.sh	/^func_usage ()$/;"	f
func_usage	libsodium/libtool	/^func_usage ()$/;"	f
func_usage	zcash/secp256k1/build-aux/ltmain.sh	/^func_usage ()$/;"	f
func_usage	zcash/secp256k1/libtool	/^func_usage ()$/;"	f
func_usage_message	libsodium/build-aux/ltmain.sh	/^func_usage_message ()$/;"	f
func_usage_message	libsodium/libtool	/^func_usage_message ()$/;"	f
func_usage_message	zcash/secp256k1/build-aux/ltmain.sh	/^func_usage_message ()$/;"	f
func_usage_message	zcash/secp256k1/libtool	/^func_usage_message ()$/;"	f
func_validate_options	libsodium/build-aux/ltmain.sh	/^func_validate_options ()$/;"	f
func_validate_options	libsodium/libtool	/^func_validate_options ()$/;"	f
func_validate_options	zcash/secp256k1/build-aux/ltmain.sh	/^func_validate_options ()$/;"	f
func_validate_options	zcash/secp256k1/libtool	/^func_validate_options ()$/;"	f
func_verbose	libsodium/build-aux/ltmain.sh	/^func_verbose ()$/;"	f
func_verbose	libsodium/libtool	/^func_verbose ()$/;"	f
func_verbose	zcash/secp256k1/build-aux/ltmain.sh	/^func_verbose ()$/;"	f
func_verbose	zcash/secp256k1/libtool	/^func_verbose ()$/;"	f
func_version	libsodium/build-aux/ltmain.sh	/^func_version ()$/;"	f
func_version	libsodium/libtool	/^func_version ()$/;"	f
func_version	zcash/secp256k1/build-aux/ltmain.sh	/^func_version ()$/;"	f
func_version	zcash/secp256k1/libtool	/^func_version ()$/;"	f
func_warn_and_continue	libsodium/build-aux/ltmain.sh	/^func_warn_and_continue ()$/;"	f
func_warn_and_continue	libsodium/libtool	/^func_warn_and_continue ()$/;"	f
func_warn_and_continue	zcash/secp256k1/build-aux/ltmain.sh	/^func_warn_and_continue ()$/;"	f
func_warn_and_continue	zcash/secp256k1/libtool	/^func_warn_and_continue ()$/;"	f
func_warning	libsodium/build-aux/ltmain.sh	/^func_warning ()$/;"	f
func_warning	libsodium/libtool	/^func_warning ()$/;"	f
func_warning	zcash/secp256k1/build-aux/ltmain.sh	/^func_warning ()$/;"	f
func_warning	zcash/secp256k1/libtool	/^func_warning ()$/;"	f
func_win32_import_lib_p	libsodium/build-aux/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	libsodium/libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	zcash/secp256k1/build-aux/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_import_lib_p	zcash/secp256k1/libtool	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	libsodium/build-aux/ltmain.sh	/^func_win32_libid ()$/;"	f
func_win32_libid	libsodium/libtool	/^func_win32_libid ()$/;"	f
func_win32_libid	zcash/secp256k1/build-aux/ltmain.sh	/^func_win32_libid ()$/;"	f
func_win32_libid	zcash/secp256k1/libtool	/^func_win32_libid ()$/;"	f
func_write_libtool_object	libsodium/build-aux/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	libsodium/libtool	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	zcash/secp256k1/build-aux/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_write_libtool_object	zcash/secp256k1/libtool	/^func_write_libtool_object ()$/;"	f
func_xform	libsodium/build-aux/ltmain.sh	/^  func_xform ()$/;"	f
func_xform	libsodium/libtool	/^  func_xform ()$/;"	f
func_xform	zcash/secp256k1/build-aux/ltmain.sh	/^  func_xform ()$/;"	f
func_xform	zcash/secp256k1/libtool	/^  func_xform ()$/;"	f
g	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.hpp	/^    T1 g;$/;"	m	struct:libsnark::knowledge_commitment
g	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> g;$/;"	m	class:libsnark::sha256_round_function_gadget
g_A	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    knowledge_commitment<G1<ppT>, G1<ppT> > g_A;$/;"	m	class:libsnark::r1cs_ppzksnark_proof
g_A	zcash/Proof.hpp	/^    CompressedG1 g_A;$/;"	m	class:libzcash::ZCProof
g_A_prime	zcash/Proof.hpp	/^    CompressedG1 g_A_prime;$/;"	m	class:libzcash::ZCProof
g_B	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    knowledge_commitment<G2<ppT>, G1<ppT> > g_B;$/;"	m	class:libsnark::r1cs_ppzksnark_proof
g_B	zcash/Proof.hpp	/^    CompressedG2 g_B;$/;"	m	class:libzcash::ZCProof
g_B_prime	zcash/Proof.hpp	/^    CompressedG1 g_B_prime;$/;"	m	class:libzcash::ZCProof
g_C	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    knowledge_commitment<G1<ppT>, G1<ppT> > g_C;$/;"	m	class:libsnark::r1cs_ppzksnark_proof
g_C	zcash/Proof.hpp	/^    CompressedG1 g_C;$/;"	m	class:libzcash::ZCProof
g_C_prime	zcash/Proof.hpp	/^    CompressedG1 g_C_prime;$/;"	m	class:libzcash::ZCProof
g_H	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G1<ppT> g_H;$/;"	m	class:libsnark::r1cs_ppzksnark_proof
g_H	zcash/Proof.hpp	/^    CompressedG1 g_H;$/;"	m	class:libzcash::ZCProof
g_K	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G1<ppT> g_K;$/;"	m	class:libsnark::r1cs_ppzksnark_proof
g_K	zcash/Proof.hpp	/^    CompressedG1 g_K;$/;"	m	class:libzcash::ZCProof
gadget	libsnark/src/gadgetlib1/gadget.hpp	/^class gadget {$/;"	c	namespace:libsnark
gadget	libsnark/src/gadgetlib1/gadget.tcc	/^gadget<FieldT>::gadget(protoboard<FieldT> &pb, const std::string &annotation_prefix) :$/;"	f	class:libsnark::gadget
gadget_from_r1cs	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.hpp	/^class gadget_from_r1cs : public gadget<FieldT> {$/;"	c	namespace:libsnark
gadget_from_r1cs	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.tcc	/^gadget_from_r1cs<FieldT>::gadget_from_r1cs(protoboard<FieldT> &pb,$/;"	f	class:libsnark::gadget_from_r1cs
gamma_beta_g1	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G1<ppT> gamma_beta_g1;$/;"	m	class:libsnark::r1cs_ppzksnark_verification_key
gamma_beta_g2	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2<ppT> gamma_beta_g2;$/;"	m	class:libsnark::r1cs_ppzksnark_verification_key
gamma_g2	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2<ppT> gamma_g2;$/;"	m	class:libsnark::r1cs_ppzksnark_verification_key
ge_add	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_add(ge_p1p1 *r, const ge_p3 *p, const ge_cached *q)$/;"	f
ge_add	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	121;"	d
ge_cached	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_cached;$/;"	t	typeref:struct:__anon9
ge_cached	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	97;"	d
ge_double_scalarmult_vartime	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_double_scalarmult_vartime(ge_p2 *r, const unsigned char *a, const ge_p3 *A,$/;"	f
ge_double_scalarmult_vartime	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	124;"	d
ge_equals_ge	zcash/secp256k1/src/tests.c	/^void ge_equals_ge(const secp256k1_ge *a, const secp256k1_ge *b) {$/;"	f
ge_equals_ge	zcash/secp256k1/src/tests_exhaustive.c	/^void ge_equals_ge(const secp256k1_ge *a, const secp256k1_ge *b) {$/;"	f
ge_equals_gej	zcash/secp256k1/src/tests.c	/^void ge_equals_gej(const secp256k1_ge *a, const secp256k1_gej *b) {$/;"	f
ge_equals_gej	zcash/secp256k1/src/tests_exhaustive.c	/^void ge_equals_gej(const secp256k1_ge *a, const secp256k1_gej *b) {$/;"	f
ge_frombytes_negate_vartime	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_frombytes_negate_vartime(ge_p3 *h, const unsigned char *s)$/;"	f
ge_frombytes_negate_vartime	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	105;"	d
ge_madd	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_madd(ge_p1p1 *r, const ge_p3 *p, const ge_precomp *q)$/;"	f
ge_madd	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	119;"	d
ge_msub	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_msub(ge_p1p1 *r, const ge_p3 *p, const ge_precomp *q)$/;"	f
ge_msub	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	120;"	d
ge_p1p1	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_p1p1;$/;"	t	typeref:struct:__anon7
ge_p1p1	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	82;"	d
ge_p1p1_to_p2	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_p1p1_to_p2(ge_p2 *r, const ge_p1p1 *p)$/;"	f
ge_p1p1_to_p2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	114;"	d
ge_p1p1_to_p3	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_p1p1_to_p3(ge_p3 *r, const ge_p1p1 *p)$/;"	f
ge_p1p1_to_p3	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	115;"	d
ge_p2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_p2;$/;"	t	typeref:struct:__anon5
ge_p2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	67;"	d
ge_p2_0	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_p2_0(ge_p2 *h)$/;"	f
ge_p2_0	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	109;"	d
ge_p2_dbl	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_p2_dbl(ge_p1p1 *r, const ge_p2 *p)$/;"	f
ge_p2_dbl	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	116;"	d
ge_p3	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_p3;$/;"	t	typeref:struct:__anon6
ge_p3	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	74;"	d
ge_p3_0	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_p3_0(ge_p3 *h)$/;"	f
ge_p3_0	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	110;"	d
ge_p3_dbl	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_p3_dbl(ge_p1p1 *r, const ge_p3 *p)$/;"	f
ge_p3_dbl	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	117;"	d
ge_p3_to_cached	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_p3_to_cached(ge_cached *r, const ge_p3 *p)$/;"	f
ge_p3_to_cached	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	113;"	d
ge_p3_to_p2	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_p3_to_p2(ge_p2 *r, const ge_p3 *p)$/;"	f
ge_p3_to_p2	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	112;"	d
ge_p3_tobytes	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_p3_tobytes(unsigned char *s, const ge_p3 *h)$/;"	f
ge_p3_tobytes	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	107;"	d
ge_precomp	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^} ge_precomp;$/;"	t	typeref:struct:__anon8
ge_precomp	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	90;"	d
ge_precomp_0	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_precomp_0(ge_precomp *h)$/;"	f
ge_precomp_0	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	111;"	d
ge_scalarmult_base	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_scalarmult_base(ge_p3 *h, const unsigned char *a)$/;"	f
ge_scalarmult_base	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	123;"	d
ge_scalarmult_vartime	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_scalarmult_vartime(ge_p3 *r, const unsigned char *a, const ge_p3 *A)$/;"	f
ge_scalarmult_vartime	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	125;"	d
ge_select	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_select(ge_precomp *t, int pos, signed char b)$/;"	f	file:
ge_sub	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_sub(ge_p1p1 *r, const ge_p3 *p, const ge_cached *q)$/;"	f
ge_sub	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	122;"	d
ge_tobytes	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^ge_tobytes(unsigned char *s, const ge_p2 *h)$/;"	f
ge_tobytes	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	106;"	d
ge_x	zcash/secp256k1/src/bench_internal.c	/^    secp256k1_ge ge_x, ge_y;$/;"	m	struct:__anon52	file:
ge_y	zcash/secp256k1/src/bench_internal.c	/^    secp256k1_ge ge_x, ge_y;$/;"	m	struct:__anon52	file:
gej_x	zcash/secp256k1/src/bench_internal.c	/^    secp256k1_gej gej_x, gej_y;$/;"	m	struct:__anon52	file:
gej_xyz_equals_gej	zcash/secp256k1/src/tests.c	/^int gej_xyz_equals_gej(const secp256k1_gej *a, const secp256k1_gej *b) {$/;"	f
gej_y	zcash/secp256k1/src/bench_internal.c	/^    secp256k1_gej gej_x, gej_y;$/;"	m	struct:__anon52	file:
gen256zeroes	zcash/circuit/prfs.tcc	/^pb_variable_array<FieldT> gen256zeroes(pb_variable<FieldT>& ZERO) {$/;"	f
gen_context_BIN	zcash/secp256k1/Makefile	/^gen_context_BIN = gen_context$(BUILD_EXEEXT)$/;"	m
gen_context_OBJECTS	zcash/secp256k1/Makefile	/^gen_context_OBJECTS = gen_context.o$/;"	m
gen_r1cs_example_from_protoboard	libsnark/src/gadgetlib1/examples/simple_example.tcc	/^r1cs_example<FieldT> gen_r1cs_example_from_protoboard(const size_t num_constraints,$/;"	f	namespace:libsnark
gen_random_bytes	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^def gen_random_bytes(n):$/;"	f
generate	zcash/JoinSplit.cpp	/^    void generate() {$/;"	f	class:libzcash::JoinSplitCircuit
generate_DEPENDENCIES	zcash/Makefile	/^generate_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)$/;"	m
generate_LDADD	zcash/Makefile	/^generate_LDADD = $(LIBPATH) $(ADDLIBS)$/;"	m
generate_OBJECTS	zcash/Makefile	/^generate_OBJECTS = $(am_generate_OBJECTS)$/;"	m
generate_SOURCES	zcash/Makefile	/^generate_SOURCES = GenerateParams.cpp Address.cpp amount.cpp hash.cpp \\$/;"	m
generate_addresses	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-avx2.c	/^generate_addresses(const argon2_instance_t *instance,$/;"	f	file:
generate_addresses	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ref.c	/^generate_addresses(const argon2_instance_t *instance,$/;"	f	file:
generate_addresses	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-fill-block-ssse3.c	/^generate_addresses(const argon2_instance_t *instance,$/;"	f	file:
generate_boolean_r1cs_constraint	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void generate_boolean_r1cs_constraint(protoboard<FieldT> &pb, const pb_linear_combination<FieldT> &lc, const std::string &annotation_prefix)$/;"	f	namespace:libsnark
generate_privkey	zcash/NoteEncryption.cpp	/^uint256 NoteEncryption<MLEN>::generate_privkey(const uint252 &a_sk)$/;"	f	class:libzcash::NoteEncryption
generate_pubkey	zcash/NoteEncryption.cpp	/^uint256 NoteEncryption<MLEN>::generate_pubkey(const uint256 &sk_enc)$/;"	f	class:libzcash::NoteEncryption
generate_r1cs	zcash/JoinSplit.cpp	/^    r1cs_constraint_system<FieldT> generate_r1cs() {$/;"	f	class:libzcash::JoinSplitCircuit
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void bit_vector_copy_gadget<FieldT>::generate_r1cs_constraints(const bool enforce_source_bitness, const bool enforce_target_bitness)$/;"	f	class:libsnark::bit_vector_copy_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void comparison_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::comparison_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void conjunction_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::conjunction_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void disjunction_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::disjunction_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void dual_variable_gadget<FieldT>::generate_r1cs_constraints(const bool enforce_bitness)$/;"	f	class:libsnark::dual_variable_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void field_vector_copy_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::field_vector_copy_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void inner_product_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::inner_product_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void loose_multiplexing_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::loose_multiplexing_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void multipacking_gadget<FieldT>::generate_r1cs_constraints(const bool enforce_bitness)$/;"	f	class:libsnark::multipacking_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void packing_gadget<FieldT>::generate_r1cs_constraints(const bool enforce_bitness)$/;"	f	class:libsnark::packing_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.tcc	/^void gadget_from_r1cs<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::gadget_from_r1cs
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.tcc	/^void digest_selector_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::digest_selector_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.tcc	/^void digest_variable<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::digest_variable
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void XOR3_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::XOR3_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void big_sigma_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::big_sigma_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void choice_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::choice_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void lastbits_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::lastbits_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void majority_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::majority_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void small_sigma_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::small_sigma_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^void sha256_message_schedule_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::sha256_message_schedule_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^void sha256_round_function_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::sha256_round_function_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^void sha256_compression_function_gadget<FieldT>::generate_r1cs_constraints()$/;"	f	class:libsnark::sha256_compression_function_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^void sha256_two_to_one_hash_gadget<FieldT>::generate_r1cs_constraints(const bool ensure_output_bitness)$/;"	f	class:libsnark::sha256_two_to_one_hash_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.tcc	/^void merkle_authentication_path_variable<FieldT, HashT>::generate_r1cs_constraints()$/;"	f	class:libsnark::merkle_authentication_path_variable
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.tcc	/^void merkle_tree_check_read_gadget<FieldT, HashT>::generate_r1cs_constraints()$/;"	f	class:libsnark::merkle_tree_check_read_gadget
generate_r1cs_constraints	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.tcc	/^void merkle_tree_check_update_gadget<FieldT, HashT>::generate_r1cs_constraints()$/;"	f	class:libsnark::merkle_tree_check_update_gadget
generate_r1cs_constraints	zcash/circuit/commitment.tcc	/^    void generate_r1cs_constraints() {$/;"	f	class:note_commitment_gadget
generate_r1cs_constraints	zcash/circuit/gadget.tcc	/^    void generate_r1cs_constraints() {$/;"	f	class:joinsplit_gadget
generate_r1cs_constraints	zcash/circuit/merkle.tcc	/^    void generate_r1cs_constraints() {$/;"	f	class:merkle_tree_gadget
generate_r1cs_constraints	zcash/circuit/note.tcc	/^    void generate_r1cs_constraints() {$/;"	f	class:input_note_gadget
generate_r1cs_constraints	zcash/circuit/note.tcc	/^    void generate_r1cs_constraints() {$/;"	f	class:note_gadget
generate_r1cs_constraints	zcash/circuit/note.tcc	/^    void generate_r1cs_constraints() {$/;"	f	class:output_note_gadget
generate_r1cs_constraints	zcash/circuit/prfs.tcc	/^    void generate_r1cs_constraints() {$/;"	f	class:PRF_gadget
generate_r1cs_equals_const_constraint	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void generate_r1cs_equals_const_constraint(protoboard<FieldT> &pb, const pb_linear_combination<FieldT> &lc, const FieldT& c, const std::string &annotation_prefix)$/;"	f	namespace:libsnark
generate_r1cs_example_with_binary_input	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.tcc	/^r1cs_example<FieldT> generate_r1cs_example_with_binary_input(const size_t num_constraints,$/;"	f	namespace:libsnark
generate_r1cs_example_with_field_input	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.tcc	/^r1cs_example<FieldT> generate_r1cs_example_with_field_input(const size_t num_constraints,$/;"	f	namespace:libsnark
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void bit_vector_copy_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::bit_vector_copy_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void comparison_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::comparison_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void conjunction_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::conjunction_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void disjunction_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::disjunction_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void field_vector_copy_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::field_vector_copy_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void inner_product_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::inner_product_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void loose_multiplexing_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::loose_multiplexing_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.tcc	/^void gadget_from_r1cs<FieldT>::generate_r1cs_witness(const r1cs_primary_input<FieldT> &primary_input,$/;"	f	class:libsnark::gadget_from_r1cs
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.tcc	/^void digest_selector_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::digest_selector_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.tcc	/^void block_variable<FieldT>::generate_r1cs_witness(const bit_vector& contents)$/;"	f	class:libsnark::block_variable
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.tcc	/^void digest_variable<FieldT>::generate_r1cs_witness(const bit_vector& contents)$/;"	f	class:libsnark::digest_variable
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void XOR3_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::XOR3_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void big_sigma_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::big_sigma_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void choice_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::choice_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void lastbits_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::lastbits_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void majority_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::majority_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^void small_sigma_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::small_sigma_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^void sha256_message_schedule_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::sha256_message_schedule_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^void sha256_round_function_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::sha256_round_function_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^void sha256_compression_function_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::sha256_compression_function_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^void sha256_two_to_one_hash_gadget<FieldT>::generate_r1cs_witness()$/;"	f	class:libsnark::sha256_two_to_one_hash_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.tcc	/^void merkle_authentication_path_variable<FieldT, HashT>::generate_r1cs_witness(const size_t address, const merkle_authentication_path &path)$/;"	f	class:libsnark::merkle_authentication_path_variable
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.tcc	/^void merkle_tree_check_read_gadget<FieldT, HashT>::generate_r1cs_witness()$/;"	f	class:libsnark::merkle_tree_check_read_gadget
generate_r1cs_witness	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.tcc	/^void merkle_tree_check_update_gadget<FieldT, HashT>::generate_r1cs_witness()$/;"	f	class:libsnark::merkle_tree_check_update_gadget
generate_r1cs_witness	zcash/circuit/commitment.tcc	/^    void generate_r1cs_witness() {$/;"	f	class:note_commitment_gadget
generate_r1cs_witness	zcash/circuit/gadget.tcc	/^    void generate_r1cs_witness($/;"	f	class:joinsplit_gadget
generate_r1cs_witness	zcash/circuit/merkle.tcc	/^    void generate_r1cs_witness(const MerklePath& path) {$/;"	f	class:merkle_tree_gadget
generate_r1cs_witness	zcash/circuit/note.tcc	/^    void generate_r1cs_witness($/;"	f	class:input_note_gadget
generate_r1cs_witness	zcash/circuit/note.tcc	/^    void generate_r1cs_witness(const Note& note) {$/;"	f	class:note_gadget
generate_r1cs_witness	zcash/circuit/note.tcc	/^    void generate_r1cs_witness(const Note& note) {$/;"	f	class:output_note_gadget
generate_r1cs_witness	zcash/circuit/prfs.tcc	/^    void generate_r1cs_witness() {$/;"	f	class:PRF_gadget
generate_r1cs_witness_from_bits	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void dual_variable_gadget<FieldT>::generate_r1cs_witness_from_bits()$/;"	f	class:libsnark::dual_variable_gadget
generate_r1cs_witness_from_bits	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void multipacking_gadget<FieldT>::generate_r1cs_witness_from_bits()$/;"	f	class:libsnark::multipacking_gadget
generate_r1cs_witness_from_bits	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void packing_gadget<FieldT>::generate_r1cs_witness_from_bits()$/;"	f	class:libsnark::packing_gadget
generate_r1cs_witness_from_packed	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void dual_variable_gadget<FieldT>::generate_r1cs_witness_from_packed()$/;"	f	class:libsnark::dual_variable_gadget
generate_r1cs_witness_from_packed	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void multipacking_gadget<FieldT>::generate_r1cs_witness_from_packed()$/;"	f	class:libsnark::multipacking_gadget
generate_r1cs_witness_from_packed	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void packing_gadget<FieldT>::generate_r1cs_witness_from_packed()$/;"	f	class:libsnark::packing_gadget
generate_sha256_gadget_tests	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^def generate_sha256_gadget_tests():$/;"	f
generichash2_DEPENDENCIES	libsodium/test/default/Makefile	/^generichash2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
generichash2_LDADD	libsodium/test/default/Makefile	/^generichash2_LDADD = $(TESTS_LDADD)$/;"	m
generichash2_OBJECTS	libsodium/test/default/Makefile	/^generichash2_OBJECTS = generichash2.$(OBJEXT)$/;"	m
generichash2_SOURCE	libsodium/test/default/Makefile	/^generichash2_SOURCE = cmptest.h generichash2.c$/;"	m
generichash2_SOURCES	libsodium/test/default/Makefile	/^generichash2_SOURCES = generichash2.c$/;"	m
generichash3_DEPENDENCIES	libsodium/test/default/Makefile	/^generichash3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
generichash3_LDADD	libsodium/test/default/Makefile	/^generichash3_LDADD = $(TESTS_LDADD)$/;"	m
generichash3_OBJECTS	libsodium/test/default/Makefile	/^generichash3_OBJECTS = generichash3.$(OBJEXT)$/;"	m
generichash3_SOURCE	libsodium/test/default/Makefile	/^generichash3_SOURCE = cmptest.h generichash3.c$/;"	m
generichash3_SOURCES	libsodium/test/default/Makefile	/^generichash3_SOURCES = generichash3.c$/;"	m
generichash_DEPENDENCIES	libsodium/test/default/Makefile	/^generichash_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
generichash_LDADD	libsodium/test/default/Makefile	/^generichash_LDADD = $(TESTS_LDADD)$/;"	m
generichash_OBJECTS	libsodium/test/default/Makefile	/^generichash_OBJECTS = generichash.$(OBJEXT)$/;"	m
generichash_SOURCE	libsodium/test/default/Makefile	/^generichash_SOURCE = cmptest.h generichash.c$/;"	m
generichash_SOURCES	libsodium/test/default/Makefile	/^generichash_SOURCES = generichash.c$/;"	m
getContext	zcash/secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  public static long getContext() {$/;"	m	class:Secp256k1Context
get_authentication_path	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.tcc	/^merkle_authentication_path merkle_authentication_path_variable<FieldT, HashT>::get_authentication_path(const size_t address) const$/;"	f	class:libsnark::merkle_authentication_path_variable
get_bits	libsnark/src/gadgetlib1/pb_variable.tcc	/^bit_vector pb_linear_combination_array<FieldT>::get_bits(const protoboard<FieldT> &pb) const$/;"	f	class:libsnark::pb_linear_combination_array
get_bits	libsnark/src/gadgetlib1/pb_variable.tcc	/^bit_vector pb_variable_array<FieldT>::get_bits(const protoboard<FieldT> &pb) const$/;"	f	class:libsnark::pb_variable_array
get_block	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.tcc	/^bit_vector block_variable<FieldT>::get_block() const$/;"	f	class:libsnark::block_variable
get_block_len	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^size_t sha256_two_to_one_hash_gadget<FieldT>::get_block_len()$/;"	f	class:libsnark::sha256_two_to_one_hash_gadget
get_constraint_system	libsnark/src/gadgetlib1/protoboard.tcc	/^r1cs_constraint_system<FieldT> protoboard<FieldT>::get_constraint_system() const$/;"	f	class:libsnark::protoboard
get_digest	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.tcc	/^bit_vector digest_variable<FieldT>::get_digest() const$/;"	f	class:libsnark::digest_variable
get_digest_len	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^size_t sha256_two_to_one_hash_gadget<FieldT>::get_digest_len()$/;"	f	class:libsnark::sha256_two_to_one_hash_gadget
get_element	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^FieldT basic_radix2_domain<FieldT>::get_element(const size_t idx)$/;"	f	class:libsnark::basic_radix2_domain
get_epk	zcash/NoteEncryption.hpp	/^    uint256 get_epk() {$/;"	f	class:libzcash::NoteEncryption
get_evaluation_domain	libsnark/src/algebra/evaluation_domain/evaluation_domain.tcc	/^std::shared_ptr<evaluation_domain<FieldT> > get_evaluation_domain(const size_t min_size)$/;"	f	namespace:libsnark
get_exp_window_size	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^size_t get_exp_window_size(const size_t num_scalars)$/;"	f	namespace:libsnark
get_field_element_from_bits	libsnark/src/gadgetlib1/pb_variable.tcc	/^FieldT pb_linear_combination_array<FieldT>::get_field_element_from_bits(const protoboard<FieldT> &pb) const$/;"	f	class:libsnark::pb_linear_combination_array
get_field_element_from_bits	libsnark/src/gadgetlib1/pb_variable.tcc	/^FieldT pb_variable_array<FieldT>::get_field_element_from_bits(const protoboard<FieldT> &pb) const$/;"	f	class:libsnark::pb_variable_array
get_hash	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^bit_vector sha256_two_to_one_hash_gadget<FieldT>::get_hash(const bit_vector &input)$/;"	f	class:libsnark::sha256_two_to_one_hash_gadget
get_nsec_cpu_time	libsnark/src/common/profiling.cpp	/^long long get_nsec_cpu_time()$/;"	f	namespace:libsnark
get_nsec_time	libsnark/src/common/profiling.cpp	/^long long get_nsec_time()$/;"	f	namespace:libsnark
get_openssl_key	zcash/secp256k1/src/tests.c	/^EC_KEY *get_openssl_key(const unsigned char *key32) {$/;"	f
get_path	libsnark/src/common/data_structures/merkle_tree.tcc	/^typename HashT::merkle_authentication_path_type merkle_tree<HashT>::get_path(const size_t address) const$/;"	f	class:libsnark::merkle_tree
get_root	libsnark/src/common/data_structures/merkle_tree.tcc	/^typename HashT::hash_value_type merkle_tree<HashT>::get_root() const$/;"	f	class:libsnark::merkle_tree
get_root_of_unity	libsnark/src/algebra/fields/field_utils.tcc	/^FieldT get_root_of_unity(const size_t n)$/;"	f	namespace:libsnark
get_vals	libsnark/src/gadgetlib1/pb_variable.tcc	/^std::vector<FieldT> pb_linear_combination_array<FieldT>::get_vals(const protoboard<FieldT> &pb) const$/;"	f	class:libsnark::pb_linear_combination_array
get_vals	libsnark/src/gadgetlib1/pb_variable.tcc	/^std::vector<FieldT> pb_variable_array<FieldT>::get_vals(const protoboard<FieldT> &pb) const$/;"	f	class:libsnark::pb_variable_array
get_value	libsnark/src/common/data_structures/merkle_tree.tcc	/^bit_vector merkle_tree<HashT>::get_value(const size_t address) const$/;"	f	class:libsnark::merkle_tree
get_window_table	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^window_table<T> get_window_table(const size_t scalar_size,$/;"	f	namespace:libsnark
getdouble	zcash/arith_uint256.cpp	/^double base_uint<BITS>::getdouble() const$/;"	f	class:base_uint
getint	zcash/script/script.h	/^    int getint() const$/;"	f	class:CScriptNum
getrandom_available	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    int           getrandom_available;$/;"	m	struct:Salsa20Random_	file:
getrandom_available	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^    int getrandom_available;$/;"	m	struct:SysRandom_	file:
gettimedouble	zcash/secp256k1/src/bench.h	/^static double gettimedouble(void) {$/;"	f
getvch	zcash/script/script.h	/^    std::vector<unsigned char> getvch() const$/;"	f	class:CScriptNum
give_advice	libsodium/build-aux/missing	/^give_advice ()$/;"	f
give_advice	missing	/^give_advice ()$/;"	f
give_advice	zcash/secp256k1/build-aux/missing	/^give_advice ()$/;"	f
glibc_sanity_test	zcash/compat/glibc_sanity.cpp	/^bool glibc_sanity_test()$/;"	f
glibcxx_sanity_test	zcash/compat/glibcxx_sanity.cpp	/^bool glibcxx_sanity_test()$/;"	f
h	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.hpp	/^    T2 h;$/;"	m	struct:libsnark::knowledge_commitment
h	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> h;$/;"	m	class:libsnark::sha256_round_function_gadget
h	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^    unsigned long      h[5];$/;"	m	struct:poly1305_state_internal_t
h	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^    unsigned long long h[3];$/;"	m	struct:poly1305_state_internal_t
h	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^        uint64_t h[3];$/;"	m	union:poly1305_state_internal_t::__anon3	file:
h	libsodium/test/default/core3.c	/^static unsigned char h[32];$/;"	v	file:
h	libsodium/test/default/hash.c	/^static unsigned char h[crypto_hash_BYTES];$/;"	v	file:
h	libsodium/test/default/hash3.c	/^static unsigned char h[crypto_hash_BYTES];$/;"	v	file:
h	libsodium/test/default/stream.c	/^static unsigned char h[32];$/;"	v	file:
h	libsodium/test/default/stream2.c	/^static unsigned char h[32];$/;"	v	file:
hSig	zcash/NoteEncryption.hpp	/^    uint256 hSig;$/;"	m	class:libzcash::NoteEncryption
h_sig	zcash/JoinSplit.cpp	/^uint256 JoinSplit<NumInputs, NumOutputs>::h_sig($/;"	f	class:libzcash::JoinSplit
h_sig	zcash/primitives/transaction.cpp	/^uint256 JSDescription::h_sig(ZCJoinSplit& params, const uint256& pubKeyHash) const$/;"	f	class:JSDescription
handle	zcash/script/zcashconsensus.cpp	/^    ECCVerifyHandle handle;$/;"	m	struct:__anon18::ECCryptoClosure	file:
has_aesni	libsodium/src/libsodium/sodium/runtime.c	/^    int has_aesni;$/;"	m	struct:CPUFeatures_	file:
has_affine_pairing	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^    static const bool has_affine_pairing = false;$/;"	m	class:libsnark::alt_bn128_pp
has_avx	libsodium/src/libsodium/sodium/runtime.c	/^    int has_avx;$/;"	m	struct:CPUFeatures_	file:
has_avx2	libsodium/src/libsodium/sodium/runtime.c	/^    int has_avx2;$/;"	m	struct:CPUFeatures_	file:
has_neon	libsodium/src/libsodium/sodium/runtime.c	/^    int has_neon;$/;"	m	struct:CPUFeatures_	file:
has_pclmul	libsodium/src/libsodium/sodium/runtime.c	/^    int has_pclmul;$/;"	m	struct:CPUFeatures_	file:
has_sse2	libsodium/src/libsodium/sodium/runtime.c	/^    int has_sse2;$/;"	m	struct:CPUFeatures_	file:
has_sse3	libsodium/src/libsodium/sodium/runtime.c	/^    int has_sse3;$/;"	m	struct:CPUFeatures_	file:
has_sse41	libsodium/src/libsodium/sodium/runtime.c	/^    int has_sse41;$/;"	m	struct:CPUFeatures_	file:
has_ssse3	libsodium/src/libsodium/sodium/runtime.c	/^    int has_ssse3;$/;"	m	struct:CPUFeatures_	file:
hash	zcash/crypto/equihash.h	/^    unsigned char hash[WIDTH];$/;"	m	class:StepRow
hash	zcash/primitives/transaction.h	/^    const uint256 hash;$/;"	m	class:CTransaction
hash	zcash/primitives/transaction.h	/^    uint256 hash;$/;"	m	class:COutPoint
hash3_DEPENDENCIES	libsodium/test/default/Makefile	/^hash3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
hash3_LDADD	libsodium/test/default/Makefile	/^hash3_LDADD = $(TESTS_LDADD)$/;"	m
hash3_OBJECTS	libsodium/test/default/Makefile	/^hash3_OBJECTS = hash3.$(OBJEXT)$/;"	m
hash3_SOURCE	libsodium/test/default/Makefile	/^hash3_SOURCE = cmptest.h hash3.c$/;"	m
hash3_SOURCES	libsodium/test/default/Makefile	/^hash3_SOURCES = hash3.c$/;"	m
hashGenesisBlock	zcash/consensus/params.h	/^    uint256 hashGenesisBlock;$/;"	m	struct:Consensus::Params
hashMerkleRoot	zcash/primitives/block.h	/^    uint256 hashMerkleRoot;$/;"	m	class:CBlockHeader
hashPrevBlock	zcash/primitives/block.h	/^    uint256 hashPrevBlock;$/;"	m	class:CBlockHeader
hashReserved	zcash/primitives/block.h	/^    uint256 hashReserved;$/;"	m	class:CBlockHeader
hash_DEPENDENCIES	libsodium/test/default/Makefile	/^hash_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
hash_LDADD	libsodium/test/default/Makefile	/^hash_LDADD = $(TESTS_LDADD)$/;"	m
hash_OBJECTS	libsodium/test/default/Makefile	/^hash_OBJECTS = hash.$(OBJEXT)$/;"	m
hash_SOURCE	libsodium/test/default/Makefile	/^hash_SOURCE = cmptest.h hash.c$/;"	m
hash_SOURCES	libsodium/test/default/Makefile	/^hash_SOURCES = hash.c$/;"	m
hash_defaults	libsnark/src/common/data_structures/merkle_tree.hpp	/^    std::vector<hash_value_type> hash_defaults;$/;"	m	class:libsnark::merkle_tree
hash_value_type	libsnark/src/common/data_structures/merkle_tree.hpp	/^    typedef typename HashT::hash_value_type hash_value_type;$/;"	t	class:libsnark::merkle_tree
hash_value_type	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    typedef bit_vector hash_value_type;$/;"	t	class:libsnark::sha256_two_to_one_hash_gadget
hasher	zcash/circuit/prfs.tcc	/^    std::shared_ptr<sha256_compression_function_gadget<FieldT>> hasher;$/;"	m	class:PRF_gadget	file:
hasher1	zcash/circuit/commitment.tcc	/^    std::shared_ptr<sha256_compression_function_gadget<FieldT>> hasher1;$/;"	m	class:note_commitment_gadget	file:
hasher2	zcash/circuit/commitment.tcc	/^    std::shared_ptr<sha256_compression_function_gadget<FieldT>> hasher2;$/;"	m	class:note_commitment_gadget	file:
hasher_inputs	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    std::vector<block_variable<FieldT> > hasher_inputs;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
hashers	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    std::vector<HashT> hashers;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
hashes	libsnark/src/common/data_structures/merkle_tree.hpp	/^    std::map<size_t, hash_value_type> hashes;$/;"	m	class:libsnark::merkle_tree
have_flag	zcash/secp256k1/src/bench_internal.c	/^int have_flag(int argc, char** argv, char *flag) {$/;"	f
hex	libsodium/test/default/scalarmult.c	/^static char hex[crypto_scalarmult_BYTES * 2 + 1];$/;"	v	file:
hex	libsodium/test/default/stream.c	/^static char          hex[2 * 192 + 1];$/;"	v	file:
hexdigest	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^    def hexdigest(self):$/;"	m	class:sha256
hh	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^        uint32_t hh[10];$/;"	m	union:poly1305_state_internal_t::__anon3	file:
histogram	zcash/support/pagelocker.h	/^    Histogram histogram;$/;"	m	class:LockedPageManagerBase
host	Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	demo/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/contrib/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/dist-build/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/msvc-scripts/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/src/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/src/libsodium/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/src/libsodium/include/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/test/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	libsodium/test/default/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	zcash/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host	zcash/secp256k1/Makefile	/^host = x86_64-pc-linux-gnu$/;"	m
host_alias	Makefile	/^host_alias = $/;"	m
host_alias	demo/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/contrib/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/dist-build/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/msvc-scripts/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/src/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/src/libsodium/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/src/libsodium/include/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/test/Makefile	/^host_alias = $/;"	m
host_alias	libsodium/test/default/Makefile	/^host_alias = $/;"	m
host_alias	zcash/Makefile	/^host_alias = $/;"	m
host_alias	zcash/secp256k1/Makefile	/^host_alias = $/;"	m
host_cpu	Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	demo/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/contrib/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/dist-build/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/msvc-scripts/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/src/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/src/libsodium/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/src/libsodium/include/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/test/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	libsodium/test/default/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	zcash/Makefile	/^host_cpu = x86_64$/;"	m
host_cpu	zcash/secp256k1/Makefile	/^host_cpu = x86_64$/;"	m
host_os	Makefile	/^host_os = linux-gnu$/;"	m
host_os	demo/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/contrib/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/dist-build/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/msvc-scripts/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/src/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/src/libsodium/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/src/libsodium/include/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/test/Makefile	/^host_os = linux-gnu$/;"	m
host_os	libsodium/test/default/Makefile	/^host_os = linux-gnu$/;"	m
host_os	zcash/Makefile	/^host_os = linux-gnu$/;"	m
host_os	zcash/secp256k1/Makefile	/^host_os = linux-gnu$/;"	m
host_triplet	Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	demo/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/contrib/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/dist-build/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/msvc-scripts/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/src/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/src/libsodium/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/src/libsodium/include/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/test/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	libsodium/test/default/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	zcash/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_triplet	zcash/secp256k1/Makefile	/^host_triplet = x86_64-pc-linux-gnu$/;"	m
host_vendor	Makefile	/^host_vendor = pc$/;"	m
host_vendor	demo/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/contrib/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/dist-build/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/msvc-scripts/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/src/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/src/libsodium/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/src/libsodium/include/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/test/Makefile	/^host_vendor = pc$/;"	m
host_vendor	libsodium/test/default/Makefile	/^host_vendor = pc$/;"	m
host_vendor	zcash/Makefile	/^host_vendor = pc$/;"	m
host_vendor	zcash/secp256k1/Makefile	/^host_vendor = pc$/;"	m
hs	libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h	/^    crypto_hash_sha512_state hs;$/;"	m	struct:crypto_sign_ed25519ph_state
htmldir	Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	demo/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/contrib/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/dist-build/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/msvc-scripts/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/src/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/src/libsodium/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/src/libsodium/include/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/test/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	libsodium/test/default/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	zcash/Makefile	/^htmldir = ${docdir}$/;"	m
htmldir	zcash/secp256k1/Makefile	/^htmldir = ${docdir}$/;"	m
htobe16	zcash/compat/endian.h	/^inline uint16_t htobe16(uint16_t host_16bits)$/;"	f
htobe32	zcash/compat/endian.h	/^inline uint32_t htobe32(uint32_t host_32bits)$/;"	f
htobe64	zcash/compat/endian.h	/^inline uint64_t htobe64(uint64_t host_64bits)$/;"	f
htole16	zcash/compat/endian.h	/^inline uint16_t htole16(uint16_t host_16bits)$/;"	f
htole32	zcash/compat/endian.h	/^inline uint32_t htole32(uint32_t host_32bits)$/;"	f
htole64	zcash/compat/endian.h	/^inline uint64_t htole64(uint64_t host_64bits)$/;"	f
i64tostr	zcash/utilstrencodings.cpp	/^std::string i64tostr(int64_t n)$/;"	f
iFFT	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^void basic_radix2_domain<FieldT>::iFFT(std::vector<FieldT> &a)$/;"	f	class:libsnark::basic_radix2_domain
icosetFFT	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^void basic_radix2_domain<FieldT>::icosetFFT(std::vector<FieldT> &a, const FieldT &g)$/;"	f	class:libsnark::basic_radix2_domain
ictx	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	/^    crypto_hash_sha256_state ictx;$/;"	m	struct:crypto_auth_hmacsha256_state
ictx	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	/^    crypto_hash_sha512_state ictx;$/;"	m	struct:crypto_auth_hmacsha512_state
idx	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^    size_t idx;$/;"	m	class:libsnark::ordered_exponent	file:
ignore	zcash/streams.h	/^    CAutoFile& ignore(size_t nSize)$/;"	f	class:CAutoFile
ignore	zcash/streams.h	/^    CBaseDataStream& ignore(int nSize)$/;"	f	class:CBaseDataStream
illegal_callback	zcash/secp256k1/src/secp256k1.c	/^    secp256k1_callback illegal_callback;$/;"	m	struct:secp256k1_context_struct	file:
impl_tests	libsodium/test/default/randombytes.c	/^impl_tests(void)$/;"	f	file:
implementation	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c	/^static const crypto_onetimeauth_poly1305_implementation *implementation =$/;"	v	file:
implementation	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c	/^static const crypto_scalarmult_curve25519_implementation *implementation =$/;"	v	file:
implementation	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c	/^static const crypto_stream_chacha20_implementation *implementation =$/;"	v	file:
implementation	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.c	/^static const crypto_stream_salsa20_implementation *implementation =$/;"	v	file:
implementation	libsodium/src/libsodium/randombytes/randombytes.c	/^static const randombytes_implementation *implementation;$/;"	v	file:
implementation_name	libsodium/src/libsodium/include/sodium/randombytes.h	/^    const char *(*implementation_name)(void); \/* required *\/$/;"	m	struct:randombytes_implementation
implementations_H	libsodium/src/libsodium/include/sodium/private/implementations.h	2;"	d
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^imulq  $19,%rbp,%rdx$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^imulq  $19,%rdx,%rax$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^imulq  $19,%rdx,%rdx$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $19, %r8,%r8$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $19, %r9,%r9$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $19, %rax,%rax$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $19, %rbp,%rbp$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^imulq  $38, %rax,%rax$/;"	l
imulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^imulq  $19, %r12,%r12$/;"	l
in	libsodium/test/default/core3.c	/^static unsigned char in[16];$/;"	v	file:
in	libsodium/test/default/core4.c	/^static unsigned char in[16] = { 101, 102, 103, 104, 105, 106, 107, 108,$/;"	v	file:
in	libsodium/test/default/core5.c	/^static unsigned char in[16] = {$/;"	v	file:
in	libsodium/test/default/core6.c	/^static unsigned char in[16] = {$/;"	v	file:
in	libsodium/test/default/xchacha20.c	/^    const char in[crypto_core_hchacha20_INPUTBYTES * 2 + 1];$/;"	m	struct:HChaCha20TV_	file:
in_avail	zcash/streams.h	/^    int in_avail()               { return size(); }$/;"	f	class:CBaseDataStream
in_hex	libsodium/test/default/generichash.c	/^    const char *in_hex;$/;"	m	struct:__anon1	file:
include_HEADERS	zcash/secp256k1/Makefile	/^include_HEADERS = include\/secp256k1.h $(am__append_10) \\$/;"	m
includedir	Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	demo/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/contrib/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/dist-build/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/msvc-scripts/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/src/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/src/libsodium/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/src/libsodium/include/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/test/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	libsodium/test/default/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	zcash/Makefile	/^includedir = ${prefix}\/include$/;"	m
includedir	zcash/secp256k1/Makefile	/^includedir = ${prefix}\/include$/;"	m
indent	libsnark/src/gadgetlib1/constraint_profiling.hpp	/^    size_t indent;$/;"	m	struct:libsnark::constraint_profiling_entry
indentation	libsnark/src/common/profiling.cpp	/^size_t indentation = 0;$/;"	m	namespace:libsnark	file:
index	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable<FieldT> index;$/;"	m	class:libsnark::loose_multiplexing_gadget
index	libsnark/src/gadgetlib1/pb_variable.hpp	/^    lc_index_t index;$/;"	m	class:libsnark::pb_linear_combination
index	libsnark/src/relations/variable.hpp	/^    var_index_t index = 0;$/;"	m	class:libsnark::linear_term
index	libsnark/src/relations/variable.hpp	/^    var_index_t index;$/;"	m	class:libsnark::variable
index	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t index;$/;"	m	struct:Argon2_position_t
index	zcash/IncrementalMerkleTree.hpp	/^    std::vector<bool> index;$/;"	m	class:libzcash::MerklePath
index_alpha	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^index_alpha(const argon2_instance_t *instance,$/;"	f
indices	libsnark/src/common/data_structures/sparse_vector.hpp	/^    std::vector<size_t> indices;$/;"	m	struct:libsnark::sparse_vector
infinity	zcash/secp256k1/src/group.h	/^    int infinity; \/* whether this represents the point at infinity *\/$/;"	m	struct:__anon54
infinity	zcash/secp256k1/src/group.h	/^    int infinity; \/* whether this represents the point at infinity *\/$/;"	m	struct:__anon55
infodir	Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	demo/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/contrib/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/dist-build/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/msvc-scripts/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/src/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/src/libsodium/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/src/libsodium/include/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/test/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	libsodium/test/default/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	zcash/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
infodir	zcash/secp256k1/Makefile	/^infodir = ${datarootdir}\/info$/;"	m
inhibit_profiling_counters	libsnark/src/common/profiling.cpp	/^bool inhibit_profiling_counters = false;$/;"	m	namespace:libsnark	file:
inhibit_profiling_info	libsnark/src/common/profiling.cpp	/^bool inhibit_profiling_info = false;$/;"	m	namespace:libsnark	file:
init_alt_bn128_params	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^void init_alt_bn128_params()$/;"	f	namespace:libsnark
init_and_check_sodium	zcash/crypto/common.h	/^int inline init_and_check_sodium()$/;"	f
init_block_value	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^init_block_value(block *b, uint8_t in)$/;"	f
init_flag	zcash/support/pagelocker.cpp	/^boost::once_flag LockedPageManager::init_flag = BOOST_ONCE_INIT;$/;"	m	class:LockedPageManager	file:
init_flag	zcash/support/pagelocker.h	/^    static boost::once_flag init_flag;$/;"	m	class:LockedPageManager
init_public_params	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.cpp	/^void alt_bn128_pp::init_public_params()$/;"	f	class:libsnark::alt_bn128_pp
init_public_params_once_flag	zcash/Proof.cpp	/^std::once_flag init_public_params_once_flag;$/;"	m	namespace:libzcash	file:
init_region	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c	/^init_region(escrypt_region_t *region)$/;"	f	file:
initial	zcash/secp256k1/src/ecmult_gen.h	/^    secp256k1_gej initial;$/;"	m	struct:__anon44
initial_hash	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^initial_hash(uint8_t *blockhash, argon2_context *context, argon2_type type)$/;"	f
initialize	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^initialize(argon2_instance_t *instance, argon2_context *context)$/;"	f
initialize_curve_params	zcash/Proof.cpp	/^void initialize_curve_params()$/;"	f	namespace:libzcash
initialized	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    int           initialized;$/;"	m	struct:Salsa20Random_	file:
initialized	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^    int initialized;$/;"	m	struct:SysRandom_	file:
initialized	libsodium/src/libsodium/sodium/core.c	/^static volatile int initialized;$/;"	v	file:
initialized	libsodium/src/libsodium/sodium/runtime.c	/^    int initialized;$/;"	m	struct:CPUFeatures_	file:
inner	zcash/crypto/hmac_sha256.h	/^    CSHA256 inner;$/;"	m	class:CHMAC_SHA256
inner	zcash/crypto/hmac_sha512.h	/^    CSHA512 inner;$/;"	m	class:CHMAC_SHA512
inner	zcash/secp256k1/src/hash.h	/^    secp256k1_sha256_t inner, outer;$/;"	m	struct:__anon50
inner	zcash/uint252.h	/^    uint256 inner() const {$/;"	f	class:uint252
inner_length	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t inner_length;                    \/* 18 *\/$/;"	m	struct:blake2b_param_
inner_product_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    inner_product_gadget(protoboard<FieldT>& pb,$/;"	f	class:libsnark::inner_product_gadget
inner_product_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class inner_product_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
input	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.hpp	/^    digest_variable<FieldT> input;$/;"	m	class:libsnark::digest_selector_gadget
input	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^    uint32_t input[16];$/;"	m	struct:chacha_ctx	file:
input	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^    uint32_t input[16];$/;"	m	struct:chacha_ctx	file:
input	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^    uint32_t input[16];$/;"	m	struct:chacha_ctx	file:
input	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^    uint32_t input[16];$/;"	m	struct:salsa_ctx	file:
input	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^    uint32_t input[16];$/;"	m	struct:salsa_ctx	file:
input_note_gadget	zcash/circuit/note.tcc	/^    input_note_gadget($/;"	f	class:input_note_gadget
input_note_gadget	zcash/circuit/note.tcc	/^class input_note_gadget : public note_gadget<FieldT> {$/;"	c	file:
inputs	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable_array<FieldT> inputs;$/;"	m	class:libsnark::conjunction_gadget
inputs	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable_array<FieldT> inputs;$/;"	m	class:libsnark::disjunction_gadget
insecure_rand	zcash/random.h	/^static inline uint32_t insecure_rand(void)$/;"	f
insecure_rand_Rw	zcash/random.cpp	/^uint32_t insecure_rand_Rw = 11;$/;"	v
insecure_rand_Rz	zcash/random.cpp	/^uint32_t insecure_rand_Rz = 11;$/;"	v
insert	zcash/streams.h	/^    iterator insert(iterator it, const char& x=char()) { return vch.insert(it, x); }$/;"	f	class:CBaseDataStream
insert	zcash/streams.h	/^    void insert(iterator it, const char* first, const char* last)$/;"	f	class:CBaseDataStream
insert	zcash/streams.h	/^    void insert(iterator it, size_type n, const char& x) { vch.insert(it, n, x); }$/;"	f	class:CBaseDataStream
insert	zcash/streams.h	/^    void insert(iterator it, std::vector<char>::const_iterator first, std::vector<char>::const_iterator last)$/;"	f	class:CBaseDataStream
insert_uint256	zcash/circuit/utils.tcc	/^void insert_uint256(std::vector<bool>& into, uint256 from) {$/;"	f
insert_uint64	zcash/circuit/utils.tcc	/^void insert_uint64(std::vector<bool>& into, uint64_t from) {$/;"	f
install_sh	Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/install-sh$/;"	m
install_sh	demo/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/install-sh$/;"	m
install_sh	libsodium/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/contrib/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/dist-build/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/msvc-scripts/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/src/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/src/libsodium/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/src/libsodium/include/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/test/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	libsodium/test/default/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/libsodium\/build-aux\/install-sh$/;"	m
install_sh	zcash/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/install-sh$/;"	m
install_sh	zcash/secp256k1/Makefile	/^install_sh = ${SHELL} \/home\/yuncong\/Files\/Projects\/zchannel\/zcash\/secp256k1\/build-aux\/install-sh$/;"	m
install_sh_DATA	Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	demo/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/contrib/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/dist-build/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/msvc-scripts/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/src/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/src/libsodium/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/src/libsodium/include/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/test/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	libsodium/test/default/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	zcash/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_DATA	zcash/secp256k1/Makefile	/^install_sh_DATA = $(install_sh) -c -m 644$/;"	m
install_sh_PROGRAM	Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	demo/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/contrib/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/dist-build/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/msvc-scripts/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/src/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/src/libsodium/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/src/libsodium/include/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/test/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	libsodium/test/default/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	zcash/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_PROGRAM	zcash/secp256k1/Makefile	/^install_sh_PROGRAM = $(install_sh) -c$/;"	m
install_sh_SCRIPT	Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	demo/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/contrib/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/dist-build/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/msvc-scripts/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/src/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/src/libsodium/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/src/libsodium/include/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/test/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	libsodium/test/default/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	zcash/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
install_sh_SCRIPT	zcash/secp256k1/Makefile	/^install_sh_SCRIPT = $(install_sh) -c$/;"	m
instance_of_cinit	zcash/zcashutil.cpp	/^instance_of_cinit;$/;"	v	typeref:class:CInit
instance_of_eccryptoclosure	zcash/script/zcashconsensus.cpp	/^ECCryptoClosure instance_of_eccryptoclosure;$/;"	m	namespace:__anon18	file:
instance_ptr	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    argon2_instance_t *instance_ptr;$/;"	m	struct:Argon2_thread_data
int_list_to_bits	libsnark/src/common/utils.cpp	/^bit_vector int_list_to_bits(const std::initializer_list<unsigned long> &l, const size_t wordsize)$/;"	f	namespace:libsnark
integer_coeff_t	libsnark/src/relations/variable.hpp	/^typedef long integer_coeff_t;$/;"	t	namespace:libsnark
integerify	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^integerify(const void *B, size_t r)$/;"	f	file:
integerify	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^integerify(const void *B, size_t r)$/;"	f	file:
intermediate_hash	zcash/circuit/commitment.tcc	/^    std::shared_ptr<digest_variable<FieldT>> intermediate_hash;$/;"	m	class:note_commitment_gadget	file:
internal_output	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    std::vector<digest_variable<FieldT> > internal_output;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
inv	libsnark/src/algebra/fields/fp.hpp	/^    static mp_limb_t inv; \/\/ modulus^(-1) mod W, where W = 2^(word size)$/;"	m	class:libsnark::Fp_model
inv	libsnark/src/algebra/fields/fp.hpp	/^mp_limb_t Fp_model<n, modulus>::inv;$/;"	m	class:libsnark::Fp_model
inv	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable<FieldT> inv;$/;"	m	class:libsnark::conjunction_gadget
inv	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable<FieldT> inv;$/;"	m	class:libsnark::disjunction_gadget
inv_cnt	libsnark/src/algebra/fields/fp.hpp	/^    static long long inv_cnt;$/;"	m	class:libsnark::Fp_model
inv_cnt	libsnark/src/algebra/fields/fp.hpp	/^long long Fp_model<n, modulus>::inv_cnt = 0;$/;"	m	class:libsnark::Fp_model
inverse	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::inverse() const$/;"	f	class:libsnark::Fp_model
inverse	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::inverse() const$/;"	f	class:libsnark::Fp12_2over3over2_model
inverse	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::inverse() const$/;"	f	class:libsnark::Fp2_model
inverse	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::inverse() const$/;"	f	class:libsnark::Fp3_model
inverse	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::inverse() const$/;"	f	class:libsnark::Fp6_3over2_model
invert	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus>& Fp_model<n,modulus>::invert()$/;"	f	class:libsnark::Fp_model
invocation_counts	libsnark/src/common/profiling.cpp	/^std::map<std::string, size_t> invocation_counts;$/;"	m	namespace:libsnark	file:
invoke	zcash/tinyformat.h	/^    static bool invoke(std::ostream& \/**\/, const T& \/**\/) { return false; }$/;"	f	struct:tinyformat::detail::formatZeroIntegerWorkaround
invoke	zcash/tinyformat.h	/^    static bool invoke(std::ostream& out, const T& value)$/;"	f	struct:tinyformat::detail::formatZeroIntegerWorkaround
invoke	zcash/tinyformat.h	/^    static int invoke(const T& \/*value*\/)$/;"	f	struct:tinyformat::detail::convertToInt
invoke	zcash/tinyformat.h	/^    static int invoke(const T& value) { return static_cast<int>(value); }$/;"	f	struct:tinyformat::detail::convertToInt
invoke	zcash/tinyformat.h	/^    static void invoke(std::ostream& \/*out*\/, const T& \/*value*\/) { assert(0); }$/;"	f	struct:tinyformat::detail::formatValueAsType
invoke	zcash/tinyformat.h	/^    static void invoke(std::ostream& out, const T& value)$/;"	f	struct:tinyformat::detail::formatValueAsType
isEnabled	zcash/secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  public static boolean isEnabled() {$/;"	m	class:Secp256k1Context
is_complete	zcash/IncrementalMerkleTree.cpp	/^bool IncrementalMerkleTree<Depth, Hash>::is_complete(size_t depth) const {$/;"	f	class:libzcash::IncrementalMerkleTree
is_constant	libsnark/src/gadgetlib1/pb_variable.tcc	/^bool pb_linear_combination<FieldT>::is_constant() const$/;"	f	class:libsnark::pb_linear_combination
is_convertible	zcash/tinyformat.h	/^struct is_convertible$/;"	s	namespace:tinyformat::detail
is_empty_signature	zcash/secp256k1/src/tests.c	/^int is_empty_signature(const secp256k1_ecdsa_signature *sig) {$/;"	f
is_fully_accumulated	libsnark/src/common/data_structures/accumulation_vector.tcc	/^bool accumulation_vector<T>::is_fully_accumulated() const$/;"	f	class:libsnark::accumulation_vector
is_little_endian	libsnark/src/common/utils.cpp	/^bool is_little_endian()$/;"	f	namespace:libsnark
is_right	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.hpp	/^    pb_linear_combination<FieldT> is_right;$/;"	m	class:libsnark::digest_selector_gadget
is_satisfied	libsnark/src/gadgetlib1/protoboard.tcc	/^bool protoboard<FieldT>::is_satisfied() const$/;"	f	class:libsnark::protoboard
is_satisfied	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^bool qap_instance<FieldT>::is_satisfied(const qap_witness<FieldT> &witness) const$/;"	f	class:libsnark::qap_instance
is_satisfied	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^bool qap_instance_evaluation<FieldT>::is_satisfied(const qap_witness<FieldT> &witness) const$/;"	f	class:libsnark::qap_instance_evaluation
is_satisfied	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^bool r1cs_constraint_system<FieldT>::is_satisfied(const r1cs_primary_input<FieldT> &primary_input,$/;"	f	class:libsnark::r1cs_constraint_system
is_special	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^bool alt_bn128_G1::is_special() const$/;"	f	class:libsnark::alt_bn128_G1
is_special	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^bool alt_bn128_G2::is_special() const$/;"	f	class:libsnark::alt_bn128_G2
is_valid	libsnark/src/common/data_structures/sparse_vector.tcc	/^bool sparse_vector<T>::is_valid() const$/;"	f	class:libsnark::sparse_vector
is_valid	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^bool r1cs_constraint_system<FieldT>::is_valid() const$/;"	f	class:libsnark::r1cs_constraint_system
is_valid	libsnark/src/relations/variable.tcc	/^bool linear_combination<FieldT>::is_valid(const size_t num_variables) const$/;"	f	class:libsnark::linear_combination
is_variable	libsnark/src/gadgetlib1/pb_variable.hpp	/^    bool is_variable;$/;"	m	class:libsnark::pb_linear_combination
is_wchar	zcash/tinyformat.h	/^template<> struct is_wchar<const wchar_t*> {};$/;"	s	namespace:tinyformat::detail
is_wchar	zcash/tinyformat.h	/^template<> struct is_wchar<wchar_t*> {};$/;"	s	namespace:tinyformat::detail
is_wchar	zcash/tinyformat.h	/^template<int n> struct is_wchar<const wchar_t[n]> {};$/;"	s	namespace:tinyformat::detail
is_wchar	zcash/tinyformat.h	/^template<int n> struct is_wchar<wchar_t[n]> {};$/;"	s	namespace:tinyformat::detail
is_wchar	zcash/tinyformat.h	/^template<typename T> struct is_wchar { typedef int tinyformat_wchar_is_not_supported; };$/;"	s	namespace:tinyformat::detail
is_well_formed	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^bool alt_bn128_G1::is_well_formed() const$/;"	f	class:libsnark::alt_bn128_G1
is_well_formed	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^bool alt_bn128_G2::is_well_formed() const$/;"	f	class:libsnark::alt_bn128_G2
is_well_formed	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    bool is_well_formed() const$/;"	f	class:libsnark::r1cs_ppzksnark_proof
is_zero	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^bool alt_bn128_G1::is_zero() const$/;"	f	class:libsnark::alt_bn128_G1
is_zero	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^bool alt_bn128_G2::is_zero() const$/;"	f	class:libsnark::alt_bn128_G2
is_zero	libsnark/src/algebra/fields/bigint.tcc	/^bool bigint<n>::is_zero() const$/;"	f	class:libsnark::bigint
is_zero	libsnark/src/algebra/fields/fp.tcc	/^bool Fp_model<n,modulus>::is_zero() const$/;"	f	class:libsnark::Fp_model
is_zero	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    bool is_zero() const { return c0.is_zero() && c1.is_zero(); }$/;"	f	class:libsnark::Fp12_2over3over2_model
is_zero	libsnark/src/algebra/fields/fp2.hpp	/^    bool is_zero() const { return c0.is_zero() && c1.is_zero(); }$/;"	f	class:libsnark::Fp2_model
is_zero	libsnark/src/algebra/fields/fp3.hpp	/^    bool is_zero() const { return c0.is_zero() && c1.is_zero() && c2.is_zero(); }$/;"	f	class:libsnark::Fp3_model
is_zero	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    bool is_zero() const { return c0.is_zero() && c1.is_zero() && c2.is_zero(); }$/;"	f	class:libsnark::Fp6_3over2_model
is_zero	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^bool knowledge_commitment<T1,T2>::is_zero() const$/;"	f	class:libsnark::knowledge_commitment
iterator	zcash/streams.h	/^    typedef typename vector_type::iterator         iterator;$/;"	t	class:CBaseDataStream
itoa64	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c	/^static const char *const itoa64 =$/;"	v	file:
itostr	zcash/utilstrencodings.cpp	/^std::string itostr(int n)$/;"	f
ja	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^ja ._reduceloop$/;"	l
ja	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^ja ._bytesatleast65$/;"	l
ja	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^ja ._mainloop1$/;"	l
ja	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^ja ._mainloop2$/;"	l
jae	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^jae ._bytesatleast256$/;"	l
jae	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^jae ._bytesatleast64$/;"	l
jae	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^jae ._nocopy$/;"	l
jb	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^jb ._bytesbetween1and255$/;"	l
jbe	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^jbe ._done$/;"	l
jmp	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^jmp ._bytesbetween1and255$/;"	l
jmp	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^jmp ._start$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^jne ._loop$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^jne ._ladder_loop$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^jne ._ladder_small_loop$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^jne ._ladder_base_loop$/;"	l
jne	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^jne ._ladder_base_small_loop$/;"	l
joinSplitPubKey	zcash/primitives/transaction.h	/^    const uint256 joinSplitPubKey;$/;"	m	class:CTransaction
joinSplitPubKey	zcash/primitives/transaction.h	/^    uint256 joinSplitPubKey;$/;"	m	struct:CMutableTransaction
joinSplitSig	zcash/primitives/transaction.h	/^    CTransaction::joinsplit_sig_t joinSplitSig = {{0}};$/;"	m	struct:CMutableTransaction
joinSplitSig	zcash/primitives/transaction.h	/^    const joinsplit_sig_t joinSplitSig = {{0}};$/;"	m	class:CTransaction
joinsplit_gadget	zcash/circuit/gadget.tcc	/^    joinsplit_gadget(protoboard<FieldT> &pb) : gadget<FieldT>(pb) {$/;"	f	class:joinsplit_gadget
joinsplit_gadget	zcash/circuit/gadget.tcc	/^class joinsplit_gadget : gadget<FieldT> {$/;"	c	file:
joinsplit_sig_t	zcash/primitives/transaction.h	/^    typedef boost::array<unsigned char, 64> joinsplit_sig_t;$/;"	t	class:CTransaction
k	libsodium/test/default/core4.c	/^static unsigned char k[32] = { 1,   2,   3,   4,   5,   6,   7,   8,$/;"	v	file:
k	libsodium/test/default/core5.c	/^static unsigned char k[32] = { 0xee, 0x30, 0x4f, 0xca, 0x27, 0x00, 0x8d, 0x8c,$/;"	v	file:
k	libsodium/test/default/core6.c	/^static unsigned char k[32] = { 0xee, 0x30, 0x4f, 0xca, 0x27, 0x00, 0x8d, 0x8c,$/;"	v	file:
k	libsodium/test/default/scalarmult5.c	/^static unsigned char k[32];$/;"	v	file:
k	libsodium/test/default/secretbox7.c	/^static unsigned char k[crypto_secretbox_KEYBYTES];$/;"	v	file:
k	libsodium/test/default/secretbox8.c	/^static unsigned char k[crypto_secretbox_KEYBYTES];$/;"	v	file:
k	zcash/secp256k1/src/hash.h	/^    unsigned char k[32];$/;"	m	struct:__anon51
k1	zcash/crypto/sha1.cpp	/^const uint32_t k1 = 0x5A827999ul;$/;"	m	namespace:__anon30::sha1	file:
k2	zcash/crypto/sha1.cpp	/^const uint32_t k2 = 0x6ED9EBA1ul;$/;"	m	namespace:__anon30::sha1	file:
k3	zcash/crypto/sha1.cpp	/^const uint32_t k3 = 0x8F1BBCDCul;$/;"	m	namespace:__anon30::sha1	file:
k4	zcash/crypto/sha1.cpp	/^const uint32_t k4 = 0xCA62C1D6ul;$/;"	m	namespace:__anon30::sha1	file:
kc_batch_exp	libsnark/src/algebra/scalar_multiplication/kc_multiexp.tcc	/^knowledge_commitment_vector<T1, T2> kc_batch_exp(const size_t scalar_size,$/;"	f	namespace:libsnark
kc_batch_exp_internal	libsnark/src/algebra/scalar_multiplication/kc_multiexp.tcc	/^knowledge_commitment_vector<T1, T2> kc_batch_exp_internal(const size_t scalar_size,$/;"	f	namespace:libsnark
kc_batch_to_special	libsnark/src/algebra/scalar_multiplication/kc_multiexp.tcc	/^void kc_batch_to_special(std::vector<knowledge_commitment<T1, T2> > &vec)$/;"	f	namespace:libsnark
kc_multi_exp_with_mixed_addition	libsnark/src/algebra/scalar_multiplication/kc_multiexp.tcc	/^knowledge_commitment<T1, T2> kc_multi_exp_with_mixed_addition(const knowledge_commitment_vector<T1, T2> &vec,$/;"	f	namespace:libsnark
kdf_DEPENDENCIES	libsodium/test/default/Makefile	/^kdf_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
kdf_LDADD	libsodium/test/default/Makefile	/^kdf_LDADD = $(TESTS_LDADD)$/;"	m
kdf_OBJECTS	libsodium/test/default/Makefile	/^kdf_OBJECTS = kdf.$(OBJEXT)$/;"	m
kdf_SOURCE	libsodium/test/default/Makefile	/^kdf_SOURCE = cmptest.h kdf.c$/;"	m
kdf_SOURCES	libsodium/test/default/Makefile	/^kdf_SOURCES = kdf.c$/;"	m
key	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    unsigned char key[crypto_stream_salsa20_KEYBYTES];$/;"	m	struct:Salsa20Random_	file:
key	libsodium/test/default/auth.c	/^static unsigned char key[32] = "Jefe";$/;"	v	file:
key	libsodium/test/default/auth2.c	/^static unsigned char key[32] = {$/;"	v	file:
key	libsodium/test/default/auth3.c	/^static unsigned char key[32] = {$/;"	v	file:
key	libsodium/test/default/auth5.c	/^static unsigned char key[32];$/;"	v	file:
key	libsodium/test/default/auth6.c	/^static unsigned char key[32] = "Jefe";$/;"	v	file:
key	libsodium/test/default/auth7.c	/^static unsigned char key[32];$/;"	v	file:
key	libsodium/test/default/onetimeauth7.c	/^static unsigned char key[32];$/;"	v	file:
key	libsodium/test/default/xchacha20.c	/^    const char  key[crypto_secretbox_xchacha20poly1305_KEYBYTES * 2 + 1];$/;"	m	struct:XChaCha20Poly1305TV_	file:
key	libsodium/test/default/xchacha20.c	/^    const char key[crypto_core_hchacha20_KEYBYTES * 2 + 1];$/;"	m	struct:HChaCha20TV_	file:
key	libsodium/test/default/xchacha20.c	/^    const char key[crypto_stream_xchacha20_KEYBYTES * 2 + 1];$/;"	m	struct:XChaCha20TV_	file:
key	zcash/JoinSplit.hpp	/^    SpendingKey key;$/;"	m	class:libzcash::JSInput
key	zcash/key.h	/^    CKey key;$/;"	m	struct:CExtKey
key	zcash/secp256k1/src/bench_sign.c	/^    unsigned char key[32];$/;"	m	struct:__anon47	file:
key	zcash/secp256k1/src/bench_verify.c	/^    unsigned char key[32];$/;"	m	struct:__anon57	file:
key2	libsodium/test/default/auth.c	/^static unsigned char key2[] =$/;"	v	file:
key_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *key_hex;$/;"	m	struct:__anon2	file:
key_hex	libsodium/test/default/generichash.c	/^    const char *key_hex;$/;"	m	struct:__anon1	file:
key_len	libsodium/test/default/keygen.c	/^    size_t key_len;$/;"	m	struct:KeygenTV_	file:
key_length	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t key_length;                      \/*  2 *\/$/;"	m	struct:blake2b_param_
keyexpbs	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	242;"	d
keyexpbs1	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	12;"	d
keyexpbs10	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	117;"	d
keygen_DEPENDENCIES	libsodium/test/default/Makefile	/^keygen_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
keygen_LDADD	libsodium/test/default/Makefile	/^keygen_LDADD = $(TESTS_LDADD)$/;"	m
keygen_OBJECTS	libsodium/test/default/Makefile	/^keygen_OBJECTS = keygen.$(OBJEXT)$/;"	m
keygen_SOURCE	libsodium/test/default/Makefile	/^keygen_SOURCE = cmptest.h keygen.c$/;"	m
keygen_SOURCES	libsodium/test/default/Makefile	/^keygen_SOURCES = keygen.c$/;"	m
keypair_seed	libsodium/test/default/ed25519_convert.c	/^static const unsigned char keypair_seed[crypto_sign_ed25519_SEEDBYTES] = {$/;"	v	file:
keypair_seed	libsodium/test/default/sign.c	/^static const unsigned char keypair_seed[]$/;"	v	file:
keystore	zcash/script/sign.h	/^    const CKeyStore* keystore;$/;"	m	class:BaseSignatureCreator
knowledge_commitment	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.hpp	/^struct knowledge_commitment {$/;"	s	namespace:libsnark
knowledge_commitment	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^knowledge_commitment<T1,T2>::knowledge_commitment(const T1 &g, const T2 &h) :$/;"	f	class:libsnark::knowledge_commitment
kx_DEPENDENCIES	libsodium/test/default/Makefile	/^kx_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
kx_LDADD	libsodium/test/default/Makefile	/^kx_LDADD = $(TESTS_LDADD)$/;"	m
kx_OBJECTS	libsodium/test/default/Makefile	/^kx_OBJECTS = kx.$(OBJEXT)$/;"	m
kx_SOURCE	libsodium/test/default/Makefile	/^kx_SOURCE = cmptest.h kx.c$/;"	m
kx_SOURCES	libsodium/test/default/Makefile	/^kx_SOURCES = kx.c$/;"	m
ladd64	zcash/circuit/gadget.tcc	/^		boost::array<pb_variable_array<FieldT>, NumInputs> ladd64;$/;"	m	class:joinsplit_gadget	file:
ladder	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^ladder:$/;"	l
ladder	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h	4;"	d
ladder_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h	2;"	d
ladder_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^ladder_base:$/;"	l
ladder_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h	4;"	d
ladder_base_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.h	2;"	d
ladder_base_namespace_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h	2;"	d
ladder_namespace_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h	2;"	d
lagrange_coeffs	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^std::vector<FieldT> basic_radix2_domain<FieldT>::lagrange_coeffs(const FieldT &t)$/;"	f	class:libsnark::basic_radix2_domain
lagrange_eval	libsnark/src/algebra/evaluation_domain/evaluation_domain.tcc	/^FieldT lagrange_eval(const size_t m, const std::vector<FieldT> &domain, const FieldT &t, const size_t idx)$/;"	f	namespace:libsnark
lane	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t lane;$/;"	m	struct:Argon2_position_t
lane_length	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t      lane_length;$/;"	m	struct:Argon2_instance_t
lanes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t      lanes;$/;"	m	struct:Argon2_instance_t
lanes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t lanes;   \/* number of lanes *\/$/;"	m	struct:Argon2_Context
last	zcash/IncrementalMerkleTree.cpp	/^Hash IncrementalMerkleTree<Depth, Hash>::last() const {$/;"	f	class:libzcash::IncrementalMerkleTree
last_cpu_time	libsnark/src/common/profiling.cpp	/^long long start_cpu_time, last_cpu_time;$/;"	m	namespace:libsnark	file:
last_cpu_times	libsnark/src/common/profiling.cpp	/^std::map<std::string, long long> last_cpu_times;$/;"	m	namespace:libsnark	file:
last_time	libsnark/src/common/profiling.cpp	/^long long start_time, last_time;$/;"	m	namespace:libsnark	file:
last_times	libsnark/src/common/profiling.cpp	/^std::map<std::string, long long> last_times;$/;"	m	namespace:libsnark	file:
lastbits_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^class lastbits_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
lastbits_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^lastbits_gadget<FieldT>::lastbits_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::lastbits_gadget
lastround	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	535;"	d
lc_index_t	libsnark/src/gadgetlib1/pb_variable.hpp	/^typedef size_t lc_index_t;$/;"	t	namespace:libsnark
lc_val	libsnark/src/gadgetlib1/protoboard.tcc	/^FieldT protoboard<FieldT>::lc_val(const pb_linear_combination<FieldT> &lc) const$/;"	f	class:libsnark::protoboard
lc_val	libsnark/src/gadgetlib1/protoboard.tcc	/^FieldT& protoboard<FieldT>::lc_val(const pb_linear_combination<FieldT> &lc)$/;"	f	class:libsnark::protoboard
lc_values	libsnark/src/gadgetlib1/protoboard.hpp	/^    std::vector<FieldT> lc_values;$/;"	m	class:libsnark::protoboard
le16toh	zcash/compat/endian.h	/^inline uint16_t le16toh(uint16_t little_endian_16bits)$/;"	f
le32toh	zcash/compat/endian.h	/^inline uint32_t le32toh(uint32_t little_endian_32bits)$/;"	f
le64toh	zcash/compat/endian.h	/^inline uint64_t le64toh(uint64_t little_endian_64bits)$/;"	f
lea	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^lea  (%r9,%rbp),%r9$/;"	l
lea	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^lea  (%rax,%r9),%rcx$/;"	l
lea	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^lea  -18(%rax),%r10$/;"	l
leaf	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    digest_variable<FieldT> leaf;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
leaf_length	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t leaf_length[4];                  \/*  8 *\/$/;"	m	struct:blake2b_param_
leaq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^leaq 800(%rsp),%rsi$/;"	l
leaq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^leaq 512(%rsp),%rsi$/;"	l
leaq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^leaq 0(%rsp),%rdi$/;"	l
leaq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^leaq 0(%rsp),%rsi$/;"	l
leave_block	libsnark/src/common/profiling.cpp	/^void leave_block(const std::string &msg, const bool indent)$/;"	f	namespace:libsnark
left	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.hpp	/^    digest_variable<FieldT> left;$/;"	m	class:libsnark::digest_selector_gadget
left	zcash/IncrementalMerkleTree.hpp	/^    boost::optional<Hash> left;$/;"	m	class:libzcash::IncrementalMerkleTree
left	zcash/crypto/sha1.cpp	/^uint32_t inline left(uint32_t x) { return (x << 1) | (x >> 31); }$/;"	f	namespace:__anon30::sha1
left_digests	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.hpp	/^    std::vector<digest_variable<FieldT> > left_digests;$/;"	m	class:libsnark::merkle_authentication_path_variable
leftover	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^    unsigned long long leftover;$/;"	m	struct:poly1305_state_internal_t
leftover	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^    unsigned long long leftover;$/;"	m	struct:poly1305_state_internal_t
leftover	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    unsigned long long leftover;                    \/* 8 bytes *\/$/;"	m	struct:poly1305_state_internal_t	file:
len	zcash/crypto/equihash.h	/^    size_t len;$/;"	m	class:CompareSR
less	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable<FieldT> less;$/;"	m	class:libsnark::comparison_gadget
less_or_eq	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable<FieldT> less_or_eq;$/;"	m	class:libsnark::comparison_gadget
lib_LTLIBRARIES	libsodium/src/libsodium/Makefile	/^lib_LTLIBRARIES = \\$/;"	m
lib_LTLIBRARIES	zcash/secp256k1/Makefile	/^lib_LTLIBRARIES = libsecp256k1.la$/;"	m
libaesni_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libaesni_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libaesni_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libaesni_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libaesni_la_LIBADD	libsodium/src/libsodium/Makefile	/^libaesni_la_LIBADD =$/;"	m
libaesni_la_LINK	libsodium/src/libsodium/Makefile	/^libaesni_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libaesni_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libaesni_la_OBJECTS = $(am_libaesni_la_OBJECTS)$/;"	m
libaesni_la_SOURCES	libsodium/src/libsodium/Makefile	/^libaesni_la_SOURCES = \\$/;"	m
libavx2_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libavx2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libavx2_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libavx2_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libavx2_la_LIBADD	libsodium/src/libsodium/Makefile	/^libavx2_la_LIBADD =$/;"	m
libavx2_la_LINK	libsodium/src/libsodium/Makefile	/^libavx2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libavx2_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libavx2_la_OBJECTS = $(am_libavx2_la_OBJECTS)$/;"	m
libavx2_la_SOURCES	libsodium/src/libsodium/Makefile	/^libavx2_la_SOURCES = \\$/;"	m
libdir	Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	demo/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libsodium/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libsodium/contrib/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libsodium/dist-build/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libsodium/msvc-scripts/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libsodium/src/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libsodium/src/libsodium/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libsodium/src/libsodium/include/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libsodium/test/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	libsodium/test/default/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	zcash/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libdir	zcash/secp256k1/Makefile	/^libdir = ${exec_prefix}\/lib$/;"	m
libexecdir	Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	demo/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/contrib/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/dist-build/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/msvc-scripts/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/src/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/src/libsodium/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/src/libsodium/include/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/test/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	libsodium/test/default/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	zcash/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libexecdir	zcash/secp256k1/Makefile	/^libexecdir = ${exec_prefix}\/libexec$/;"	m
libsecp256k1_common_la_LIBADD	zcash/secp256k1/Makefile	/^libsecp256k1_common_la_LIBADD =$/;"	m
libsecp256k1_common_la_OBJECTS	zcash/secp256k1/Makefile	/^libsecp256k1_common_la_OBJECTS = $(am_libsecp256k1_common_la_OBJECTS)$/;"	m
libsecp256k1_jni_la_CPPFLAGS	zcash/secp256k1/Makefile	/^libsecp256k1_jni_la_CPPFLAGS = -DSECP256K1_BUILD $(JNI_INCLUDES)$/;"	m
libsecp256k1_jni_la_LIBADD	zcash/secp256k1/Makefile	/^libsecp256k1_jni_la_LIBADD =$/;"	m
libsecp256k1_jni_la_OBJECTS	zcash/secp256k1/Makefile	/^libsecp256k1_jni_la_OBJECTS = $(am_libsecp256k1_jni_la_OBJECTS)$/;"	m
libsecp256k1_jni_la_SOURCES	zcash/secp256k1/Makefile	/^libsecp256k1_jni_la_SOURCES = src\/java\/org_bitcoin_NativeSecp256k1.c src\/java\/org_bitcoin_Secp256k1Context.c$/;"	m
libsecp256k1_la_CPPFLAGS	zcash/secp256k1/Makefile	/^libsecp256k1_la_CPPFLAGS = -DSECP256K1_BUILD -I$(top_srcdir)\/include -I$(top_srcdir)\/src $(SECP_INCLUDES)$/;"	m
libsecp256k1_la_DEPENDENCIES	zcash/secp256k1/Makefile	/^libsecp256k1_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \\$/;"	m
libsecp256k1_la_LIBADD	zcash/secp256k1/Makefile	/^libsecp256k1_la_LIBADD = $(JNI_LIB) $(SECP_LIBS) $(COMMON_LIB)$/;"	m
libsecp256k1_la_OBJECTS	zcash/secp256k1/Makefile	/^libsecp256k1_la_OBJECTS = $(am_libsecp256k1_la_OBJECTS)$/;"	m
libsecp256k1_la_SOURCES	zcash/secp256k1/Makefile	/^libsecp256k1_la_SOURCES = src\/secp256k1.c$/;"	m
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.cpp	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_init.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.cpp	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/curves/curve_utils.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/curves/curve_utils.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/curves/public_params.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain_aux.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/evaluation_domain/evaluation_domain.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/evaluation_domain/evaluation_domain.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/exponentiation/exponentiation.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/exponentiation/exponentiation.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/fields/bigint.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/fields/bigint.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/fields/field_utils.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/fields/field_utils.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/fields/fp.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/fields/fp.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/fields/fp2.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/fields/fp2.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/fields/fp3.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/fields/fp3.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/fields/fp6_3over2.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/fields/fp6_3over2.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/fields/fp_aux.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/scalar_multiplication/kc_multiexp.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/scalar_multiplication/kc_multiexp.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/scalar_multiplication/multiexp.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/algebra/scalar_multiplication/wnaf.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/algebra/scalar_multiplication/wnaf.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/common/data_structures/accumulation_vector.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/common/data_structures/accumulation_vector.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/common/data_structures/merkle_tree.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/common/data_structures/merkle_tree.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/common/data_structures/sparse_vector.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/common/data_structures/sparse_vector.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/common/default_types/ec_pp.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/common/default_types/r1cs_ppzksnark_pp.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/common/profiling.cpp	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/common/profiling.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/common/serialization.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/common/serialization.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/common/template_utils.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/common/utils.cpp	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/common/utils.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/common/utils.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/constraint_profiling.cpp	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/constraint_profiling.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/examples/simple_example.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/examples/simple_example.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadget.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadget.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/hash_io.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/pb_variable.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/pb_variable.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/gadgetlib1/protoboard.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/gadgetlib1/protoboard.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/reductions/r1cs_to_qap/r1cs_to_qap.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/reductions/r1cs_to_qap/r1cs_to_qap.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/relations/variable.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/relations/variable.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/examples/run_r1cs_ppzksnark.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/examples/run_r1cs_ppzksnark.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^namespace libsnark {$/;"	n
libsnark	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^namespace libsnark {$/;"	n	file:
libsnark	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark_params.hpp	/^namespace libsnark {$/;"	n
libsodium_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libsodium_la_CPPFLAGS = \\$/;"	m
libsodium_la_DEPENDENCIES	libsodium/src/libsodium/Makefile	/^libsodium_la_DEPENDENCIES = libaesni.la libsse2.la libssse3.la \\$/;"	m
libsodium_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libsodium_la_LDFLAGS = $(AM_LDFLAGS) -export-dynamic -no-undefined \\$/;"	m
libsodium_la_LIBADD	libsodium/src/libsodium/Makefile	/^libsodium_la_LIBADD = libaesni.la libsse2.la libssse3.la libsse41.la libavx2.la$/;"	m
libsodium_la_LINK	libsodium/src/libsodium/Makefile	/^libsodium_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libsodium_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libsodium_la_OBJECTS = $(am_libsodium_la_OBJECTS)$/;"	m
libsodium_la_SOURCES	libsodium/src/libsodium/Makefile	/^libsodium_la_SOURCES =  \\$/;"	m
libsse2_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libsse2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libsse2_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libsse2_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libsse2_la_LIBADD	libsodium/src/libsodium/Makefile	/^libsse2_la_LIBADD =$/;"	m
libsse2_la_LINK	libsodium/src/libsodium/Makefile	/^libsse2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libsse2_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libsse2_la_OBJECTS = $(am_libsse2_la_OBJECTS)$/;"	m
libsse2_la_SOURCES	libsodium/src/libsodium/Makefile	/^libsse2_la_SOURCES = crypto_onetimeauth\/poly1305\/sse2\/poly1305_sse2.c \\$/;"	m
libsse41_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libsse41_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libsse41_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libsse41_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libsse41_la_LIBADD	libsodium/src/libsodium/Makefile	/^libsse41_la_LIBADD =$/;"	m
libsse41_la_LINK	libsodium/src/libsodium/Makefile	/^libsse41_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libsse41_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libsse41_la_OBJECTS = $(am_libsse41_la_OBJECTS)$/;"	m
libsse41_la_SOURCES	libsodium/src/libsodium/Makefile	/^libsse41_la_SOURCES = \\$/;"	m
libssse3_la_CPPFLAGS	libsodium/src/libsodium/Makefile	/^libssse3_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \\$/;"	m
libssse3_la_LDFLAGS	libsodium/src/libsodium/Makefile	/^libssse3_la_LDFLAGS = $(libsodium_la_LDFLAGS)$/;"	m
libssse3_la_LIBADD	libsodium/src/libsodium/Makefile	/^libssse3_la_LIBADD =$/;"	m
libssse3_la_LINK	libsodium/src/libsodium/Makefile	/^libssse3_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
libssse3_la_OBJECTS	libsodium/src/libsodium/Makefile	/^libssse3_la_OBJECTS = $(am_libssse3_la_OBJECTS)$/;"	m
libssse3_la_SOURCES	libsodium/src/libsodium/Makefile	/^libssse3_la_SOURCES = \\$/;"	m
libtool_options_prep	libsodium/build-aux/ltmain.sh	/^libtool_options_prep ()$/;"	f
libtool_options_prep	libsodium/libtool	/^libtool_options_prep ()$/;"	f
libtool_options_prep	zcash/secp256k1/build-aux/ltmain.sh	/^libtool_options_prep ()$/;"	f
libtool_options_prep	zcash/secp256k1/libtool	/^libtool_options_prep ()$/;"	f
libtool_parse_options	libsodium/build-aux/ltmain.sh	/^libtool_parse_options ()$/;"	f
libtool_parse_options	libsodium/libtool	/^libtool_parse_options ()$/;"	f
libtool_parse_options	zcash/secp256k1/build-aux/ltmain.sh	/^libtool_parse_options ()$/;"	f
libtool_parse_options	zcash/secp256k1/libtool	/^libtool_parse_options ()$/;"	f
libtool_validate_options	libsodium/build-aux/ltmain.sh	/^libtool_validate_options ()$/;"	f
libtool_validate_options	libsodium/libtool	/^libtool_validate_options ()$/;"	f
libtool_validate_options	zcash/secp256k1/build-aux/ltmain.sh	/^libtool_validate_options ()$/;"	f
libtool_validate_options	zcash/secp256k1/libtool	/^libtool_validate_options ()$/;"	f
libzcash	zcash/Address.cpp	/^namespace libzcash {$/;"	n	file:
libzcash	zcash/Address.hpp	/^namespace libzcash {$/;"	n
libzcash	zcash/IncrementalMerkleTree.cpp	/^namespace libzcash {$/;"	n	file:
libzcash	zcash/IncrementalMerkleTree.hpp	/^namespace libzcash {$/;"	n
libzcash	zcash/JoinSplit.cpp	/^namespace libzcash {$/;"	n	file:
libzcash	zcash/JoinSplit.hpp	/^namespace libzcash {$/;"	n
libzcash	zcash/Note.cpp	/^namespace libzcash {$/;"	n	file:
libzcash	zcash/Note.hpp	/^namespace libzcash {$/;"	n
libzcash	zcash/NoteEncryption.cpp	/^namespace libzcash {$/;"	n	file:
libzcash	zcash/NoteEncryption.hpp	/^namespace libzcash {$/;"	n
libzcash	zcash/Proof.cpp	/^namespace libzcash {$/;"	n	file:
libzcash	zcash/Proof.hpp	/^namespace libzcash {$/;"	n
limb	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^typedef uint64_t limb;$/;"	t	file:
limbs	zcash/secp256k1/src/num_gmp.h	/^    int limbs;$/;"	m	struct:__anon38
limit	libsnark/src/algebra/fields/bigint.tcc	/^inline void bigint<n>::limit(const bigint<n>& q, const char *msg) const$/;"	f	class:libsnark::bigint
linear_combination	libsnark/src/relations/variable.hpp	/^    linear_combination() {};$/;"	f	class:libsnark::linear_combination
linear_combination	libsnark/src/relations/variable.hpp	/^class linear_combination {$/;"	c	namespace:libsnark
linear_combination	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT>::linear_combination(const FieldT &field_coeff)$/;"	f	class:libsnark::linear_combination
linear_combination	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT>::linear_combination(const integer_coeff_t int_coeff)$/;"	f	class:libsnark::linear_combination
linear_combination	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT>::linear_combination(const linear_term<FieldT> &lt)$/;"	f	class:libsnark::linear_combination
linear_combination	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT>::linear_combination(const std::vector<linear_term<FieldT> > &all_terms)$/;"	f	class:libsnark::linear_combination
linear_combination	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT>::linear_combination(const variable<FieldT> &var)$/;"	f	class:libsnark::linear_combination
linear_term	libsnark/src/relations/variable.hpp	/^    linear_term() {};$/;"	f	class:libsnark::linear_term
linear_term	libsnark/src/relations/variable.hpp	/^class linear_term {$/;"	c	namespace:libsnark
linear_term	libsnark/src/relations/variable.tcc	/^linear_term<FieldT>::linear_term(const variable<FieldT> &var) :$/;"	f	class:libsnark::linear_term
linear_term	libsnark/src/relations/variable.tcc	/^linear_term<FieldT>::linear_term(const variable<FieldT> &var, const FieldT &coeff) :$/;"	f	class:libsnark::linear_term
linear_term	libsnark/src/relations/variable.tcc	/^linear_term<FieldT>::linear_term(const variable<FieldT> &var, const integer_coeff_t int_coeff) :$/;"	f	class:libsnark::linear_term
load32_be	libsodium/src/libsodium/include/sodium/private/common.h	/^load32_be(const uint8_t src[4])$/;"	f
load32_le	libsodium/src/libsodium/include/sodium/private/common.h	/^load32_le(const uint8_t src[4])$/;"	f
load64_be	libsodium/src/libsodium/include/sodium/private/common.h	/^load64_be(const uint8_t src[8])$/;"	f
load64_le	libsodium/src/libsodium/include/sodium/private/common.h	/^load64_le(const uint8_t src[8])$/;"	f
loadFromFile	zcash/JoinSplit.cpp	/^void loadFromFile(std::string path, boost::optional<T>& objIn) {$/;"	f	namespace:libzcash
loadProvingKey	zcash/JoinSplit.cpp	/^    void loadProvingKey() {$/;"	f	class:libzcash::JoinSplitCircuit
loadVerifyingKey	zcash/JoinSplit.cpp	/^    void loadVerifyingKey(std::string path) {$/;"	f	class:libzcash::JoinSplitCircuit
load_3	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^load_3(const unsigned char *in)$/;"	f	file:
load_3	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c	/^static uint64_t load_3(const unsigned char *in)$/;"	f	file:
load_4	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^load_4(const unsigned char *in)$/;"	f	file:
load_4	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c	/^static uint64_t load_4(const unsigned char *in)$/;"	f	file:
load_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^load_block(block *dst, const void *input)$/;"	f	file:
load_limb	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^load_limb(const u8 *in)$/;"	f	file:
localedir	Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	demo/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/contrib/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/dist-build/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/msvc-scripts/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/src/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/src/libsodium/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/src/libsodium/include/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/test/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	libsodium/test/default/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	zcash/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localedir	zcash/secp256k1/Makefile	/^localedir = ${datarootdir}\/locale$/;"	m
localstatedir	Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	demo/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/contrib/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/dist-build/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/msvc-scripts/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/src/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/src/libsodium/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/src/libsodium/include/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/test/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	libsodium/test/default/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	zcash/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
localstatedir	zcash/secp256k1/Makefile	/^localstatedir = ${prefix}\/var$/;"	m
lock	zcash/sync.h	/^    boost::unique_lock<Mutex> lock;$/;"	m	class:CMutexLock
locker	zcash/support/pagelocker.h	/^    Locker locker;$/;"	m	class:LockedPageManagerBase
lockorders	zcash/sync.cpp	/^static std::map<std::pair<void*, void*>, LockStack> lockorders;$/;"	v	file:
lockstack	zcash/sync.cpp	/^static boost::thread_specific_ptr<LockStack> lockstack;$/;"	v	file:
log2	libsnark/src/common/utils.cpp	/^size_t log2(size_t n)$/;"	f	namespace:libsnark
loose_multiplexing_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    loose_multiplexing_gadget(protoboard<FieldT>& pb,$/;"	f	class:libsnark::loose_multiplexing_gadget
loose_multiplexing_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class loose_multiplexing_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
lshift64_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	38;"	d
lshift64_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^lshift64_littleendian(aes_uint128_t *r, const unsigned int n)$/;"	f
m	libsnark/src/algebra/evaluation_domain/evaluation_domain.hpp	/^    const size_t m;$/;"	m	class:libsnark::evaluation_domain
m	libsodium/test/default/box.c	/^static const unsigned char m[163] = {$/;"	v	file:
m	libsodium/test/default/box2.c	/^static unsigned char m[163];$/;"	v	file:
m	libsodium/test/default/box_easy.c	/^static unsigned char m[131] = {$/;"	v	file:
m	libsodium/test/default/secretbox.c	/^static unsigned char m[163] = {$/;"	v	file:
m	libsodium/test/default/secretbox2.c	/^static unsigned char m[163];$/;"	v	file:
m	libsodium/test/default/secretbox7.c	/^static unsigned char m[10000];$/;"	v	file:
m	libsodium/test/default/secretbox8.c	/^static unsigned char m[10000];$/;"	v	file:
m	libsodium/test/default/secretbox_easy.c	/^static unsigned char m[131] = {$/;"	v	file:
m	libsodium/test/default/sign.c	/^    const char          *m;$/;"	m	struct:TestData_	file:
m	libsodium/test/default/stream4.c	/^static unsigned char m[163] = {$/;"	v	file:
m	libsodium/test/default/xchacha20.c	/^    const char *m;$/;"	m	struct:XChaCha20Poly1305TV_	file:
m2	libsodium/test/default/secretbox7.c	/^static unsigned char m2[10000];$/;"	v	file:
m2	libsodium/test/default/secretbox8.c	/^static unsigned char m2[10000];$/;"	v	file:
m25	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^m25: .quad 33554431, 33554431$/;"	l
m25	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	13;"	d
m26	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^m26: .quad 67108863, 67108863$/;"	l
m26	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	14;"	d
m_N	zcash/tinyformat.h	/^        int m_N;$/;"	m	class:tinyformat::FormatList
m_cost	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t m_cost;  \/* amount of memory requested (KB) *\/$/;"	m	struct:Argon2_Context
m_data	zcash/script/zcashconsensus.cpp	/^    const unsigned char* m_data;$/;"	m	class:__anon18::TxInputStream	file:
m_formatImpl	zcash/tinyformat.h	/^        void (*m_formatImpl)(std::ostream& out, const char* fmtBegin,$/;"	m	class:tinyformat::detail::FormatArg
m_formatterStore	zcash/tinyformat.h	/^        FormatArg m_formatterStore[N];$/;"	m	class:tinyformat::detail::FormatListN
m_formatters	zcash/tinyformat.h	/^        const detail::FormatArg* m_formatters;$/;"	m	class:tinyformat::FormatList
m_remaining	zcash/script/zcashconsensus.cpp	/^    size_t m_remaining;$/;"	m	class:__anon18::TxInputStream	file:
m_toIntImpl	zcash/tinyformat.h	/^        int (*m_toIntImpl)(const void* value);$/;"	m	class:tinyformat::detail::FormatArg
m_type	zcash/script/zcashconsensus.cpp	/^    const int m_type;$/;"	m	class:__anon18::TxInputStream	file:
m_value	zcash/script/script.h	/^    int64_t m_value;$/;"	m	class:CScriptNum
m_value	zcash/tinyformat.h	/^        const void* m_value;$/;"	m	class:tinyformat::detail::FormatArg
m_version	zcash/script/zcashconsensus.cpp	/^    const int m_version;$/;"	m	class:__anon18::TxInputStream	file:
mac_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *mac_hex;$/;"	m	struct:__anon2	file:
macs	zcash/primitives/transaction.h	/^    boost::array<uint256, ZC_NUM_JS_INPUTS> macs;$/;"	m	class:JSDescription
magnitude	zcash/secp256k1/src/field_10x26.h	/^    int magnitude;$/;"	m	struct:__anon42
magnitude	zcash/secp256k1/src/field_5x52.h	/^    int magnitude;$/;"	m	struct:__anon45
main	config.guess	/^		main()$/;"	f
main	config.guess	/^	main ()$/;"	f
main	demo/main.cpp	/^int main() {$/;"	f
main	libsnark/src/algebra/curves/tests/test_bilinearity.cpp	/^int main(void)$/;"	f
main	libsnark/src/algebra/curves/tests/test_groups.cpp	/^int main(void)$/;"	f
main	libsnark/src/algebra/fields/tests/test_bigint.cpp	/^int main(void)$/;"	f
main	libsnark/src/algebra/fields/tests/test_fields.cpp	/^int main(void)$/;"	f
main	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/test_sha256_gadget.cpp	/^int main(void)$/;"	f
main	libsnark/src/gadgetlib1/gadgets/merkle_tree/tests/test_merkle_tree_gadgets.cpp	/^int main(void)$/;"	f
main	libsnark/src/relations/arithmetic_programs/qap/tests/test_qap.cpp	/^int main()$/;"	f
main	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/profiling/profile_r1cs_ppzksnark.cpp	/^int main(int argc, const char * argv[])$/;"	f
main	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/tests/test_r1cs_ppzksnark.cpp	/^int main()$/;"	f
main	libsodium/build-aux/config.guess	/^		main()$/;"	f
main	libsodium/build-aux/config.guess	/^	main ()$/;"	f
main	libsodium/packaging/dotnet-core/prepare.py	/^def main(args):$/;"	f
main	libsodium/test/default/aead_aes256gcm.c	/^main(void)$/;"	f
main	libsodium/test/default/aead_chacha20poly1305.c	/^main(void)$/;"	f
main	libsodium/test/default/aead_xchacha20poly1305.c	/^main(void)$/;"	f
main	libsodium/test/default/auth.c	/^main(void)$/;"	f
main	libsodium/test/default/auth2.c	/^main(void)$/;"	f
main	libsodium/test/default/auth3.c	/^main(void)$/;"	f
main	libsodium/test/default/auth5.c	/^main(void)$/;"	f
main	libsodium/test/default/auth6.c	/^main(void)$/;"	f
main	libsodium/test/default/auth7.c	/^main(void)$/;"	f
main	libsodium/test/default/box.c	/^main(void)$/;"	f
main	libsodium/test/default/box2.c	/^main(void)$/;"	f
main	libsodium/test/default/box7.c	/^main(void)$/;"	f
main	libsodium/test/default/box8.c	/^main(void)$/;"	f
main	libsodium/test/default/box_easy.c	/^main(void)$/;"	f
main	libsodium/test/default/box_easy2.c	/^main(void)$/;"	f
main	libsodium/test/default/box_seal.c	/^main(void)$/;"	f
main	libsodium/test/default/box_seed.c	/^main(void)$/;"	f
main	libsodium/test/default/chacha20.c	/^main(void)$/;"	f
main	libsodium/test/default/cmptest.h	/^int main(void)$/;"	f
main	libsodium/test/default/cmptest.h	86;"	d
main	libsodium/test/default/core1.c	/^main(void)$/;"	f
main	libsodium/test/default/core2.c	/^main(void)$/;"	f
main	libsodium/test/default/core3.c	/^main(void)$/;"	f
main	libsodium/test/default/core4.c	/^main(void)$/;"	f
main	libsodium/test/default/core5.c	/^main(void)$/;"	f
main	libsodium/test/default/core6.c	/^main(void)$/;"	f
main	libsodium/test/default/ed25519_convert.c	/^main(void)$/;"	f
main	libsodium/test/default/generichash.c	/^main(void)$/;"	f
main	libsodium/test/default/generichash2.c	/^main(void)$/;"	f
main	libsodium/test/default/generichash3.c	/^main(void)$/;"	f
main	libsodium/test/default/hash.c	/^main(void)$/;"	f
main	libsodium/test/default/hash3.c	/^main(void)$/;"	f
main	libsodium/test/default/kdf.c	/^main(void)$/;"	f
main	libsodium/test/default/keygen.c	/^main(void)$/;"	f
main	libsodium/test/default/kx.c	/^main(void)$/;"	f
main	libsodium/test/default/onetimeauth.c	/^main(void)$/;"	f
main	libsodium/test/default/onetimeauth2.c	/^main(void)$/;"	f
main	libsodium/test/default/onetimeauth7.c	/^main(void)$/;"	f
main	libsodium/test/default/pwhash.c	/^main(void)$/;"	f
main	libsodium/test/default/pwhash_argon2id.c	/^main(void)$/;"	f
main	libsodium/test/default/pwhash_scrypt.c	/^main(void)$/;"	f
main	libsodium/test/default/pwhash_scrypt_ll.c	/^main(void)$/;"	f
main	libsodium/test/default/randombytes.c	/^main(void)$/;"	f
main	libsodium/test/default/scalarmult.c	/^main(void)$/;"	f
main	libsodium/test/default/scalarmult2.c	/^main(void)$/;"	f
main	libsodium/test/default/scalarmult5.c	/^main(void)$/;"	f
main	libsodium/test/default/scalarmult6.c	/^main(void)$/;"	f
main	libsodium/test/default/scalarmult7.c	/^main(void)$/;"	f
main	libsodium/test/default/secretbox.c	/^main(void)$/;"	f
main	libsodium/test/default/secretbox2.c	/^main(void)$/;"	f
main	libsodium/test/default/secretbox7.c	/^main(void)$/;"	f
main	libsodium/test/default/secretbox8.c	/^main(void)$/;"	f
main	libsodium/test/default/secretbox_easy.c	/^main(void)$/;"	f
main	libsodium/test/default/secretbox_easy2.c	/^main(void)$/;"	f
main	libsodium/test/default/shorthash.c	/^main(void)$/;"	f
main	libsodium/test/default/sign.c	/^int main(void)$/;"	f
main	libsodium/test/default/siphashx24.c	/^main(void)$/;"	f
main	libsodium/test/default/sodium_core.c	/^main(void)$/;"	f
main	libsodium/test/default/sodium_utils.c	/^main(void)$/;"	f
main	libsodium/test/default/sodium_utils2.c	/^main(void)$/;"	f
main	libsodium/test/default/sodium_utils3.c	/^main(void)$/;"	f
main	libsodium/test/default/sodium_version.c	/^main(void)$/;"	f
main	libsodium/test/default/stream.c	/^main(void)$/;"	f
main	libsodium/test/default/stream2.c	/^main(void)$/;"	f
main	libsodium/test/default/stream3.c	/^main(void)$/;"	f
main	libsodium/test/default/stream4.c	/^main(void)$/;"	f
main	libsodium/test/default/verify1.c	/^main(void)$/;"	f
main	libsodium/test/default/xchacha20.c	/^main(void)$/;"	f
main	zcash/CreateJoinSplit.cpp	/^int main(int argc, char **argv)$/;"	f
main	zcash/GenerateParams.cpp	/^int main(int argc, char **argv)$/;"	f
main	zcash/secp256k1/build-aux/config.guess	/^		main()$/;"	f
main	zcash/secp256k1/build-aux/config.guess	/^	main ()$/;"	f
main	zcash/secp256k1/src/bench_ecdh.c	/^int main(void) {$/;"	f
main	zcash/secp256k1/src/bench_internal.c	/^int main(int argc, char **argv) {$/;"	f
main	zcash/secp256k1/src/bench_recover.c	/^int main(void) {$/;"	f
main	zcash/secp256k1/src/bench_sign.c	/^int main(void) {$/;"	f
main	zcash/secp256k1/src/bench_verify.c	/^int main(void) {$/;"	f
main	zcash/secp256k1/src/gen_context.c	/^int main(int argc, char **argv) {$/;"	f
main	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void main(String[] args) throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
main	zcash/secp256k1/src/tests.c	/^int main(int argc, char **argv) {$/;"	f
main	zcash/secp256k1/src/tests_exhaustive.c	/^int main(void) {$/;"	f
majority	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> majority;$/;"	m	class:libsnark::sha256_round_function_gadget
majority_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^class majority_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
majority_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^majority_gadget<FieldT>::majority_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::majority_gadget
make	libsodium/packaging/dotnet-core/prepare.py	/^  def make(self, f):$/;"	m	class:ExtraItem
make	libsodium/packaging/dotnet-core/prepare.py	/^  def make(self, f):$/;"	m	class:LinuxItem
make	libsodium/packaging/dotnet-core/prepare.py	/^  def make(self, f):$/;"	m	class:MacOSItem
make	libsodium/packaging/dotnet-core/prepare.py	/^  def make(self, f):$/;"	m	class:WindowsItem
makeFormatList	zcash/tinyformat.h	/^detail::FormatListN<sizeof...(Args)> makeFormatList(const Args&... args)$/;"	f	namespace:tinyformat
make_dummy_depfile	depcomp	/^make_dummy_depfile ()$/;"	f
make_dummy_depfile	libsodium/build-aux/depcomp	/^make_dummy_depfile ()$/;"	f
make_dummy_depfile	zcash/secp256k1/build-aux/depcomp	/^make_dummy_depfile ()$/;"	f
mandir	Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	demo/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/contrib/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/dist-build/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/msvc-scripts/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/src/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/src/libsodium/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/src/libsodium/include/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/test/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	libsodium/test/default/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	zcash/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mandir	zcash/secp256k1/Makefile	/^mandir = ${datarootdir}\/man$/;"	m
mapKeys	zcash/keystore.h	/^    KeyMap mapKeys;$/;"	m	class:CBasicKeyStore
mapMultiArgs	zcash/zcashutil.cpp	/^map<string, vector<string> > mapMultiArgs;$/;"	v
mapNoteDecryptors	zcash/keystore.h	/^    NoteDecryptorMap mapNoteDecryptors;$/;"	m	class:CBasicKeyStore
mapScripts	zcash/keystore.h	/^    ScriptMap mapScripts;$/;"	m	class:CBasicKeyStore
mapSpendingKeys	zcash/keystore.h	/^    SpendingKeyMap mapSpendingKeys;$/;"	m	class:CBasicKeyStore
max	zcash/crypto/equihash.h	/^inline constexpr const size_t max(const size_t A, const size_t B) { return A > B ? A : B; }$/;"	f
max_bits	libsnark/src/algebra/fields/bigint.hpp	/^    size_t max_bits() const { return n * GMP_NUMB_BITS; }$/;"	f	class:libsnark::bigint
mbh	zcash/primitives/transaction.h	/^		BHeight mbh;$/;"	m	class:JSDescription
mbh64	zcash/circuit/gadget.tcc	/^    pb_variable_array<FieldT> mbh64;$/;"	m	class:joinsplit_gadget	file:
memcpy	zcash/compat/glibc_compat.cpp	/^extern "C" void* memcpy(void* a, const void* b, size_t c)$/;"	f
memcpy_int	zcash/compat/glibc_sanity.cpp	/^void* memcpy_int(void* a, const void* b, size_t c)$/;"	f
memo	zcash/JoinSplit.hpp	/^    boost::array<unsigned char, ZC_MEMO_SIZE> memo = {{0xF6}};  \/\/ 0xF6 is invalid UTF8 as per spec, rest of array is 0x00$/;"	m	class:libzcash::JSOutput
memo	zcash/Note.hpp	/^    boost::array<unsigned char, ZC_MEMO_SIZE> memo;$/;"	m	class:libzcash::NotePlaintext
memory	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    block *memory;$/;"	m	struct:block_region_
memory_blocks	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t      memory_blocks; \/* Number of blocks in memory *\/$/;"	m	struct:Argon2_instance_t
memory_cleanse	zcash/support/cleanse.cpp	/^void memory_cleanse(void *ptr, size_t len)$/;"	f
memset	libsodium/test/quirks/quirks.h	8;"	d
merkle_authentication_node	libsnark/src/common/data_structures/merkle_tree.hpp	/^typedef bit_vector merkle_authentication_node;$/;"	t	namespace:libsnark
merkle_authentication_path	libsnark/src/common/data_structures/merkle_tree.hpp	/^typedef std::vector<merkle_authentication_node> merkle_authentication_path;$/;"	t	namespace:libsnark
merkle_authentication_path_type	libsnark/src/common/data_structures/merkle_tree.hpp	/^    typedef typename HashT::merkle_authentication_path_type merkle_authentication_path_type;$/;"	t	class:libsnark::merkle_tree
merkle_authentication_path_type	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    typedef merkle_authentication_path merkle_authentication_path_type;$/;"	t	class:libsnark::sha256_two_to_one_hash_gadget
merkle_authentication_path_variable	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.hpp	/^class merkle_authentication_path_variable : public gadget<FieldT> {$/;"	c	namespace:libsnark
merkle_authentication_path_variable	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.tcc	/^merkle_authentication_path_variable<FieldT, HashT>::merkle_authentication_path_variable(protoboard<FieldT> &pb,$/;"	f	class:libsnark::merkle_authentication_path_variable
merkle_tree	libsnark/src/common/data_structures/merkle_tree.hpp	/^class merkle_tree {$/;"	c	namespace:libsnark
merkle_tree	libsnark/src/common/data_structures/merkle_tree.tcc	/^merkle_tree<HashT>::merkle_tree(const size_t depth, const size_t value_size) :$/;"	f	class:libsnark::merkle_tree
merkle_tree	libsnark/src/common/data_structures/merkle_tree.tcc	/^merkle_tree<HashT>::merkle_tree(const size_t depth,$/;"	f	class:libsnark::merkle_tree
merkle_tree_check_read_gadget	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^class merkle_tree_check_read_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
merkle_tree_check_read_gadget	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.tcc	/^merkle_tree_check_read_gadget<FieldT, HashT>::merkle_tree_check_read_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::merkle_tree_check_read_gadget
merkle_tree_check_update_gadget	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^class merkle_tree_check_update_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
merkle_tree_check_update_gadget	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.tcc	/^merkle_tree_check_update_gadget<FieldT, HashT>::merkle_tree_check_update_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::merkle_tree_check_update_gadget
merkle_tree_gadget	zcash/circuit/merkle.tcc	/^    merkle_tree_gadget($/;"	f	class:merkle_tree_gadget
merkle_tree_gadget	zcash/circuit/merkle.tcc	/^class merkle_tree_gadget : gadget<FieldT> {$/;"	c	file:
message_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *message_hex;$/;"	m	struct:__anon2	file:
message_schedule	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::shared_ptr<sha256_message_schedule_gadget<FieldT> > message_schedule;$/;"	m	class:libsnark::sha256_compression_function_gadget
miller_loop	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.cpp	/^alt_bn128_Fq12 alt_bn128_pp::miller_loop(const alt_bn128_G1_precomp &prec_P,$/;"	f	class:libsnark::alt_bn128_pp
missing_zcash_conf	zcash/zcashutil.h	/^    missing_zcash_conf() : std::runtime_error("Missing zcash.conf") { }$/;"	f	class:missing_zcash_conf
missing_zcash_conf	zcash/zcashutil.h	/^class missing_zcash_conf : public std::runtime_error {$/;"	c
mixcolumns	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	479;"	d
mixed_add	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::mixed_add(const alt_bn128_G1 &other) const$/;"	f	class:libsnark::alt_bn128_G1
mixed_add	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::mixed_add(const alt_bn128_G2 &other) const$/;"	f	class:libsnark::alt_bn128_G2
mixed_addition_step_for_flipped_miller_loop	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^void mixed_addition_step_for_flipped_miller_loop(const alt_bn128_G2 base,$/;"	f	namespace:libsnark
mkdir_p	Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	demo/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/contrib/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/dist-build/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/msvc-scripts/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/src/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/src/libsodium/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/src/libsodium/include/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/test/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	libsodium/test/default/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	zcash/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkdir_p	zcash/secp256k1/Makefile	/^mkdir_p = $(MKDIR_P)$/;"	m
mkinstalldirs	Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	demo/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/contrib/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/dist-build/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/msvc-scripts/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/src/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/src/libsodium/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/src/libsodium/include/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/test/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	libsodium/test/default/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	zcash/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mkinstalldirs	zcash/secp256k1/Makefile	/^mkinstalldirs = $(install_sh) -d$/;"	m
mod	libsnark/src/algebra/fields/fp.hpp	/^    static const constexpr bigint<n>& mod = modulus;$/;"	m	class:libsnark::Fp_model
mod_reduce_W	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::vector<std::shared_ptr<lastbits_gadget<FieldT> > > mod_reduce_W;$/;"	m	class:libsnark::sha256_message_schedule_gadget
mod_reduce_new_a	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::shared_ptr<lastbits_gadget<FieldT> > mod_reduce_new_a;$/;"	m	class:libsnark::sha256_round_function_gadget
mod_reduce_new_e	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::shared_ptr<lastbits_gadget<FieldT> > mod_reduce_new_e;$/;"	m	class:libsnark::sha256_round_function_gadget
mode	zcash/consensus/validation.h	/^    } mode;$/;"	m	class:CValidationState	typeref:enum:CValidationState::mode_state
mode_state	zcash/consensus/validation.h	/^    enum mode_state {$/;"	g	class:CValidationState
modulus_is_valid	libsnark/src/algebra/fields/fp.hpp	/^    static bool modulus_is_valid() { return modulus.data[n-1] != 0; } \/\/ mpn inverse assumes that highest limb is non-zero$/;"	f	class:libsnark::Fp_model
mont_repr	libsnark/src/algebra/fields/fp.hpp	/^    bigint<n> mont_repr;$/;"	m	class:libsnark::Fp_model
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %r8,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%r14$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%r8$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rax,%rbx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r13$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r15$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%r9$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%rbp$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov  %rdx,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov %rdi,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov %rsi,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %r8,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %r9,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %r9,%r8$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %r9,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%r13$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%r15$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%r9$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rax,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rcx,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%r14$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%rbp$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%rbx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov  %rdx,%rsi$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  $1,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  $3,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r8,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r8,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r8,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r9,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r9,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %r9,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rcx,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rcx,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rcx,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rdx,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rdx,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rdx,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rsi,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rsi,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rsi,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov  %rsi,%rsi$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  $255,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  $64,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  %r8,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  %r9,%r13$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  %rcx,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov  %rdx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  $255,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  $64,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  %r8,%r12$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  %r9,%r13$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  %rcx,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov  %rdx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^mov %rsp,%r11$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  $0,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  $1634760805,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  $1797285236,%rax$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  $20,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  $20,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  $2036477234,%r8$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  $857760878,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %r9,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %r9,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rcx,%r10$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rcx,%r8$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rcx,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rdi,%rdi$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rdi,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rdi,%rsi$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rdx,%r9$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rdx,%rcx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rdx,%rdi$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rdx,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rsi,%r9$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov  %rsi,%rsi$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov %rsi,%rdx$/;"	l
mov	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^mov %rsp,%r11$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,0(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,1(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,2(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,3(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,4(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,5(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %al,6(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %cl,12(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %cl,19(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %cl,25(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,10(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,11(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,13(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,14(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,15(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,16(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,17(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,18(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,20(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,21(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,22(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,23(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,24(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,26(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,27(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,28(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,29(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,30(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,7(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,8(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %dl,9(%rdi)$/;"	l
movb	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movb   %sil,31(%rdi)$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm0,%rcx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm1,%r8$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm10,%r8$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm11,%rcx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm12,%rdx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm13,%rdx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm14,%rdx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm15,%rdx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm2,%r9$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm3,%r8$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm3,%rax$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm4,%r9$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm5,%r8$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm6,%r9$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm7,%rcx$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm8,%r9$/;"	l
movd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movd   %xmm9,%rcx$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,176(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,240(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,288(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,336(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,384(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm0,400(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm1,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm1,%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm1,%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm1,%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm1,128(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm1,192(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm1,256(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm1,304(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm1,384(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm10,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm10,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm11,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm11,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm12,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm12,384(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm12,400(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm13,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm13,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm14,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm15,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm15,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm2,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm2,%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm2,%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm2,144(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm2,208(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm2,272(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm2,320(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm2,400(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm3,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm3,%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm3,160(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm3,224(%rsp)$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm4,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm4,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm4,%xmm6$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm5,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm5,%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm5,%xmm6$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm6,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm7,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm8,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm8,%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm9,%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa %xmm9,%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 112(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 128(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 144(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 160(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 176(%rsp),%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 192(%rsp),%xmm5$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 208(%rsp),%xmm6$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 224(%rsp),%xmm13$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 240(%rsp),%xmm7$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 256(%rsp),%xmm8$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 272(%rsp),%xmm9$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 288(%rsp),%xmm10$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 304(%rsp),%xmm14$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 320(%rsp),%xmm3$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 336(%rsp),%xmm4$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 352(%rsp),%xmm15$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 368(%rsp),%xmm11$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 384(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 384(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 384(%rsp),%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 400(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 400(%rsp),%xmm12$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 400(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 64(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 64(%rsp),%xmm1$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 80(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 80(%rsp),%xmm2$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 96(%rsp),%xmm0$/;"	l
movdqa	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movdqa 96(%rsp),%xmm3$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movl   %r10d,0(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movl   %r11d,256(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movl   %r12d,512(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movl   %r13d,768(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movl   %r10d,0(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movl   %r11d,256(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movl   %r12d,512(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movl   %r13d,768(%rsi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %eax,12(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %eax,16(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %eax,36(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %eax,56(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,0(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,100(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,116(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,132(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,148(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,164(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,180(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,196(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,20(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,212(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,228(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,244(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,36(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,4(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,40(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,52(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,60(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,68(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %ecx,84(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,0(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,112(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,128(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,144(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,16(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,160(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,176(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,192(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,208(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,224(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,240(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,32(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,48(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,64(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,80(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %edx,96(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,104(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,120(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,136(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,152(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,168(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,184(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,200(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,216(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,232(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,24(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,248(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,4(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,40(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,44(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,48(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,56(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,72(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,8(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r8d,88(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,108(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,12(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,124(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,140(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,156(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,172(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,188(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,204(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,220(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,236(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,252(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,28(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,32(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,44(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,52(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,60(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,76(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,8(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   %r9d,92(%rdi)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   0(%r10),%r8d$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   0(%rdx),%eax$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   12(%r10),%edx$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   16(%r10),%r11d$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   20(%r10),%ecx$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   24(%r10),%r8d$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   28(%r10),%r8d$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   4(%r10),%eax$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   4(%rdx),%edx$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl   8(%r10),%eax$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %eax,12+112(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %eax,12+96(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %eax,8+64(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %eax,8+80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %ecx,12+368(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %ecx,368(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %ecx,4+112(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %ecx,4+368(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %ecx,4+96(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %ecx,64(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %ecx,8+368(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %ecx,80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %edx,112(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %edx,12+352(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %edx,12+80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %edx,352(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %edx,4+352(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %edx,8+352(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %edx,80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %edx,96(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %r11d,12+64(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %r8d,4+64(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %r8d,4+80(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %r8d,4+96(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %r8d,8+112(%rsp)$/;"	l
movl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movl %r8d,8+96(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %r10,32(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %r8,0(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %r9,16(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %rax,24(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   %rcx,8(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   0(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   16(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   16(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   24(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   24(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   32(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   32(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   8(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq   8(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r11,0(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r12,8(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r13,16(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r14,24(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %r15,32(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rax,64(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rax,72(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rbp,48(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rbx,40(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq %rdi,56(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 0(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 16(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 24(%rsp),%r14$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 32(%rsp),%r15$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 40(%rsp),%rbx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 48(%rsp),%rbp$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 64(%rsp),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 72(%rsp),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq 8(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^movq REDMASK51(%rip),%rsi$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r10,16(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r10,24(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r10,32(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r8,8(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %r9,16(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %rax,24(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %rcx,0(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   %rsi,32(%rdi)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   0(%rsi),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   16(%rdi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   16(%rsi),%r9$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   24(%rdi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   24(%rsi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   32(%rdi),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   32(%rsi),%rsi$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq   8(%rsi),%r8$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r11,0(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r12,8(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r13,16(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r14,24(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %r15,32(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %rbp,48(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq %rbx,40(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 0(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 16(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 24(%rsp),%r14$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 32(%rsp),%r15$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 40(%rsp),%rbx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 48(%rsp),%rbp$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq 8(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^movq REDMASK51(%rip),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   0(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   16(%rsi),%r8$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   24(%rsi),%r9$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   32(%rsi),%rsi$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq   8(%rsi),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq %r11,0(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq %r12,8(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq 0(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq 8(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^movq REDMASK51(%rip),%rax$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq   0(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq   16(%rsi),%r8$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq   24(%rsi),%r9$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq   8(%rsi),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq %r11,1824(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq %r12,1832(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq %r13,1840(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq %r14,1848(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq 1824(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq 1832(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq 1840(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^movq 1848(%rsp),%r14$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq   0(%rsi),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq   16(%rsi),%r8$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq   24(%rsi),%r9$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq   8(%rsi),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq %r11,1536(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq %r12,1544(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq %r13,1552(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq 1536(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq 1544(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^movq 1552(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq $0,472(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %r11,416(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %r12,424(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %r13,432(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %r14,440(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %r15,448(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %r8,472(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %r9,480(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %rbp,464(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %rbx,456(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %rcx,472(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq %rdx,472(%rsp)$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 416(%rsp),%r11$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 424(%rsp),%r12$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 432(%rsp),%r13$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 440(%rsp),%r14$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 448(%rsp),%r15$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 456(%rsp),%rbx$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 464(%rsp),%rbp$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 472(%rsp),%rcx$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 472(%rsp),%rdx$/;"	l
movq	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^movq 480(%rsp),%r9$/;"	l
msg	zcash/secp256k1/src/bench_recover.c	/^    unsigned char msg[32];$/;"	m	struct:__anon39	file:
msg	zcash/secp256k1/src/bench_sign.c	/^    unsigned char msg[32];$/;"	m	struct:__anon47	file:
msg	zcash/secp256k1/src/bench_verify.c	/^    unsigned char msg[32];$/;"	m	struct:__anon57	file:
msgIndent	zcash/zcashutil.cpp	/^static const int msgIndent = 7;$/;"	v	file:
mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mul  %r8$/;"	l
mul	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mul  %rcx$/;"	l
mul_by_024	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::mul_by_024(const Fp2_model<n, modulus> &ell_0,$/;"	f	class:libsnark::Fp12_2over3over2_model
mul_by_b	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_Fq2 alt_bn128_G2::mul_by_b(const alt_bn128_Fq2 &elt)$/;"	f	class:libsnark::alt_bn128_G2
mul_by_non_residue	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp6_3over2_model<n, modulus> Fp12_2over3over2_model<n,modulus>::mul_by_non_residue(const Fp6_3over2_model<n, modulus> &elt)$/;"	f	class:libsnark::Fp12_2over3over2_model
mul_by_non_residue	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp2_model<n, modulus> Fp6_3over2_model<n,modulus>::mul_by_non_residue(const Fp2_model<n, modulus> &elt)$/;"	f	class:libsnark::Fp6_3over2_model
mul_by_q	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::mul_by_q() const$/;"	f	class:libsnark::alt_bn128_G2
mul_cnt	libsnark/src/algebra/fields/fp.hpp	/^    static long long mul_cnt;$/;"	m	class:libsnark::Fp_model
mul_cnt	libsnark/src/algebra/fields/fp.hpp	/^long long Fp_model<n, modulus>::mul_cnt = 0;$/;"	m	class:libsnark::Fp_model
mul_reduce	libsnark/src/algebra/fields/fp.tcc	/^void Fp_model<n,modulus>::mul_reduce(const bigint<n> &other)$/;"	f	class:libsnark::Fp_model
muladd	zcash/secp256k1/src/scalar_4x64_impl.h	187;"	d
muladd	zcash/secp256k1/src/scalar_4x64_impl.h	885;"	d
muladd	zcash/secp256k1/src/scalar_8x32_impl.h	266;"	d
muladd	zcash/secp256k1/src/scalar_8x32_impl.h	641;"	d
muladd2	zcash/secp256k1/src/scalar_4x64_impl.h	216;"	d
muladd2	zcash/secp256k1/src/scalar_4x64_impl.h	887;"	d
muladd2	zcash/secp256k1/src/scalar_8x32_impl.h	295;"	d
muladd2	zcash/secp256k1/src/scalar_8x32_impl.h	643;"	d
muladd_fast	zcash/secp256k1/src/scalar_4x64_impl.h	202;"	d
muladd_fast	zcash/secp256k1/src/scalar_4x64_impl.h	886;"	d
muladd_fast	zcash/secp256k1/src/scalar_8x32_impl.h	281;"	d
muladd_fast	zcash/secp256k1/src/scalar_8x32_impl.h	642;"	d
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  0(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  16(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  24(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  32(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^mulq  8(%rcx)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mulq  16(%rdi)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mulq  24(%rdi)$/;"	l
mulq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^mulq  32(%rdi)$/;"	l
mult	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	/^    int (*mult)(unsigned char *q, const unsigned char *n,$/;"	m	struct:crypto_scalarmult_curve25519_implementation
mult_base	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	/^    int (*mult_base)(unsigned char *q, const unsigned char *n);$/;"	m	struct:crypto_scalarmult_curve25519_implementation
multi_exp	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^T multi_exp(typename std::vector<T>::const_iterator vec_start,$/;"	f	namespace:libsnark
multi_exp_inner	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^T multi_exp_inner(typename std::vector<T>::const_iterator vec_start,$/;"	f	namespace:libsnark
multi_exp_with_mixed_addition	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^T multi_exp_with_mixed_addition(typename std::vector<T>::const_iterator vec_start,$/;"	f	namespace:libsnark
multipacking_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class multipacking_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
multipacking_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^multipacking_gadget<FieldT>::multipacking_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::multipacking_gadget
multipacking_num_chunks	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^size_t multipacking_num_chunks(const size_t num_bits)$/;"	f	namespace:libsnark
multiplicative_generator	libsnark/src/algebra/fields/fp.hpp	/^    static Fp_model<n, modulus> multiplicative_generator; \/\/ generator of Fp^*$/;"	m	class:libsnark::Fp_model
multiplicative_generator	libsnark/src/algebra/fields/fp.hpp	/^Fp_model<n, modulus> Fp_model<n, modulus>::multiplicative_generator;$/;"	m	class:libsnark::Fp_model
mulv	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^mulv(__m128i A, __m128i B)$/;"	f	file:
mutex	zcash/support/pagelocker.h	/^    boost::mutex mutex;$/;"	m	class:LockedPageManagerBase
mutex	zcash/sync.h	/^    boost::mutex mutex;$/;"	m	class:CSemaphore
mutexDebugLog	zcash/zcashutil.cpp	/^static boost::mutex* mutexDebugLog = NULL;$/;"	v	file:
mutexName	zcash/sync.cpp	/^    std::string mutexName;$/;"	m	struct:CLockLocation	file:
mutex_H	libsodium/src/libsodium/include/sodium/private/mutex.h	2;"	d
my_Fp	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    typedef Fp_model<n, modulus> my_Fp;$/;"	t	class:libsnark::Fp12_2over3over2_model
my_Fp	libsnark/src/algebra/fields/fp2.hpp	/^    typedef Fp_model<n, modulus> my_Fp;$/;"	t	class:libsnark::Fp2_model
my_Fp	libsnark/src/algebra/fields/fp3.hpp	/^    typedef Fp_model<n, modulus> my_Fp;$/;"	t	class:libsnark::Fp3_model
my_Fp	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    typedef Fp_model<n, modulus> my_Fp;$/;"	t	class:libsnark::Fp6_3over2_model
my_Fp2	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    typedef Fp2_model<n, modulus> my_Fp2;$/;"	t	class:libsnark::Fp12_2over3over2_model
my_Fp2	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    typedef Fp2_model<n, modulus> my_Fp2;$/;"	t	class:libsnark::Fp6_3over2_model
my_Fp6	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    typedef Fp6_3over2_model<n, modulus> my_Fp6;$/;"	t	class:libsnark::Fp12_2over3over2_model
n	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const size_t n;$/;"	m	class:libsnark::comparison_gadget
n	libsodium/test/default/box7.c	/^static unsigned char n[crypto_box_NONCEBYTES];$/;"	v	file:
n	libsodium/test/default/box8.c	/^static unsigned char n[crypto_box_NONCEBYTES];$/;"	v	file:
n	libsodium/test/default/secretbox7.c	/^static unsigned char n[crypto_secretbox_NONCEBYTES];$/;"	v	file:
n	libsodium/test/default/secretbox8.c	/^static unsigned char n[crypto_secretbox_NONCEBYTES];$/;"	v	file:
n	zcash/primitives/transaction.h	/^    uint32_t n;$/;"	m	class:COutPoint
n	zcash/secp256k1/src/field_10x26.h	/^    uint32_t n[10];$/;"	m	struct:__anon42
n	zcash/secp256k1/src/field_10x26.h	/^    uint32_t n[8];$/;"	m	struct:__anon43
n	zcash/secp256k1/src/field_5x52.h	/^    uint64_t n[4];$/;"	m	struct:__anon46
n	zcash/secp256k1/src/field_5x52.h	/^    uint64_t n[5];$/;"	m	struct:__anon45
n	zcash/serialize.h	/^    I &n;$/;"	m	class:CVarInt
nBits	zcash/primitives/block.h	/^    uint32_t nBits;$/;"	m	class:CBlockHeader
nChild	zcash/key.h	/^    unsigned int nChild;$/;"	m	struct:CExtKey
nChild	zcash/pubkey.h	/^    unsigned int nChild;$/;"	m	struct:CExtPubKey
nDefaultMaxNumSize	zcash/script/script.h	/^    static const size_t nDefaultMaxNumSize = 4;$/;"	m	class:CScriptNum
nDepth	zcash/key.h	/^    unsigned char nDepth;$/;"	m	struct:CExtKey
nDepth	zcash/pubkey.h	/^    unsigned char nDepth;$/;"	m	struct:CExtPubKey
nDoS	zcash/consensus/validation.h	/^    int nDoS;$/;"	m	class:CValidationState
nHashType	zcash/script/sign.h	/^    int nHashType;$/;"	m	class:TransactionSignatureCreator
nIn	zcash/script/interpreter.cpp	/^    const unsigned int nIn;    \/\/! input index of txTo being signed$/;"	m	class:__anon21::CTransactionSignatureSerializer	file:
nIn	zcash/script/interpreter.h	/^    unsigned int nIn;$/;"	m	class:TransactionSignatureChecker
nIn	zcash/script/sign.h	/^    unsigned int nIn;$/;"	m	class:TransactionSignatureCreator
nLockTime	zcash/primitives/transaction.h	/^    const uint32_t nLockTime;$/;"	m	class:CTransaction
nLockTime	zcash/primitives/transaction.h	/^    uint32_t nLockTime;$/;"	m	struct:CMutableTransaction
nMajorityEnforceBlockUpgrade	zcash/consensus/params.h	/^    int nMajorityEnforceBlockUpgrade;$/;"	m	struct:Consensus::Params
nMajorityRejectBlockOutdated	zcash/consensus/params.h	/^    int nMajorityRejectBlockOutdated;$/;"	m	struct:Consensus::Params
nMajorityWindow	zcash/consensus/params.h	/^    int nMajorityWindow;$/;"	m	struct:Consensus::Params
nMaxDatacarrierBytes	zcash/script/standard.cpp	/^unsigned nMaxDatacarrierBytes = MAX_OP_RETURN_RELAY;$/;"	v
nMockTime	zcash/utiltime.cpp	/^static int64_t nMockTime = 0;  \/\/! For unit testing$/;"	v	file:
nNonce	zcash/primitives/block.h	/^    uint256 nNonce;$/;"	m	class:CBlockHeader
nPowAveragingWindow	zcash/consensus/params.h	/^    int64_t nPowAveragingWindow;$/;"	m	struct:Consensus::Params
nPowMaxAdjustDown	zcash/consensus/params.h	/^    int64_t nPowMaxAdjustDown;$/;"	m	struct:Consensus::Params
nPowMaxAdjustUp	zcash/consensus/params.h	/^    int64_t nPowMaxAdjustUp;$/;"	m	struct:Consensus::Params
nPowTargetSpacing	zcash/consensus/params.h	/^    int64_t nPowTargetSpacing;$/;"	m	struct:Consensus::Params
nReadLimit	zcash/streams.h	/^    uint64_t nReadLimit;  \/\/ up to which position we're allowed to read$/;"	m	class:CBufferedFile
nReadPos	zcash/streams.h	/^    uint64_t nReadPos;    \/\/ how many bytes have been read from this$/;"	m	class:CBufferedFile
nReadPos	zcash/streams.h	/^    unsigned int nReadPos;$/;"	m	class:CBaseDataStream
nRewind	zcash/streams.h	/^    uint64_t nRewind;     \/\/ how many bytes we guarantee to rewind$/;"	m	class:CBufferedFile
nSatoshisPerK	zcash/amount.h	/^    CAmount nSatoshisPerK; \/\/ unit is satoshis-per-1,000-bytes$/;"	m	class:CFeeRate
nSequence	zcash/primitives/transaction.h	/^    uint32_t nSequence;$/;"	m	class:CTxIn
nSize	zcash/serialize.h	/^    size_t nSize;$/;"	m	class:CSizeComputer
nSolution	zcash/primitives/block.h	/^    std::vector<unsigned char> nSolution;$/;"	m	class:CBlockHeader
nSrcPos	zcash/streams.h	/^    uint64_t nSrcPos;     \/\/ how many bytes have been read from source$/;"	m	class:CBufferedFile
nSubsidyHalvingInterval	zcash/consensus/params.h	/^    int nSubsidyHalvingInterval;$/;"	m	struct:Consensus::Params
nSubsidySlowStartInterval	zcash/consensus/params.h	/^    int nSubsidySlowStartInterval;$/;"	m	struct:Consensus::Params
nTime	zcash/primitives/block.h	/^    uint32_t nTime;$/;"	m	class:CBlockHeader
nType	zcash/hash.h	/^    int nType;$/;"	m	class:CHashWriter
nType	zcash/serialize.h	/^    int nType;$/;"	m	class:CSizeComputer
nType	zcash/streams.h	/^    int nType;$/;"	m	class:CAutoFile
nType	zcash/streams.h	/^    int nType;$/;"	m	class:CBaseDataStream
nType	zcash/streams.h	/^    int nType;$/;"	m	class:CBufferedFile
nValue	zcash/primitives/transaction.h	/^    CAmount nValue;$/;"	m	class:CTxOut
nVersion	zcash/hash.h	/^    int nVersion;$/;"	m	class:CHashWriter
nVersion	zcash/primitives/block.h	/^    int32_t nVersion;$/;"	m	class:CBlockHeader
nVersion	zcash/primitives/transaction.h	/^    const int32_t nVersion;$/;"	m	class:CTransaction
nVersion	zcash/primitives/transaction.h	/^    int32_t nVersion;$/;"	m	struct:CMutableTransaction
nVersion	zcash/serialize.h	/^    int nVersion;$/;"	m	class:CSizeComputer
nVersion	zcash/streams.h	/^    int nVersion;$/;"	m	class:CAutoFile
nVersion	zcash/streams.h	/^    int nVersion;$/;"	m	class:CBaseDataStream
nVersion	zcash/streams.h	/^    int nVersion;$/;"	m	class:CBufferedFile
naive_exp	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^T naive_exp(typename std::vector<T>::const_iterator vec_start,$/;"	f	namespace:libsnark
naive_plain_exp	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^T naive_plain_exp(typename std::vector<T>::const_iterator vec_start,$/;"	f	namespace:libsnark
nativeECDSABuffer	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static ThreadLocal<ByteBuffer> nativeECDSABuffer = new ThreadLocal<ByteBuffer>();$/;"	f	class:NativeSecp256k1	file:
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^neg  %r12$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^neg  %r10$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^neg  %r11$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^neg  %r12$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^neg  %r13$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^neg  %r10$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^neg  %r11$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^neg  %r12$/;"	l
neg	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^neg  %r13$/;"	l
neg	zcash/secp256k1/src/num_gmp.h	/^    int neg;$/;"	m	struct:__anon38
negative	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^negative(signed char b)$/;"	f	file:
new_a	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> new_a;$/;"	m	class:libsnark::sha256_round_function_gadget
new_block	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    pb_variable_array<FieldT> new_block;$/;"	m	class:libsnark::sha256_compression_function_gadget
new_e	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_linear_combination_array<FieldT> new_e;$/;"	m	class:libsnark::sha256_round_function_gadget
new_shaobject	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^def new_shaobject():$/;"	f
next	zcash/IncrementalMerkleTree.cpp	/^    Hash next(size_t depth) {$/;"	f	class:libzcash::PathFiller
next_depth	zcash/IncrementalMerkleTree.cpp	/^size_t IncrementalMerkleTree<Depth, Hash>::next_depth(size_t skip) const {$/;"	f	class:libzcash::IncrementalMerkleTree
next_free_lc	libsnark/src/gadgetlib1/protoboard.hpp	/^    lc_index_t next_free_lc;$/;"	m	class:libsnark::protoboard
next_free_var	libsnark/src/gadgetlib1/protoboard.hpp	/^    var_index_t next_free_var;$/;"	m	class:libsnark::protoboard
next_hasher_inputs	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::vector<block_variable<FieldT> > next_hasher_inputs;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
next_hashers	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::vector<HashT> next_hashers;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
next_internal_output	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::vector<digest_variable<FieldT> > next_internal_output;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
next_leaf_digest	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    digest_variable<FieldT> next_leaf_digest;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
next_path	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    merkle_authentication_path_variable<FieldT, HashT> next_path;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
next_propagators	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::vector<digest_selector_gadget<FieldT> > next_propagators;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
next_root_digest	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    digest_variable<FieldT> next_root_digest;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
no_tools	libsodium/builds/msvc/build/buildbase.bat	/^:no_tools$/;"	l
nobase_include_HEADERS	libsodium/src/libsodium/include/Makefile	/^nobase_include_HEADERS = $(SODIUM_EXPORT)$/;"	m
nobase_nodist_include_HEADERS	libsodium/src/libsodium/include/Makefile	/^nobase_nodist_include_HEADERS = \\$/;"	m
node_depth	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t node_depth;                      \/* 17 *\/$/;"	m	struct:blake2b_param_
node_offset	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t node_offset[8];                  \/* 16 *\/$/;"	m	struct:blake2b_param_
noinst_HEADERS	libsodium/src/libsodium/Makefile	/^noinst_HEADERS = \\$/;"	m
noinst_HEADERS	zcash/secp256k1/Makefile	/^noinst_HEADERS = src\/scalar.h src\/scalar_4x64.h src\/scalar_8x32.h \\$/;"	m
noinst_LTLIBRARIES	libsodium/src/libsodium/Makefile	/^noinst_LTLIBRARIES = libaesni.la libsse2.la libssse3.la libsse41.la libavx2.la$/;"	m
noinst_PROGRAMS	zcash/secp256k1/Makefile	/^noinst_PROGRAMS = $(am__EXEEXT_1) $(am__EXEEXT_2) $(am__EXEEXT_3) \\$/;"	m
non_residue	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    static Fp2_model<n, modulus> non_residue;$/;"	m	class:libsnark::Fp12_2over3over2_model
non_residue	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^Fp2_model<n, modulus> Fp12_2over3over2_model<n, modulus>::non_residue;$/;"	m	class:libsnark::Fp12_2over3over2_model
non_residue	libsnark/src/algebra/fields/fp2.hpp	/^    static my_Fp non_residue; \/\/ X^4-non_residue irreducible over Fp; used for constructing Fp2 = Fp[X] \/ (X^2 - non_residue)$/;"	m	class:libsnark::Fp2_model
non_residue	libsnark/src/algebra/fields/fp2.hpp	/^Fp_model<n, modulus> Fp2_model<n, modulus>::non_residue;$/;"	m	class:libsnark::Fp2_model
non_residue	libsnark/src/algebra/fields/fp3.hpp	/^    static my_Fp non_residue; \/\/ X^6-non_residue irreducible over Fp; used for constructing Fp3 = Fp[X] \/ (X^3 - non_residue)$/;"	m	class:libsnark::Fp3_model
non_residue	libsnark/src/algebra/fields/fp3.hpp	/^Fp_model<n, modulus> Fp3_model<n, modulus>::non_residue;$/;"	m	class:libsnark::Fp3_model
non_residue	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    static my_Fp2 non_residue;$/;"	m	class:libsnark::Fp6_3over2_model
non_residue	libsnark/src/algebra/fields/fp6_3over2.hpp	/^Fp2_model<n, modulus> Fp6_3over2_model<n, modulus>::non_residue;$/;"	m	class:libsnark::Fp6_3over2_model
nonce	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    uint64_t      nonce;$/;"	m	struct:Salsa20Random_	file:
nonce	libsodium/test/default/box.c	/^static const unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
nonce	libsodium/test/default/box2.c	/^static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
nonce	libsodium/test/default/box_easy.c	/^static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
nonce	libsodium/test/default/secretbox.c	/^static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
nonce	libsodium/test/default/secretbox2.c	/^static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
nonce	libsodium/test/default/secretbox_easy.c	/^static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
nonce	libsodium/test/default/stream.c	/^static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
nonce	libsodium/test/default/stream3.c	/^static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
nonce	libsodium/test/default/stream4.c	/^static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
nonce	libsodium/test/default/xchacha20.c	/^    const char  nonce[crypto_secretbox_xchacha20poly1305_NONCEBYTES * 2 + 1];$/;"	m	struct:XChaCha20Poly1305TV_	file:
nonce	libsodium/test/default/xchacha20.c	/^    const char nonce[crypto_stream_xchacha20_NONCEBYTES * 2 + 1];$/;"	m	struct:XChaCha20TV_	file:
nonce	zcash/NoteEncryption.hpp	/^    unsigned char nonce;$/;"	m	class:libzcash::NoteEncryption
nonce_function_rfc6979	zcash/secp256k1/src/secp256k1.c	/^static int nonce_function_rfc6979(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {$/;"	f	file:
nonce_function_test_fail	zcash/secp256k1/src/tests.c	/^static int nonce_function_test_fail(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {$/;"	f	file:
nonce_function_test_retry	zcash/secp256k1/src/tests.c	/^static int nonce_function_test_retry(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {$/;"	f	file:
nonce_hex	libsodium/test/default/aead_aes256gcm.c	/^    const char *nonce_hex;$/;"	m	struct:__anon2	file:
nonceprefix	libsodium/test/default/core2.c	/^static unsigned char nonceprefix[16] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,$/;"	v	file:
noncesuffix	libsodium/test/default/core3.c	/^static unsigned char noncesuffix[8] = { 0x82, 0x19, 0xe0, 0x03,$/;"	v	file:
noncesuffix	libsodium/test/default/stream2.c	/^static unsigned char noncesuffix[8] = { 0x82, 0x19, 0xe0, 0x03,$/;"	v	file:
normalized	zcash/secp256k1/src/field_10x26.h	/^    int normalized;$/;"	m	struct:__anon42
normalized	zcash/secp256k1/src/field_5x52.h	/^    int normalized;$/;"	m	struct:__anon45
not_all_zeros	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable<FieldT> not_all_zeros;$/;"	m	class:libsnark::comparison_gadget
note	zcash/JoinSplit.cpp	/^Note JSOutput::note(const uint252& phi, const uint256& r, size_t i,$/;"	f	class:libzcash::JSOutput
note	zcash/JoinSplit.hpp	/^    Note note;$/;"	m	class:libzcash::JSInput
note	zcash/Note.cpp	/^Note NotePlaintext::note(const PaymentAddress& addr) const$/;"	f	class:libzcash::NotePlaintext
note_commitment_gadget	zcash/circuit/commitment.tcc	/^    note_commitment_gadget($/;"	f	class:note_commitment_gadget
note_commitment_gadget	zcash/circuit/commitment.tcc	/^class note_commitment_gadget : gadget<FieldT> {$/;"	c	file:
note_decryption_failed	zcash/NoteEncryption.hpp	/^    note_decryption_failed() : std::runtime_error("Could not decrypt message") { }$/;"	f	class:libzcash::note_decryption_failed
note_decryption_failed	zcash/NoteEncryption.hpp	/^class note_decryption_failed : public std::runtime_error {$/;"	c	namespace:libzcash
note_gadget	zcash/circuit/note.tcc	/^    note_gadget(protoboard<FieldT> &pb) : gadget<FieldT>(pb) {$/;"	f	class:note_gadget
note_gadget	zcash/circuit/note.tcc	/^class note_gadget : public gadget<FieldT> {$/;"	c	file:
nqr	libsnark/src/algebra/fields/fp.hpp	/^    static Fp_model<n, modulus> nqr; \/\/ a quadratic nonresidue$/;"	m	class:libsnark::Fp_model
nqr	libsnark/src/algebra/fields/fp.hpp	/^Fp_model<n, modulus> Fp_model<n, modulus>::nqr;$/;"	m	class:libsnark::Fp_model
nqr	libsnark/src/algebra/fields/fp2.hpp	/^    static Fp2_model<n, modulus> nqr; \/\/ a quadratic nonresidue in Fp2$/;"	m	class:libsnark::Fp2_model
nqr	libsnark/src/algebra/fields/fp2.hpp	/^Fp2_model<n, modulus> Fp2_model<n, modulus>::nqr;$/;"	m	class:libsnark::Fp2_model
nqr	libsnark/src/algebra/fields/fp3.hpp	/^    static Fp3_model<n, modulus> nqr; \/\/ a quadratic nonresidue in Fp3$/;"	m	class:libsnark::Fp3_model
nqr	libsnark/src/algebra/fields/fp3.hpp	/^Fp3_model<n, modulus> Fp3_model<n, modulus>::nqr;$/;"	m	class:libsnark::Fp3_model
nqr_to_t	libsnark/src/algebra/fields/fp.hpp	/^    static Fp_model<n, modulus> nqr_to_t; \/\/ nqr^t$/;"	m	class:libsnark::Fp_model
nqr_to_t	libsnark/src/algebra/fields/fp.hpp	/^Fp_model<n, modulus> Fp_model<n, modulus>::nqr_to_t;$/;"	m	class:libsnark::Fp_model
nqr_to_t	libsnark/src/algebra/fields/fp2.hpp	/^    static Fp2_model<n, modulus> nqr_to_t; \/\/ nqr^t$/;"	m	class:libsnark::Fp2_model
nqr_to_t	libsnark/src/algebra/fields/fp2.hpp	/^Fp2_model<n, modulus> Fp2_model<n, modulus>::nqr_to_t;$/;"	m	class:libsnark::Fp2_model
nqr_to_t	libsnark/src/algebra/fields/fp3.hpp	/^    static Fp3_model<n, modulus> nqr_to_t; \/\/ nqr^t$/;"	m	class:libsnark::Fp3_model
nqr_to_t	libsnark/src/algebra/fields/fp3.hpp	/^Fp3_model<n, modulus> Fp3_model<n, modulus>::nqr_to_t;$/;"	m	class:libsnark::Fp3_model
nullifier	zcash/JoinSplit.hpp	/^    uint256 nullifier() const {$/;"	f	class:libzcash::JSInput
nullifier	zcash/Note.cpp	/^uint256 Note::nullifier(const SpendingKey& a_sk) const {$/;"	f	class:libzcash::Note
nullifiers	zcash/primitives/transaction.h	/^    boost::array<uint256, ZC_NUM_JS_INPUTS> nullifiers;$/;"	m	class:JSDescription
num_bits	libsnark/src/algebra/fields/bigint.tcc	/^size_t bigint<n>::num_bits() const$/;"	f	class:libsnark::bigint
num_bits	libsnark/src/algebra/fields/fp.hpp	/^    static size_t num_bits;$/;"	m	class:libsnark::Fp_model
num_bits	libsnark/src/algebra/fields/fp.hpp	/^size_t Fp_model<n, modulus>::num_bits;$/;"	m	class:libsnark::Fp_model
num_chunks	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const size_t num_chunks;$/;"	m	class:libsnark::bit_vector_copy_gadget
num_chunks	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const size_t num_chunks;$/;"	m	class:libsnark::multipacking_gadget
num_constraints	libsnark/src/gadgetlib1/protoboard.tcc	/^size_t protoboard<FieldT>::num_constraints() const$/;"	f	class:libsnark::protoboard
num_constraints	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^size_t r1cs_constraint_system<FieldT>::num_constraints() const$/;"	f	class:libsnark::r1cs_constraint_system
num_inputs	libsnark/src/gadgetlib1/protoboard.tcc	/^size_t protoboard<FieldT>::num_inputs() const$/;"	f	class:libsnark::protoboard
num_inputs	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^size_t qap_instance<FieldT>::num_inputs() const$/;"	f	class:libsnark::qap_instance
num_inputs	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^size_t qap_instance_evaluation<FieldT>::num_inputs() const$/;"	f	class:libsnark::qap_instance_evaluation
num_inputs	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^size_t qap_witness<FieldT>::num_inputs() const$/;"	f	class:libsnark::qap_witness
num_inputs	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^size_t r1cs_constraint_system<FieldT>::num_inputs() const$/;"	f	class:libsnark::r1cs_constraint_system
num_inputs_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    size_t num_inputs_;$/;"	m	class:libsnark::qap_instance
num_inputs_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    size_t num_inputs_;$/;"	m	class:libsnark::qap_instance_evaluation
num_inputs_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    size_t num_inputs_;$/;"	m	class:libsnark::qap_witness
num_limbs	libsnark/src/algebra/fields/fp.hpp	/^    static const mp_size_t num_limbs = n;$/;"	m	class:libsnark::Fp_model
num_variables	libsnark/src/gadgetlib1/protoboard.tcc	/^size_t protoboard<FieldT>::num_variables() const$/;"	f	class:libsnark::protoboard
num_variables	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^size_t qap_instance<FieldT>::num_variables() const$/;"	f	class:libsnark::qap_instance
num_variables	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^size_t qap_instance_evaluation<FieldT>::num_variables() const$/;"	f	class:libsnark::qap_instance_evaluation
num_variables	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^size_t qap_witness<FieldT>::num_variables() const$/;"	f	class:libsnark::qap_witness
num_variables	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^size_t r1cs_constraint_system<FieldT>::num_variables() const$/;"	f	class:libsnark::r1cs_constraint_system
num_variables_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    size_t num_variables_;$/;"	m	class:libsnark::qap_instance
num_variables_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    size_t num_variables_;$/;"	m	class:libsnark::qap_instance_evaluation
num_variables_	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    size_t num_variables_;$/;"	m	class:libsnark::qap_witness
obtain_event	zcash/support/events.h	/^raii_event obtain_event(struct event_base* base, evutil_socket_t s, short events, event_callback_fn cb, void* arg) {$/;"	f
obtain_event_base	zcash/support/events.h	/^raii_event_base obtain_event_base() {$/;"	f
obtain_evhttp	zcash/support/events.h	/^raii_evhttp obtain_evhttp(struct event_base* base) {$/;"	f
obtain_evhttp_connection_base	zcash/support/events.h	/^raii_evhttp_connection obtain_evhttp_connection_base(struct event_base* base, std::string host, uint16_t port) {$/;"	f
obtain_evhttp_request	zcash/support/events.h	/^raii_evhttp_request obtain_evhttp_request(void(*cb)(struct evhttp_request *, void *), void *arg) {$/;"	f
octx	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h	/^    crypto_hash_sha256_state octx;$/;"	m	struct:crypto_auth_hmacsha256_state
octx	libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h	/^    crypto_hash_sha512_state octx;$/;"	m	struct:crypto_auth_hmacsha512_state
oldincludedir	Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	demo/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/contrib/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/dist-build/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/msvc-scripts/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/src/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/src/libsodium/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/src/libsodium/include/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/test/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	libsodium/test/default/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	zcash/Makefile	/^oldincludedir = \/usr\/include$/;"	m
oldincludedir	zcash/secp256k1/Makefile	/^oldincludedir = \/usr\/include$/;"	m
omega	libsnark/src/algebra/evaluation_domain/domains/basic_radix2_domain.hpp	/^    FieldT omega;$/;"	m	class:libsnark::basic_radix2_domain
one	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::one()$/;"	f	class:libsnark::alt_bn128_G1
one	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::one()$/;"	f	class:libsnark::alt_bn128_G2
one	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::one()$/;"	f	class:libsnark::Fp_model
one	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::one()$/;"	f	class:libsnark::Fp12_2over3over2_model
one	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::one()$/;"	f	class:libsnark::Fp2_model
one	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::one()$/;"	f	class:libsnark::Fp3_model
one	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::one()$/;"	f	class:libsnark::Fp6_3over2_model
one	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^knowledge_commitment<T1,T2> knowledge_commitment<T1,T2>::one()$/;"	f	class:libsnark::knowledge_commitment
onetimeauth	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth)(unsigned char *out, const unsigned char *in,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
onetimeauth2_DEPENDENCIES	libsodium/test/default/Makefile	/^onetimeauth2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
onetimeauth2_LDADD	libsodium/test/default/Makefile	/^onetimeauth2_LDADD = $(TESTS_LDADD)$/;"	m
onetimeauth2_OBJECTS	libsodium/test/default/Makefile	/^onetimeauth2_OBJECTS = onetimeauth2.$(OBJEXT)$/;"	m
onetimeauth2_SOURCE	libsodium/test/default/Makefile	/^onetimeauth2_SOURCE = cmptest.h onetimeauth2.c$/;"	m
onetimeauth2_SOURCES	libsodium/test/default/Makefile	/^onetimeauth2_SOURCES = onetimeauth2.c$/;"	m
onetimeauth7_DEPENDENCIES	libsodium/test/default/Makefile	/^onetimeauth7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
onetimeauth7_LDADD	libsodium/test/default/Makefile	/^onetimeauth7_LDADD = $(TESTS_LDADD)$/;"	m
onetimeauth7_OBJECTS	libsodium/test/default/Makefile	/^onetimeauth7_OBJECTS = onetimeauth7.$(OBJEXT)$/;"	m
onetimeauth7_SOURCE	libsodium/test/default/Makefile	/^onetimeauth7_SOURCE = cmptest.h onetimeauth7.c$/;"	m
onetimeauth7_SOURCES	libsodium/test/default/Makefile	/^onetimeauth7_SOURCES = onetimeauth7.c$/;"	m
onetimeauth_DEPENDENCIES	libsodium/test/default/Makefile	/^onetimeauth_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
onetimeauth_LDADD	libsodium/test/default/Makefile	/^onetimeauth_LDADD = $(TESTS_LDADD)$/;"	m
onetimeauth_OBJECTS	libsodium/test/default/Makefile	/^onetimeauth_OBJECTS = onetimeauth.$(OBJEXT)$/;"	m
onetimeauth_SOURCE	libsodium/test/default/Makefile	/^onetimeauth_SOURCE = cmptest.h onetimeauth.c$/;"	m
onetimeauth_SOURCES	libsodium/test/default/Makefile	/^onetimeauth_SOURCES = onetimeauth.c$/;"	m
onetimeauth_final	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth_final)(crypto_onetimeauth_poly1305_state *state,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
onetimeauth_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth_init)(crypto_onetimeauth_poly1305_state *state,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
onetimeauth_poly1305_H	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	3;"	d
onetimeauth_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth_update)(crypto_onetimeauth_poly1305_state *state,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
onetimeauth_verify	libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h	/^    int (*onetimeauth_verify)(const unsigned char *h, const unsigned char *in,$/;"	m	struct:crypto_onetimeauth_poly1305_implementation
op_counts	libsnark/src/common/profiling.cpp	/^std::map<std::pair<std::string, std::string>, long long> op_counts;$/;"	m	namespace:libsnark	file:
op_data_points	libsnark/src/common/profiling.cpp	/^std::list<std::pair<std::string, long long*> > op_data_points = {$/;"	m	namespace:libsnark	file:
op_profiling_enter	libsnark/src/common/profiling.cpp	/^void op_profiling_enter(const std::string &msg)$/;"	f	namespace:libsnark
opcodetype	zcash/script/script.h	/^enum opcodetype$/;"	g
operator !	zcash/arith_uint256.h	/^    bool operator!() const$/;"	f	class:base_uint
operator !=	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^bool alt_bn128_G1::operator!=(const alt_bn128_G1& other) const$/;"	f	class:libsnark::alt_bn128_G1
operator !=	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^bool alt_bn128_G2::operator!=(const alt_bn128_G2& other) const$/;"	f	class:libsnark::alt_bn128_G2
operator !=	libsnark/src/algebra/fields/bigint.tcc	/^bool bigint<n>::operator!=(const bigint<n>& other) const$/;"	f	class:libsnark::bigint
operator !=	libsnark/src/algebra/fields/fp.tcc	/^bool Fp_model<n,modulus>::operator!=(const Fp_model& other) const$/;"	f	class:libsnark::Fp_model
operator !=	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^bool Fp12_2over3over2_model<n,modulus>::operator!=(const Fp12_2over3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp12_2over3over2_model
operator !=	libsnark/src/algebra/fields/fp2.tcc	/^bool Fp2_model<n,modulus>::operator!=(const Fp2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp2_model
operator !=	libsnark/src/algebra/fields/fp3.tcc	/^bool Fp3_model<n,modulus>::operator!=(const Fp3_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp3_model
operator !=	libsnark/src/algebra/fields/fp6_3over2.tcc	/^bool Fp6_3over2_model<n,modulus>::operator!=(const Fp6_3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp6_3over2_model
operator !=	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^bool knowledge_commitment<T1,T2>::operator!=(const knowledge_commitment<T1,T2> &other) const$/;"	f	class:libsnark::knowledge_commitment
operator !=	zcash/Proof.hpp	/^    friend bool operator!=(const CompressedG1& a, const CompressedG1& b)$/;"	f	class:libzcash::CompressedG1
operator !=	zcash/Proof.hpp	/^    friend bool operator!=(const CompressedG2& a, const CompressedG2& b)$/;"	f	class:libzcash::CompressedG2
operator !=	zcash/Proof.hpp	/^    friend bool operator!=(const Fq& a, const Fq& b)$/;"	f	class:libzcash::Fq
operator !=	zcash/Proof.hpp	/^    friend bool operator!=(const Fq2& a, const Fq2& b)$/;"	f	class:libzcash::Fq2
operator !=	zcash/Proof.hpp	/^    friend bool operator!=(const ZCProof& a, const ZCProof& b)$/;"	f	class:libzcash::ZCProof
operator !=	zcash/arith_uint256.h	/^    friend inline bool operator!=(const base_uint& a, const base_uint& b) { return memcmp(a.pn, b.pn, sizeof(a.pn)) != 0; }$/;"	f	class:base_uint
operator !=	zcash/arith_uint256.h	/^    friend inline bool operator!=(const base_uint& a, uint64_t b) { return !a.EqualTo(b); }$/;"	f	class:base_uint
operator !=	zcash/primitives/transaction.h	/^    friend bool operator!=(const COutPoint& a, const COutPoint& b)$/;"	f	class:COutPoint
operator !=	zcash/primitives/transaction.h	/^    friend bool operator!=(const CTransaction& a, const CTransaction& b)$/;"	f	class:CTransaction
operator !=	zcash/primitives/transaction.h	/^    friend bool operator!=(const CTxIn& a, const CTxIn& b)$/;"	f	class:CTxIn
operator !=	zcash/primitives/transaction.h	/^    friend bool operator!=(const CTxOut& a, const CTxOut& b)$/;"	f	class:CTxOut
operator !=	zcash/primitives/transaction.h	/^    friend bool operator!=(const JSDescription& a, const JSDescription& b)$/;"	f	class:JSDescription
operator !=	zcash/pubkey.h	/^    friend bool operator!=(const CPubKey& a, const CPubKey& b)$/;"	f	class:CPubKey
operator !=	zcash/script/script.h	/^    inline bool operator!=(const CScriptNum& rhs) const { return operator!=(rhs.m_value); }$/;"	f	class:CScriptNum
operator !=	zcash/script/script.h	/^    inline bool operator!=(const int64_t& rhs) const    { return m_value != rhs; }$/;"	f	class:CScriptNum
operator !=	zcash/uint256.h	/^    friend inline bool operator!=(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) != 0; }$/;"	f	class:base_blob
operator &	zcash/arith_uint256.h	/^    friend inline const base_uint operator&(const base_uint& a, const base_uint& b) { return base_uint(a) &= b; }$/;"	f	class:base_uint
operator &=	zcash/arith_uint256.h	/^    base_uint& operator&=(const base_uint& b)$/;"	f	class:base_uint
operator ()	zcash/crypto/equihash.h	/^    inline bool operator()(const StepRow<W>& a, const StepRow<W>& b) { return memcmp(a.hash, b.hash, len) < 0; }$/;"	f	class:CompareSR
operator ()	zcash/script/standard.cpp	/^    bool operator()(const CKeyID &keyID) const {$/;"	f	class:__anon22::CScriptVisitor
operator ()	zcash/script/standard.cpp	/^    bool operator()(const CNoDestination &dest) const {$/;"	f	class:__anon22::CScriptVisitor
operator ()	zcash/script/standard.cpp	/^    bool operator()(const CScriptID &scriptID) const {$/;"	f	class:__anon22::CScriptVisitor
operator *	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^alt_bn128_G1 operator*(const Fp_model<m,modulus_p> &lhs, const alt_bn128_G1 &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^alt_bn128_G1 operator*(const bigint<m> &lhs, const alt_bn128_G1 &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^alt_bn128_G2 operator*(const Fp_model<m,modulus_p> &lhs, const alt_bn128_G2 &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^alt_bn128_G2 operator*(const bigint<m> &lhs, const alt_bn128_G2 &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/fields/bigint.tcc	/^inline bigint<n+m> bigint<n>::operator*(const bigint<m>& other) const$/;"	f	class:libsnark::bigint
operator *	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::operator*(const Fp_model<n,modulus>& other) const$/;"	f	class:libsnark::Fp_model
operator *	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n, modulus> operator*(const Fp2_model<n, modulus> &lhs, const Fp12_2over3over2_model<n, modulus> &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n, modulus> operator*(const Fp6_3over2_model<n, modulus> &lhs, const Fp12_2over3over2_model<n, modulus> &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n, modulus> operator*(const Fp_model<n, modulus> &lhs, const Fp12_2over3over2_model<n, modulus> &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::operator*(const Fp12_2over3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp12_2over3over2_model
operator *	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n, modulus> operator*(const Fp_model<n, modulus> &lhs, const Fp2_model<n, modulus> &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::operator*(const Fp2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp2_model
operator *	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n, modulus> operator*(const Fp_model<n, modulus> &lhs, const Fp3_model<n, modulus> &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::operator*(const Fp3_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp3_model
operator *	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n, modulus> operator*(const Fp2_model<n, modulus> &lhs, const Fp6_3over2_model<n, modulus> &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n, modulus> operator*(const Fp_model<n, modulus> &lhs, const Fp6_3over2_model<n, modulus> &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::operator*(const Fp6_3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp6_3over2_model
operator *	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^knowledge_commitment<T1,T2> operator*(const Fp_model<m, modulus_p> &lhs, const knowledge_commitment<T1,T2> &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^knowledge_commitment<T1,T2> operator*(const bigint<m> &lhs, const knowledge_commitment<T1,T2> &rhs)$/;"	f	namespace:libsnark
operator *	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> linear_combination<FieldT>::operator*(const FieldT &field_coeff) const$/;"	f	class:libsnark::linear_combination
operator *	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> linear_combination<FieldT>::operator*(const integer_coeff_t int_coeff) const$/;"	f	class:libsnark::linear_combination
operator *	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator*(const FieldT &field_coeff, const linear_combination<FieldT> &lc)$/;"	f	namespace:libsnark
operator *	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator*(const integer_coeff_t int_coeff, const linear_combination<FieldT> &lc)$/;"	f	namespace:libsnark
operator *	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> linear_term<FieldT>::operator*(const FieldT &field_coeff) const$/;"	f	class:libsnark::linear_term
operator *	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> linear_term<FieldT>::operator*(const integer_coeff_t int_coeff) const$/;"	f	class:libsnark::linear_term
operator *	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> operator*(const FieldT &field_coeff, const linear_term<FieldT> &lt)$/;"	f	namespace:libsnark
operator *	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> operator*(const FieldT &field_coeff, const variable<FieldT> &var)$/;"	f	namespace:libsnark
operator *	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> operator*(const integer_coeff_t int_coeff, const linear_term<FieldT> &lt)$/;"	f	namespace:libsnark
operator *	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> operator*(const integer_coeff_t int_coeff, const variable<FieldT> &var)$/;"	f	namespace:libsnark
operator *	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> variable<FieldT>::operator*(const FieldT &field_coeff) const$/;"	f	class:libsnark::variable
operator *	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> variable<FieldT>::operator*(const integer_coeff_t int_coeff) const$/;"	f	class:libsnark::variable
operator *	zcash/arith_uint256.h	/^    friend inline const base_uint operator*(const base_uint& a, const base_uint& b) { return base_uint(a) *= b; }$/;"	f	class:base_uint
operator *	zcash/arith_uint256.h	/^    friend inline const base_uint operator*(const base_uint& a, uint32_t b) { return base_uint(a) *= b; }$/;"	f	class:base_uint
operator *=	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus>& Fp_model<n,modulus>::operator*=(const Fp_model<n,modulus>& other)$/;"	f	class:libsnark::Fp_model
operator *=	zcash/arith_uint256.cpp	/^base_uint<BITS>& base_uint<BITS>::operator*=(const base_uint& b)$/;"	f	class:base_uint
operator *=	zcash/arith_uint256.cpp	/^base_uint<BITS>& base_uint<BITS>::operator*=(uint32_t b32)$/;"	f	class:base_uint
operator +	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::operator+(const alt_bn128_G1 &other) const$/;"	f	class:libsnark::alt_bn128_G1
operator +	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::operator+(const alt_bn128_G2 &other) const$/;"	f	class:libsnark::alt_bn128_G2
operator +	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::operator+(const Fp_model<n,modulus>& other) const$/;"	f	class:libsnark::Fp_model
operator +	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::operator+(const Fp12_2over3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp12_2over3over2_model
operator +	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::operator+(const Fp2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp2_model
operator +	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::operator+(const Fp3_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp3_model
operator +	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::operator+(const Fp6_3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp6_3over2_model
operator +	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^knowledge_commitment<T1,T2> knowledge_commitment<T1,T2>::operator+(const knowledge_commitment<T1,T2> &other) const$/;"	f	class:libsnark::knowledge_commitment
operator +	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> linear_combination<FieldT>::operator+(const linear_combination<FieldT> &other) const$/;"	f	class:libsnark::linear_combination
operator +	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> linear_term<FieldT>::operator+(const linear_combination<FieldT> &other) const$/;"	f	class:libsnark::linear_term
operator +	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator+(const FieldT &field_coeff, const linear_combination<FieldT> &lc)$/;"	f	namespace:libsnark
operator +	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator+(const FieldT &field_coeff, const linear_term<FieldT> &lt)$/;"	f	namespace:libsnark
operator +	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator+(const FieldT &field_coeff, const variable<FieldT> &var)$/;"	f	namespace:libsnark
operator +	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator+(const integer_coeff_t int_coeff, const linear_combination<FieldT> &lc)$/;"	f	namespace:libsnark
operator +	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator+(const integer_coeff_t int_coeff, const linear_term<FieldT> &lt)$/;"	f	namespace:libsnark
operator +	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator+(const integer_coeff_t int_coeff, const variable<FieldT> &var)$/;"	f	namespace:libsnark
operator +	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> variable<FieldT>::operator+(const linear_combination<FieldT> &other) const$/;"	f	class:libsnark::variable
operator +	zcash/arith_uint256.h	/^    friend inline const base_uint operator+(const base_uint& a, const base_uint& b) { return base_uint(a) += b; }$/;"	f	class:base_uint
operator +	zcash/script/script.h	/^    friend CScript operator+(const CScript& a, const CScript& b)$/;"	f	class:CScript
operator +	zcash/script/script.h	/^    inline CScriptNum operator+(   const CScriptNum& rhs) const { return operator+(rhs.m_value);   }$/;"	f	class:CScriptNum
operator +	zcash/script/script.h	/^    inline CScriptNum operator+(   const int64_t& rhs)    const { return CScriptNum(m_value + rhs);}$/;"	f	class:CScriptNum
operator +	zcash/streams.h	/^    friend CBaseDataStream operator+(const CBaseDataStream& a, const CBaseDataStream& b)$/;"	f	class:CBaseDataStream
operator ++	zcash/arith_uint256.h	/^    base_uint& operator++()$/;"	f	class:base_uint
operator ++	zcash/arith_uint256.h	/^    const base_uint operator++(int)$/;"	f	class:base_uint
operator +=	libsnark/src/algebra/fields/bigint.tcc	/^inline void bigint<n>::operator+=(const bigint<m>& other)$/;"	f	class:libsnark::bigint
operator +=	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus>& Fp_model<n,modulus>::operator+=(const Fp_model<n,modulus>& other)$/;"	f	class:libsnark::Fp_model
operator +=	zcash/arith_uint256.h	/^    base_uint& operator+=(const base_uint& b)$/;"	f	class:base_uint
operator +=	zcash/arith_uint256.h	/^    base_uint& operator+=(uint64_t b64)$/;"	f	class:base_uint
operator +=	zcash/script/script.h	/^    CScript& operator+=(const CScript& b)$/;"	f	class:CScript
operator +=	zcash/script/script.h	/^    inline CScriptNum& operator+=( const CScriptNum& rhs)       { return operator+=(rhs.m_value);  }$/;"	f	class:CScriptNum
operator +=	zcash/script/script.h	/^    inline CScriptNum& operator+=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator +=	zcash/streams.h	/^    CBaseDataStream& operator+=(const CBaseDataStream& b)$/;"	f	class:CBaseDataStream
operator -	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::operator-() const$/;"	f	class:libsnark::alt_bn128_G1
operator -	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::operator-(const alt_bn128_G1 &other) const$/;"	f	class:libsnark::alt_bn128_G1
operator -	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::operator-() const$/;"	f	class:libsnark::alt_bn128_G2
operator -	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::operator-(const alt_bn128_G2 &other) const$/;"	f	class:libsnark::alt_bn128_G2
operator -	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::operator-() const$/;"	f	class:libsnark::Fp_model
operator -	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::operator-(const Fp_model<n,modulus>& other) const$/;"	f	class:libsnark::Fp_model
operator -	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::operator-() const$/;"	f	class:libsnark::Fp12_2over3over2_model
operator -	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::operator-(const Fp12_2over3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp12_2over3over2_model
operator -	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::operator-() const$/;"	f	class:libsnark::Fp2_model
operator -	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::operator-(const Fp2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp2_model
operator -	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::operator-() const$/;"	f	class:libsnark::Fp3_model
operator -	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::operator-(const Fp3_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp3_model
operator -	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::operator-() const$/;"	f	class:libsnark::Fp6_3over2_model
operator -	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::operator-(const Fp6_3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp6_3over2_model
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> linear_combination<FieldT>::operator-() const$/;"	f	class:libsnark::linear_combination
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> linear_combination<FieldT>::operator-(const linear_combination<FieldT> &other) const$/;"	f	class:libsnark::linear_combination
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> linear_term<FieldT>::operator-(const linear_combination<FieldT> &other) const$/;"	f	class:libsnark::linear_term
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator-(const FieldT &field_coeff, const linear_combination<FieldT> &lc)$/;"	f	namespace:libsnark
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator-(const FieldT &field_coeff, const linear_term<FieldT> &lt)$/;"	f	namespace:libsnark
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator-(const FieldT &field_coeff, const variable<FieldT> &var)$/;"	f	namespace:libsnark
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator-(const integer_coeff_t int_coeff, const linear_combination<FieldT> &lc)$/;"	f	namespace:libsnark
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator-(const integer_coeff_t int_coeff, const linear_term<FieldT> &lt)$/;"	f	namespace:libsnark
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> operator-(const integer_coeff_t int_coeff, const variable<FieldT> &var)$/;"	f	namespace:libsnark
operator -	libsnark/src/relations/variable.tcc	/^linear_combination<FieldT> variable<FieldT>::operator-(const linear_combination<FieldT> &other) const$/;"	f	class:libsnark::variable
operator -	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> linear_term<FieldT>::operator-() const$/;"	f	class:libsnark::linear_term
operator -	libsnark/src/relations/variable.tcc	/^linear_term<FieldT> variable<FieldT>::operator-() const$/;"	f	class:libsnark::variable
operator -	zcash/arith_uint256.h	/^    const base_uint operator-() const$/;"	f	class:base_uint
operator -	zcash/arith_uint256.h	/^    friend inline const base_uint operator-(const base_uint& a, const base_uint& b) { return base_uint(a) -= b; }$/;"	f	class:base_uint
operator -	zcash/script/script.h	/^    inline CScriptNum operator-(   const CScriptNum& rhs) const { return operator-(rhs.m_value);   }$/;"	f	class:CScriptNum
operator -	zcash/script/script.h	/^    inline CScriptNum operator-(   const int64_t& rhs)    const { return CScriptNum(m_value - rhs);}$/;"	f	class:CScriptNum
operator -	zcash/script/script.h	/^    inline CScriptNum operator-()                         const$/;"	f	class:CScriptNum
operator --	zcash/arith_uint256.h	/^    base_uint& operator--()$/;"	f	class:base_uint
operator --	zcash/arith_uint256.h	/^    const base_uint operator--(int)$/;"	f	class:base_uint
operator -=	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus>& Fp_model<n,modulus>::operator-=(const Fp_model<n,modulus>& other)$/;"	f	class:libsnark::Fp_model
operator -=	zcash/arith_uint256.h	/^    base_uint& operator-=(const base_uint& b)$/;"	f	class:base_uint
operator -=	zcash/arith_uint256.h	/^    base_uint& operator-=(uint64_t b64)$/;"	f	class:base_uint
operator -=	zcash/script/script.h	/^    inline CScriptNum& operator-=( const CScriptNum& rhs)       { return operator-=(rhs.m_value);  }$/;"	f	class:CScriptNum
operator -=	zcash/script/script.h	/^    inline CScriptNum& operator-=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator /	zcash/arith_uint256.h	/^    friend inline const base_uint operator\/(const base_uint& a, const base_uint& b) { return base_uint(a) \/= b; }$/;"	f	class:base_uint
operator /=	zcash/arith_uint256.cpp	/^base_uint<BITS>& base_uint<BITS>::operator\/=(const base_uint& b)$/;"	f	class:base_uint
operator <	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^    bool operator<(const ordered_exponent<n> &other) const$/;"	f	class:libsnark::ordered_exponent
operator <	zcash/Address.hpp	/^    friend inline bool operator<(const PaymentAddress& a, const PaymentAddress& b) {$/;"	f	class:libzcash::PaymentAddress
operator <	zcash/NoteEncryption.hpp	/^    friend inline bool operator<(const NoteDecryption& a, const NoteDecryption& b) {$/;"	f	class:libzcash::NoteDecryption
operator <	zcash/amount.h	/^    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }$/;"	f	class:CFeeRate
operator <	zcash/arith_uint256.h	/^    friend inline bool operator<(const base_uint& a, const base_uint& b) { return a.CompareTo(b) < 0; }$/;"	f	class:base_uint
operator <	zcash/primitives/transaction.h	/^    friend bool operator<(const COutPoint& a, const COutPoint& b)$/;"	f	class:COutPoint
operator <	zcash/pubkey.h	/^    friend bool operator<(const CPubKey& a, const CPubKey& b)$/;"	f	class:CPubKey
operator <	zcash/script/script.h	/^    inline bool operator< (const CScriptNum& rhs) const { return operator< (rhs.m_value); }$/;"	f	class:CScriptNum
operator <	zcash/script/script.h	/^    inline bool operator< (const int64_t& rhs) const    { return m_value <  rhs; }$/;"	f	class:CScriptNum
operator <	zcash/script/standard.h	/^    friend bool operator<(const CNoDestination &a, const CNoDestination &b) { return true; }$/;"	f	class:CNoDestination
operator <	zcash/uint256.h	/^    friend inline bool operator<(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) < 0; }$/;"	f	class:base_blob
operator <<	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^std::ostream& operator<<(std::ostream &out, const alt_bn128_G1 &g)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^std::ostream& operator<<(std::ostream& out, const std::vector<alt_bn128_G1> &v)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^std::ostream& operator<<(std::ostream &out, const alt_bn128_G2 &g)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^std::ostream& operator<<(std::ostream &out, const alt_bn128_ate_G1_precomp &prec_P)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^std::ostream& operator<<(std::ostream &out, const alt_bn128_ate_ell_coeffs &c)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^std::ostream& operator<<(std::ostream& out, const alt_bn128_ate_G2_precomp &prec_Q)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/bigint.tcc	/^std::ostream& operator<<(std::ostream &out, const bigint<n> &b)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/fp.tcc	/^std::ostream& operator<<(std::ostream &out, const Fp_model<n, modulus> &p)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^std::ostream& operator<<(std::ostream &out, const Fp12_2over3over2_model<n, modulus> &el)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^std::ostream& operator<<(std::ostream& out, const std::vector<Fp12_2over3over2_model<n, modulus> > &v)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/fp2.tcc	/^std::ostream& operator<<(std::ostream &out, const Fp2_model<n, modulus> &el)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/fp2.tcc	/^std::ostream& operator<<(std::ostream& out, const std::vector<Fp2_model<n, modulus> > &v)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/fp3.tcc	/^std::ostream& operator<<(std::ostream &out, const Fp3_model<n, modulus> &el)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/fp3.tcc	/^std::ostream& operator<<(std::ostream& out, const std::vector<Fp3_model<n, modulus> > &v)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/fp6_3over2.tcc	/^std::ostream& operator<<(std::ostream &out, const Fp6_3over2_model<n, modulus> &el)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/fields/fp6_3over2.tcc	/^std::ostream& operator<<(std::ostream& out, const std::vector<Fp6_3over2_model<n, modulus> > &v)$/;"	f	namespace:libsnark
operator <<	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^std::ostream& operator<<(std::ostream& out, const knowledge_commitment<T1,T2> &kc)$/;"	f	namespace:libsnark
operator <<	libsnark/src/common/data_structures/accumulation_vector.tcc	/^std::ostream& operator<<(std::ostream& out, const accumulation_vector<T> &v)$/;"	f	namespace:libsnark
operator <<	libsnark/src/common/data_structures/sparse_vector.tcc	/^std::ostream& operator<<(std::ostream& out, const sparse_vector<T> &v)$/;"	f	namespace:libsnark
operator <<	libsnark/src/common/serialization.tcc	/^std::ostream& operator<<(std::ostream& out, const std::map<T1, T2> &m)$/;"	f	namespace:libsnark
operator <<	libsnark/src/common/serialization.tcc	/^std::ostream& operator<<(std::ostream& out, const std::set<T> &s)$/;"	f	namespace:libsnark
operator <<	libsnark/src/common/serialization.tcc	/^std::ostream& operator<<(std::ostream& out, const std::vector<T> &v)$/;"	f	namespace:libsnark
operator <<	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^std::ostream& operator<<(std::ostream &out, const r1cs_constraint<FieldT> &c)$/;"	f	namespace:libsnark
operator <<	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^std::ostream& operator<<(std::ostream &out, const r1cs_constraint_system<FieldT> &cs)$/;"	f	namespace:libsnark
operator <<	libsnark/src/relations/variable.tcc	/^std::ostream& operator<<(std::ostream &out, const linear_combination<FieldT> &lc)$/;"	f	namespace:libsnark
operator <<	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^std::ostream& operator<<(std::ostream &out, const r1cs_ppzksnark_processed_verification_key<ppT> &pvk)$/;"	f	namespace:libsnark
operator <<	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^std::ostream& operator<<(std::ostream &out, const r1cs_ppzksnark_proof<ppT> &proof)$/;"	f	namespace:libsnark
operator <<	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^std::ostream& operator<<(std::ostream &out, const r1cs_ppzksnark_proving_key<ppT> &pk)$/;"	f	namespace:libsnark
operator <<	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^std::ostream& operator<<(std::ostream &out, const r1cs_ppzksnark_verification_key<ppT> &vk)$/;"	f	namespace:libsnark
operator <<	zcash/arith_uint256.h	/^    friend inline const base_uint operator<<(const base_uint& a, int shift) { return base_uint(a) <<= shift; }$/;"	f	class:base_uint
operator <<	zcash/hash.h	/^    CHashWriter& operator<<(const T& obj) {$/;"	f	class:CHashWriter
operator <<	zcash/script/script.h	/^    CScript& operator<<(const CScript& b)$/;"	f	class:CScript
operator <<	zcash/script/script.h	/^    CScript& operator<<(const CScriptNum& b)$/;"	f	class:CScript
operator <<	zcash/script/script.h	/^    CScript& operator<<(const std::vector<unsigned char>& b)$/;"	f	class:CScript
operator <<	zcash/script/script.h	/^    CScript& operator<<(int64_t b) { return push_int64(b); }$/;"	f	class:CScript
operator <<	zcash/script/script.h	/^    CScript& operator<<(opcodetype opcode)$/;"	f	class:CScript
operator <<	zcash/serialize.h	/^    CSizeComputer& operator<<(const T& obj)$/;"	f	class:CSizeComputer
operator <<	zcash/streams.h	/^    CAutoFile& operator<<(const T& obj)$/;"	f	class:CAutoFile
operator <<	zcash/streams.h	/^    CBaseDataStream& operator<<(const T& obj)$/;"	f	class:CBaseDataStream
operator <<=	zcash/arith_uint256.cpp	/^base_uint<BITS>& base_uint<BITS>::operator<<=(unsigned int shift)$/;"	f	class:base_uint
operator <=	zcash/amount.h	/^    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }$/;"	f	class:CFeeRate
operator <=	zcash/arith_uint256.h	/^    friend inline bool operator<=(const base_uint& a, const base_uint& b) { return a.CompareTo(b) <= 0; }$/;"	f	class:base_uint
operator <=	zcash/script/script.h	/^    inline bool operator<=(const CScriptNum& rhs) const { return operator<=(rhs.m_value); }$/;"	f	class:CScriptNum
operator <=	zcash/script/script.h	/^    inline bool operator<=(const int64_t& rhs) const    { return m_value <= rhs; }$/;"	f	class:CScriptNum
operator =	zcash/arith_uint256.h	/^    base_uint& operator=(const base_uint& b)$/;"	f	class:base_uint
operator =	zcash/arith_uint256.h	/^    base_uint& operator=(uint64_t b)$/;"	f	class:base_uint
operator =	zcash/crypto/equihash.cpp	/^FullStepRow<WIDTH>& FullStepRow<WIDTH>::operator=(const FullStepRow<WIDTH>& a)$/;"	f	class:FullStepRow
operator =	zcash/crypto/equihash.cpp	/^TruncatedStepRow<WIDTH>& TruncatedStepRow<WIDTH>::operator=(const TruncatedStepRow<WIDTH>& a)$/;"	f	class:TruncatedStepRow
operator =	zcash/primitives/transaction.cpp	/^CTransaction& CTransaction::operator=(const CTransaction &tx) {$/;"	f	class:CTransaction
operator =	zcash/script/script.h	/^    inline CScriptNum& operator=( const int64_t& rhs)$/;"	f	class:CScriptNum
operator ==	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^bool alt_bn128_G1::operator==(const alt_bn128_G1 &other) const$/;"	f	class:libsnark::alt_bn128_G1
operator ==	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^bool alt_bn128_G2::operator==(const alt_bn128_G2 &other) const$/;"	f	class:libsnark::alt_bn128_G2
operator ==	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^bool  alt_bn128_ate_ell_coeffs::operator==(const alt_bn128_ate_ell_coeffs &other) const$/;"	f	class:libsnark::alt_bn128_ate_ell_coeffs
operator ==	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^bool alt_bn128_ate_G1_precomp::operator==(const alt_bn128_ate_G1_precomp &other) const$/;"	f	class:libsnark::alt_bn128_ate_G1_precomp
operator ==	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^bool alt_bn128_ate_G2_precomp::operator==(const alt_bn128_ate_G2_precomp &other) const$/;"	f	class:libsnark::alt_bn128_ate_G2_precomp
operator ==	libsnark/src/algebra/fields/bigint.tcc	/^bool bigint<n>::operator==(const bigint<n>& other) const$/;"	f	class:libsnark::bigint
operator ==	libsnark/src/algebra/fields/fp.tcc	/^bool Fp_model<n,modulus>::operator==(const Fp_model& other) const$/;"	f	class:libsnark::Fp_model
operator ==	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^bool Fp12_2over3over2_model<n,modulus>::operator==(const Fp12_2over3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp12_2over3over2_model
operator ==	libsnark/src/algebra/fields/fp2.tcc	/^bool Fp2_model<n,modulus>::operator==(const Fp2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp2_model
operator ==	libsnark/src/algebra/fields/fp3.tcc	/^bool Fp3_model<n,modulus>::operator==(const Fp3_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp3_model
operator ==	libsnark/src/algebra/fields/fp6_3over2.tcc	/^bool Fp6_3over2_model<n,modulus>::operator==(const Fp6_3over2_model<n,modulus> &other) const$/;"	f	class:libsnark::Fp6_3over2_model
operator ==	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^bool knowledge_commitment<T1,T2>::operator==(const knowledge_commitment<T1,T2> &other) const$/;"	f	class:libsnark::knowledge_commitment
operator ==	libsnark/src/common/data_structures/accumulation_vector.tcc	/^bool accumulation_vector<T>::operator==(const accumulation_vector<T> &other) const$/;"	f	class:libsnark::accumulation_vector
operator ==	libsnark/src/common/data_structures/sparse_vector.tcc	/^bool sparse_vector<T>::operator==(const sparse_vector<T> &other) const$/;"	f	class:libsnark::sparse_vector
operator ==	libsnark/src/common/data_structures/sparse_vector.tcc	/^bool sparse_vector<T>::operator==(const std::vector<T> &other) const$/;"	f	class:libsnark::sparse_vector
operator ==	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^bool r1cs_constraint<FieldT>::operator==(const r1cs_constraint<FieldT> &other) const$/;"	f	class:libsnark::r1cs_constraint
operator ==	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^bool r1cs_constraint_system<FieldT>::operator==(const r1cs_constraint_system<FieldT> &other) const$/;"	f	class:libsnark::r1cs_constraint_system
operator ==	libsnark/src/relations/variable.tcc	/^bool linear_combination<FieldT>::operator==(const linear_combination<FieldT> &other) const$/;"	f	class:libsnark::linear_combination
operator ==	libsnark/src/relations/variable.tcc	/^bool linear_term<FieldT>::operator==(const linear_term<FieldT> &other) const$/;"	f	class:libsnark::linear_term
operator ==	libsnark/src/relations/variable.tcc	/^bool variable<FieldT>::operator==(const variable<FieldT> &other) const$/;"	f	class:libsnark::variable
operator ==	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^bool r1cs_ppzksnark_processed_verification_key<ppT>::operator==(const r1cs_ppzksnark_processed_verification_key<ppT> &other) const$/;"	f	class:libsnark::r1cs_ppzksnark_processed_verification_key
operator ==	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^bool r1cs_ppzksnark_proof<ppT>::operator==(const r1cs_ppzksnark_proof<ppT> &other) const$/;"	f	class:libsnark::r1cs_ppzksnark_proof
operator ==	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^bool r1cs_ppzksnark_proving_key<ppT>::operator==(const r1cs_ppzksnark_proving_key<ppT> &other) const$/;"	f	class:libsnark::r1cs_ppzksnark_proving_key
operator ==	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^bool r1cs_ppzksnark_verification_key<ppT>::operator==(const r1cs_ppzksnark_verification_key<ppT> &other) const$/;"	f	class:libsnark::r1cs_ppzksnark_verification_key
operator ==	zcash/Address.hpp	/^    friend inline bool operator==(const PaymentAddress& a, const PaymentAddress& b) {$/;"	f	class:libzcash::PaymentAddress
operator ==	zcash/IncrementalMerkleTree.hpp	/^bool operator==(const EmptyMerkleRoots<Depth, Hash>& a,$/;"	f	namespace:libzcash
operator ==	zcash/IncrementalMerkleTree.hpp	/^bool operator==(const IncrementalMerkleTree<Depth, Hash>& a,$/;"	f	namespace:libzcash
operator ==	zcash/IncrementalMerkleTree.hpp	/^bool operator==(const IncrementalWitness<Depth, Hash>& a,$/;"	f	namespace:libzcash
operator ==	zcash/NoteEncryption.hpp	/^    friend inline bool operator==(const NoteDecryption& a, const NoteDecryption& b) {$/;"	f	class:libzcash::NoteDecryption
operator ==	zcash/Proof.hpp	/^    friend bool operator==(const CompressedG1& a, const CompressedG1& b)$/;"	f	class:libzcash::CompressedG1
operator ==	zcash/Proof.hpp	/^    friend bool operator==(const CompressedG2& a, const CompressedG2& b)$/;"	f	class:libzcash::CompressedG2
operator ==	zcash/Proof.hpp	/^    friend bool operator==(const Fq& a, const Fq& b)$/;"	f	class:libzcash::Fq
operator ==	zcash/Proof.hpp	/^    friend bool operator==(const Fq2& a, const Fq2& b)$/;"	f	class:libzcash::Fq2
operator ==	zcash/Proof.hpp	/^    friend bool operator==(const ZCProof& a, const ZCProof& b)$/;"	f	class:libzcash::ZCProof
operator ==	zcash/amount.h	/^    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }$/;"	f	class:CFeeRate
operator ==	zcash/arith_uint256.h	/^    friend inline bool operator==(const base_uint& a, const base_uint& b) { return memcmp(a.pn, b.pn, sizeof(a.pn)) == 0; }$/;"	f	class:base_uint
operator ==	zcash/arith_uint256.h	/^    friend inline bool operator==(const base_uint& a, uint64_t b) { return a.EqualTo(b); }$/;"	f	class:base_uint
operator ==	zcash/key.h	/^    friend bool operator==(const CExtKey& a, const CExtKey& b)$/;"	f	struct:CExtKey
operator ==	zcash/key.h	/^    friend bool operator==(const CKey& a, const CKey& b)$/;"	f	class:CKey
operator ==	zcash/primitives/block.h	/^    friend bool operator==(const CBlockLocator& a, const CBlockLocator& b) {$/;"	f	struct:CBlockLocator
operator ==	zcash/primitives/transaction.h	/^    friend bool operator==(const COutPoint& a, const COutPoint& b)$/;"	f	class:COutPoint
operator ==	zcash/primitives/transaction.h	/^    friend bool operator==(const CTransaction& a, const CTransaction& b)$/;"	f	class:CTransaction
operator ==	zcash/primitives/transaction.h	/^    friend bool operator==(const CTxIn& a, const CTxIn& b)$/;"	f	class:CTxIn
operator ==	zcash/primitives/transaction.h	/^    friend bool operator==(const CTxOut& a, const CTxOut& b)$/;"	f	class:CTxOut
operator ==	zcash/primitives/transaction.h	/^    friend bool operator==(const JSDescription& a, const JSDescription& b)$/;"	f	class:JSDescription
operator ==	zcash/pubkey.h	/^    friend bool operator==(const CExtPubKey &a, const CExtPubKey &b)$/;"	f	struct:CExtPubKey
operator ==	zcash/pubkey.h	/^    friend bool operator==(const CPubKey& a, const CPubKey& b)$/;"	f	class:CPubKey
operator ==	zcash/script/script.h	/^    inline bool operator==(const CScriptNum& rhs) const { return operator==(rhs.m_value); }$/;"	f	class:CScriptNum
operator ==	zcash/script/script.h	/^    inline bool operator==(const int64_t& rhs) const    { return m_value == rhs; }$/;"	f	class:CScriptNum
operator ==	zcash/script/standard.h	/^    friend bool operator==(const CNoDestination &a, const CNoDestination &b) { return true; }$/;"	f	class:CNoDestination
operator ==	zcash/uint252.h	/^    friend inline bool operator==(const uint252& a, const uint252& b) { return a.contents == b.contents; }$/;"	f	class:uint252
operator ==	zcash/uint256.h	/^    friend inline bool operator==(const base_blob& a, const base_blob& b) { return memcmp(a.data, b.data, sizeof(a.data)) == 0; }$/;"	f	class:base_blob
operator >	libsnark/src/algebra/fields/bigint.tcc	/^inline bool bigint<n>::operator>(const bigint<n>& other) const$/;"	f	class:libsnark::bigint
operator >	zcash/amount.h	/^    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }$/;"	f	class:CFeeRate
operator >	zcash/arith_uint256.h	/^    friend inline bool operator>(const base_uint& a, const base_uint& b) { return a.CompareTo(b) > 0; }$/;"	f	class:base_uint
operator >	zcash/script/script.h	/^    inline bool operator> (const CScriptNum& rhs) const { return operator> (rhs.m_value); }$/;"	f	class:CScriptNum
operator >	zcash/script/script.h	/^    inline bool operator> (const int64_t& rhs) const    { return m_value >  rhs; }$/;"	f	class:CScriptNum
operator >=	zcash/amount.h	/^    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }$/;"	f	class:CFeeRate
operator >=	zcash/arith_uint256.h	/^    friend inline bool operator>=(const base_uint& a, const base_uint& b) { return a.CompareTo(b) >= 0; }$/;"	f	class:base_uint
operator >=	zcash/script/script.h	/^    inline bool operator>=(const CScriptNum& rhs) const { return operator>=(rhs.m_value); }$/;"	f	class:CScriptNum
operator >=	zcash/script/script.h	/^    inline bool operator>=(const int64_t& rhs) const    { return m_value >= rhs; }$/;"	f	class:CScriptNum
operator >>	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^std::istream& operator>>(std::istream &in, alt_bn128_G1 &g)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^std::istream& operator>>(std::istream& in, std::vector<alt_bn128_G1> &v)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^std::istream& operator>>(std::istream &in, alt_bn128_G2 &g)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^std::istream& operator>>(std::istream &in, alt_bn128_ate_G1_precomp &prec_P)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^std::istream& operator>>(std::istream &in, alt_bn128_ate_ell_coeffs &c)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pairing.cpp	/^std::istream& operator>>(std::istream& in, alt_bn128_ate_G2_precomp &prec_Q)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/bigint.tcc	/^std::istream& operator>>(std::istream &in, bigint<n> &b)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/fp.tcc	/^std::istream& operator>>(std::istream &in, Fp_model<n, modulus> &p)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^std::istream& operator>>(std::istream &in, Fp12_2over3over2_model<n, modulus> &el)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^std::istream& operator>>(std::istream& in, std::vector<Fp12_2over3over2_model<n, modulus> > &v)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/fp2.tcc	/^std::istream& operator>>(std::istream &in, Fp2_model<n, modulus> &el)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/fp2.tcc	/^std::istream& operator>>(std::istream& in, std::vector<Fp2_model<n, modulus> > &v)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/fp3.tcc	/^std::istream& operator>>(std::istream &in, Fp3_model<n, modulus> &el)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/fp3.tcc	/^std::istream& operator>>(std::istream& in, std::vector<Fp3_model<n, modulus> > &v)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/fp6_3over2.tcc	/^std::istream& operator>>(std::istream &in, Fp6_3over2_model<n, modulus> &el)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/fields/fp6_3over2.tcc	/^std::istream& operator>>(std::istream& in, std::vector<Fp6_3over2_model<n, modulus> > &v)$/;"	f	namespace:libsnark
operator >>	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^std::istream& operator>>(std::istream& in, knowledge_commitment<T1,T2> &kc)$/;"	f	namespace:libsnark
operator >>	libsnark/src/common/data_structures/accumulation_vector.tcc	/^std::istream& operator>>(std::istream& in, accumulation_vector<T> &v)$/;"	f	namespace:libsnark
operator >>	libsnark/src/common/data_structures/sparse_vector.tcc	/^std::istream& operator>>(std::istream& in, sparse_vector<T> &v)$/;"	f	namespace:libsnark
operator >>	libsnark/src/common/serialization.tcc	/^std::istream& operator>>(std::istream& in, std::map<T1, T2> &m)$/;"	f	namespace:libsnark
operator >>	libsnark/src/common/serialization.tcc	/^std::istream& operator>>(std::istream& in, std::set<T> &s)$/;"	f	namespace:libsnark
operator >>	libsnark/src/common/serialization.tcc	/^std::istream& operator>>(std::istream& in, std::vector<T> &v)$/;"	f	namespace:libsnark
operator >>	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^std::istream& operator>>(std::istream &in, r1cs_constraint<FieldT> &c)$/;"	f	namespace:libsnark
operator >>	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^std::istream& operator>>(std::istream &in, r1cs_constraint_system<FieldT> &cs)$/;"	f	namespace:libsnark
operator >>	libsnark/src/relations/variable.tcc	/^std::istream& operator>>(std::istream &in, linear_combination<FieldT> &lc)$/;"	f	namespace:libsnark
operator >>	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^std::istream& operator>>(std::istream &in, r1cs_ppzksnark_processed_verification_key<ppT> &pvk)$/;"	f	namespace:libsnark
operator >>	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^std::istream& operator>>(std::istream &in, r1cs_ppzksnark_proof<ppT> &proof)$/;"	f	namespace:libsnark
operator >>	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^std::istream& operator>>(std::istream &in, r1cs_ppzksnark_proving_key<ppT> &pk)$/;"	f	namespace:libsnark
operator >>	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^std::istream& operator>>(std::istream &in, r1cs_ppzksnark_verification_key<ppT> &vk)$/;"	f	namespace:libsnark
operator >>	zcash/arith_uint256.h	/^    friend inline const base_uint operator>>(const base_uint& a, int shift) { return base_uint(a) >>= shift; }$/;"	f	class:base_uint
operator >>	zcash/script/zcashconsensus.cpp	/^    TxInputStream& operator>>(T& obj)$/;"	f	class:__anon18::TxInputStream
operator >>	zcash/streams.h	/^    CAutoFile& operator>>(T& obj)$/;"	f	class:CAutoFile
operator >>	zcash/streams.h	/^    CBaseDataStream& operator>>(T& obj)$/;"	f	class:CBaseDataStream
operator >>	zcash/streams.h	/^    CBufferedFile& operator>>(T& obj) {$/;"	f	class:CBufferedFile
operator >>=	zcash/arith_uint256.cpp	/^base_uint<BITS>& base_uint<BITS>::operator>>=(unsigned int shift)$/;"	f	class:base_uint
operator []	libsnark/src/common/data_structures/sparse_vector.tcc	/^T sparse_vector<T>::operator[](const size_t idx) const$/;"	f	class:libsnark::sparse_vector
operator []	zcash/pubkey.h	/^    const unsigned char& operator[](unsigned int pos) const { return vch[pos]; }$/;"	f	class:CPubKey
operator []	zcash/streams.h	/^    const_reference operator[](size_type pos) const  { return vch[pos + nReadPos]; }$/;"	f	class:CBaseDataStream
operator []	zcash/streams.h	/^    reference operator[](size_type pos)              { return vch[pos + nReadPos]; }$/;"	f	class:CBaseDataStream
operator ^	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::operator^(const bigint<m> &pow) const$/;"	f	class:libsnark::Fp_model
operator ^	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::operator^(const unsigned long pow) const$/;"	f	class:libsnark::Fp_model
operator ^	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n, modulus> operator^(const Fp12_2over3over2_model<n, modulus> &self, const Fp_model<m, exp_modulus> &exponent)$/;"	f	namespace:libsnark
operator ^	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n, modulus> operator^(const Fp12_2over3over2_model<n, modulus> &self, const bigint<m> &exponent)$/;"	f	namespace:libsnark
operator ^	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::operator^(const bigint<m> &pow) const$/;"	f	class:libsnark::Fp2_model
operator ^	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::operator^(const bigint<m> &pow) const$/;"	f	class:libsnark::Fp3_model
operator ^	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::operator^(const bigint<m> &pow) const$/;"	f	class:libsnark::Fp6_3over2_model
operator ^	zcash/arith_uint256.h	/^    friend inline const base_uint operator^(const base_uint& a, const base_uint& b) { return base_uint(a) ^= b; }$/;"	f	class:base_uint
operator ^=	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus>& Fp_model<n,modulus>::operator^=(const bigint<m> &pow)$/;"	f	class:libsnark::Fp_model
operator ^=	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus>& Fp_model<n,modulus>::operator^=(const unsigned long pow)$/;"	f	class:libsnark::Fp_model
operator ^=	zcash/arith_uint256.h	/^    base_uint& operator^=(const base_uint& b)$/;"	f	class:base_uint
operator ^=	zcash/arith_uint256.h	/^    base_uint& operator^=(uint64_t b)$/;"	f	class:base_uint
operator bool	zcash/sync.h	/^    operator bool()$/;"	f	class:CMutexLock
operator bool	zcash/sync.h	/^    operator bool()$/;"	f	class:CSemaphoreGrant
operator |	zcash/arith_uint256.h	/^    friend inline const base_uint operator|(const base_uint& a, const base_uint& b) { return base_uint(a) |= b; }$/;"	f	class:base_uint
operator |=	zcash/arith_uint256.h	/^    base_uint& operator|=(const base_uint& b)$/;"	f	class:base_uint
operator |=	zcash/arith_uint256.h	/^    base_uint& operator|=(uint64_t b)$/;"	f	class:base_uint
operator ~	zcash/arith_uint256.h	/^    const base_uint operator~() const$/;"	f	class:base_uint
optIndent	zcash/zcashutil.cpp	/^static const int optIndent = 2;$/;"	v	file:
opt_window_wnaf_exp	libsnark/src/algebra/scalar_multiplication/kc_multiexp.tcc	/^knowledge_commitment<T1,T2> opt_window_wnaf_exp(const knowledge_commitment<T1,T2> &base,$/;"	f	namespace:libsnark
opt_window_wnaf_exp	libsnark/src/algebra/scalar_multiplication/wnaf.tcc	/^T opt_window_wnaf_exp(const T &base, const bigint<n> &scalar, const size_t scalar_bits)$/;"	f	namespace:libsnark
or2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	20;"	d
or2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^or2(aes_uint128_t *r, const aes_uint128_t *x)$/;"	f
order	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    static bigint<scalar_field::num_limbs> order() { return scalar_field::field_char(); }$/;"	f	class:libsnark::alt_bn128_G1
order	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    static bigint<scalar_field::num_limbs> order() { return scalar_field::field_char(); }$/;"	f	class:libsnark::alt_bn128_G2
ordered_exponent	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^    ordered_exponent(const size_t idx, const bigint<n> &r) : idx(idx), r(r) {};$/;"	f	class:libsnark::ordered_exponent
ordered_exponent	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^class ordered_exponent {$/;"	c	namespace:libsnark	file:
org.bitcoin	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^package org.bitcoin;$/;"	p
org.bitcoin	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^package org.bitcoin;$/;"	p
org.bitcoin	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Util.java	/^package org.bitcoin;$/;"	p
org.bitcoin	zcash/secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^package org.bitcoin;$/;"	p
other	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.hpp	/^    knowledge_commitment<T1,T2>& operator=(const knowledge_commitment<T1,T2> &other) = default;$/;"	m	struct:libsnark::knowledge_commitment
other	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.hpp	/^    knowledge_commitment<T1,T2>& operator=(knowledge_commitment<T1,T2> &&other) = default;$/;"	m	struct:libsnark::knowledge_commitment
other	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.hpp	/^    knowledge_commitment<T1,T2>(const knowledge_commitment<T1,T2> &other) = default;$/;"	m	struct:libsnark::knowledge_commitment
other	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.hpp	/^    knowledge_commitment<T1,T2>(knowledge_commitment<T1,T2> &&other) = default;$/;"	m	struct:libsnark::knowledge_commitment
other	libsnark/src/common/data_structures/accumulation_vector.hpp	/^    accumulation_vector(accumulation_vector<T> &&other) = default;$/;"	m	class:libsnark::accumulation_vector
other	libsnark/src/common/data_structures/accumulation_vector.hpp	/^    accumulation_vector(const accumulation_vector<T> &other) = default;$/;"	m	class:libsnark::accumulation_vector
other	libsnark/src/common/data_structures/accumulation_vector.hpp	/^    accumulation_vector<T>& operator=(accumulation_vector<T> &&other) = default;$/;"	m	class:libsnark::accumulation_vector
other	libsnark/src/common/data_structures/accumulation_vector.hpp	/^    accumulation_vector<T>& operator=(const accumulation_vector<T> &other) = default;$/;"	m	class:libsnark::accumulation_vector
other	libsnark/src/common/data_structures/sparse_vector.hpp	/^    sparse_vector(const sparse_vector<T> &other) = default;$/;"	m	struct:libsnark::sparse_vector
other	libsnark/src/common/data_structures/sparse_vector.hpp	/^    sparse_vector(sparse_vector<T> &&other) = default;$/;"	m	struct:libsnark::sparse_vector
other	libsnark/src/common/data_structures/sparse_vector.hpp	/^    sparse_vector<T>& operator=(const sparse_vector<T> &other) = default;$/;"	m	struct:libsnark::sparse_vector
other	libsnark/src/common/data_structures/sparse_vector.hpp	/^    sparse_vector<T>& operator=(sparse_vector<T> &&other) = default;$/;"	m	struct:libsnark::sparse_vector
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_instance& operator=(const qap_instance<FieldT> &other) = default;$/;"	m	class:libsnark::qap_instance
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_instance& operator=(qap_instance<FieldT> &&other) = default;$/;"	m	class:libsnark::qap_instance
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_instance(const qap_instance<FieldT> &other) = default;$/;"	m	class:libsnark::qap_instance
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_instance(qap_instance<FieldT> &&other) = default;$/;"	m	class:libsnark::qap_instance
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_instance_evaluation& operator=(const qap_instance_evaluation<FieldT> &other) = default;$/;"	m	class:libsnark::qap_instance_evaluation
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_instance_evaluation& operator=(qap_instance_evaluation<FieldT> &&other) = default;$/;"	m	class:libsnark::qap_instance_evaluation
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_instance_evaluation(const qap_instance_evaluation<FieldT> &other) = default;$/;"	m	class:libsnark::qap_instance_evaluation
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_instance_evaluation(qap_instance_evaluation<FieldT> &&other) = default;$/;"	m	class:libsnark::qap_instance_evaluation
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_witness& operator=(const qap_witness<FieldT> &other) = default;$/;"	m	class:libsnark::qap_witness
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_witness& operator=(qap_witness<FieldT> &&other) = default;$/;"	m	class:libsnark::qap_witness
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_witness(const qap_witness<FieldT> &other) = default;$/;"	m	class:libsnark::qap_witness
other	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    qap_witness(qap_witness<FieldT> &&other) = default;$/;"	m	class:libsnark::qap_witness
other	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.hpp	/^    r1cs_example<FieldT>(const r1cs_example<FieldT> &other) = default;$/;"	m	struct:libsnark::r1cs_example
other	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_keypair(const r1cs_ppzksnark_keypair<ppT> &other) = default;$/;"	m	class:libsnark::r1cs_ppzksnark_keypair
other	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_keypair(r1cs_ppzksnark_keypair<ppT> &&other) = default;$/;"	m	class:libsnark::r1cs_ppzksnark_keypair
other	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_proving_key(const r1cs_ppzksnark_proving_key<ppT> &other) = default;$/;"	m	class:libsnark::r1cs_ppzksnark_proving_key
other	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_proving_key(r1cs_ppzksnark_proving_key<ppT> &&other) = default;$/;"	m	class:libsnark::r1cs_ppzksnark_proving_key
other	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_proving_key<ppT>& operator=(const r1cs_ppzksnark_proving_key<ppT> &other) = default;$/;"	m	class:libsnark::r1cs_ppzksnark_proving_key
other	zcash/support/allocators/secure.h	/^        typedef secure_allocator<_Other> other;$/;"	t	struct:secure_allocator::rebind
other	zcash/support/allocators/zeroafterfree.h	/^        typedef zero_after_free_allocator<_Other> other;$/;"	t	struct:zero_after_free_allocator::rebind
out	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination<FieldT> out;$/;"	m	class:libsnark::XOR3_gadget
out	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *out;    \/* output array *\/$/;"	m	struct:Argon2_Context
out	libsodium/test/default/core4.c	/^static unsigned char out[64];$/;"	v	file:
out	libsodium/test/default/core5.c	/^unsigned char out[32];$/;"	v
out	libsodium/test/default/core6.c	/^static unsigned char out[64];$/;"	v	file:
out	libsodium/test/default/xchacha20.c	/^    const char *out;$/;"	m	struct:XChaCha20Poly1305TV_	file:
out	libsodium/test/default/xchacha20.c	/^    const char out[XCHACHA20_OUT_MAX * 2 + 1];$/;"	m	struct:XChaCha20TV_	file:
out	libsodium/test/default/xchacha20.c	/^    const char out[crypto_core_hchacha20_OUTPUTBYTES * 2 + 1];$/;"	m	struct:HChaCha20TV_	file:
out1	libsodium/test/default/scalarmult7.c	/^static unsigned char out1[32];$/;"	v	file:
out2	libsodium/test/default/scalarmult7.c	/^static unsigned char out2[32];$/;"	v	file:
out_hex	libsodium/test/default/generichash.c	/^    const char *out_hex;$/;"	m	struct:__anon1	file:
outer	zcash/crypto/hmac_sha256.h	/^    CSHA256 outer;$/;"	m	class:CHMAC_SHA256
outer	zcash/crypto/hmac_sha512.h	/^    CSHA512 outer;$/;"	m	class:CHMAC_SHA512
outer	zcash/secp256k1/src/hash.h	/^    secp256k1_sha256_t inner, outer;$/;"	m	struct:__anon50
outlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t outlen; \/* digest length *\/$/;"	m	struct:Argon2_Context
output	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable<FieldT> output;$/;"	m	class:libsnark::conjunction_gadget
output	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable<FieldT> output;$/;"	m	class:libsnark::disjunction_gadget
output	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    digest_variable<FieldT> output;$/;"	m	class:libsnark::sha256_compression_function_gadget
output	libsodium/test/default/core3.c	/^static unsigned char output[64 * 256 * 256];$/;"	v	file:
output	libsodium/test/default/stream.c	/^static unsigned char output[4194304];$/;"	v	file:
output	libsodium/test/default/stream2.c	/^static unsigned char output[4194304];$/;"	v	file:
output_bool	libsnark/src/common/serialization.tcc	/^inline void output_bool(std::ostream &out, const bool b)$/;"	f	namespace:libsnark
output_bool_vector	libsnark/src/common/serialization.tcc	/^inline void output_bool_vector(std::ostream &out, const std::vector<bool> &v)$/;"	f	namespace:libsnark
output_note_gadget	zcash/circuit/note.tcc	/^    output_note_gadget($/;"	f	class:output_note_gadget
output_note_gadget	zcash/circuit/note.tcc	/^class output_note_gadget : public note_gadget<FieldT> {$/;"	c	file:
ovd	zcash/primitives/transaction.h	/^		boost::array<bool, ZC_NUM_JS_INPUTS> ovd;$/;"	m	class:JSDescription
ovd64	zcash/circuit/gadget.tcc	/^		boost::array<pb_variable_array<FieldT>, NumInputs> ovd64;$/;"	m	class:joinsplit_gadget	file:
p1	libsodium/test/default/pwhash_scrypt_ll.c	/^static const uint32_t p1      = 1U;$/;"	v	file:
p1	libsodium/test/default/scalarmult7.c	/^static unsigned char p1[32] = {$/;"	v	file:
p2	libsodium/test/default/pwhash_scrypt_ll.c	/^static const uint32_t p2      = 16U;$/;"	v	file:
p2	libsodium/test/default/scalarmult7.c	/^static unsigned char p2[32] = {$/;"	v	file:
p3	libsodium/test/default/pwhash_scrypt_ll.c	/^static const uint32_t p3      = 1U;$/;"	v	file:
p_util_hexdigit	zcash/utilstrencodings.cpp	/^const signed char p_util_hexdigit[256] =$/;"	v
pack_W	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::vector<std::shared_ptr<packing_gadget<FieldT> > > pack_W;$/;"	m	class:libsnark::sha256_message_schedule_gadget
pack_alpha	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > pack_alpha;$/;"	m	class:libsnark::comparison_gadget
pack_bit_vector_into_field_element_vector	libsnark/src/algebra/fields/field_utils.tcc	/^std::vector<FieldT> pack_bit_vector_into_field_element_vector(const bit_vector &v)$/;"	f	namespace:libsnark
pack_bit_vector_into_field_element_vector	libsnark/src/algebra/fields/field_utils.tcc	/^std::vector<FieldT> pack_bit_vector_into_field_element_vector(const bit_vector &v, const size_t chunk_bits)$/;"	f	namespace:libsnark
pack_d	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > pack_d;$/;"	m	class:libsnark::sha256_round_function_gadget
pack_h	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > pack_h;$/;"	m	class:libsnark::sha256_round_function_gadget
pack_int_vector_into_field_element_vector	libsnark/src/algebra/fields/field_utils.tcc	/^std::vector<FieldT> pack_int_vector_into_field_element_vector(const std::vector<size_t> &v, const size_t w)$/;"	f	namespace:libsnark
pack_result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > pack_result;$/;"	m	class:libsnark::big_sigma_gadget
pack_result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > pack_result;$/;"	m	class:libsnark::choice_gadget
pack_result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > pack_result;$/;"	m	class:libsnark::lastbits_gadget
pack_result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > pack_result;$/;"	m	class:libsnark::majority_gadget
pack_result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > pack_result;$/;"	m	class:libsnark::small_sigma_gadget
pack_source	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    std::shared_ptr<multipacking_gadget<FieldT> > pack_source;$/;"	m	class:libsnark::bit_vector_copy_gadget
pack_target	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    std::shared_ptr<multipacking_gadget<FieldT> > pack_target;$/;"	m	class:libsnark::bit_vector_copy_gadget
packed	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination<FieldT> packed;$/;"	m	class:libsnark::packing_gadget
packed	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable<FieldT> packed;$/;"	m	class:libsnark::dual_variable_gadget
packed_W	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable_array<FieldT> packed_W;$/;"	m	class:libsnark::sha256_message_schedule_gadget
packed_W	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    pb_variable_array<FieldT> packed_W;$/;"	m	class:libsnark::sha256_compression_function_gadget
packed_addition	zcash/circuit/utils.tcc	/^linear_combination<FieldT> packed_addition(pb_variable_array<FieldT> input) {$/;"	f
packed_d	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> packed_d;$/;"	m	class:libsnark::sha256_round_function_gadget
packed_h	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> packed_h;$/;"	m	class:libsnark::sha256_round_function_gadget
packed_new_a	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> packed_new_a;$/;"	m	class:libsnark::sha256_round_function_gadget
packed_new_e	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> packed_new_e;$/;"	m	class:libsnark::sha256_round_function_gadget
packed_source	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable_array<FieldT> packed_source;$/;"	m	class:libsnark::bit_vector_copy_gadget
packed_target	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    pb_variable_array<FieldT> packed_target;$/;"	m	class:libsnark::bit_vector_copy_gadget
packed_vars	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_linear_combination_array<FieldT> packed_vars;$/;"	m	class:libsnark::multipacking_gadget
packers	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    std::vector<packing_gadget<FieldT> > packers;$/;"	m	class:libsnark::multipacking_gadget
packing_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    packing_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::packing_gadget
packing_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^class packing_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
pad	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^    unsigned long      pad[4];$/;"	m	struct:poly1305_state_internal_t
pad	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^    unsigned long long pad[2];$/;"	m	struct:poly1305_state_internal_t
pad	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    uint64_t           pad[2];                      \/*  16 bytes  *\/$/;"	m	struct:poly1305_state_internal_t	file:
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm0,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm0,%xmm4$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm1,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm1,%xmm2$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm1,%xmm5$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm10,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm10,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm11,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm11,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm12,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm13,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm13,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm14,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm14,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm15,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm15,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm2,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm2,%xmm4$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm3,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm3,%xmm5$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm4,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm4,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm5,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm5,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm6,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm6,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm7,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm7,%xmm2$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm8,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm8,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm9,%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd %xmm9,%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 112(%rsp),%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 128(%rsp),%xmm0$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 144(%rsp),%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 160(%rsp),%xmm2$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 176(%rsp),%xmm12$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 192(%rsp),%xmm5$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 208(%rsp),%xmm6$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 224(%rsp),%xmm13$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 240(%rsp),%xmm7$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 256(%rsp),%xmm8$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 272(%rsp),%xmm9$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 288(%rsp),%xmm10$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 304(%rsp),%xmm14$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 320(%rsp),%xmm3$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 336(%rsp),%xmm4$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 352(%rsp),%xmm15$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 368(%rsp),%xmm11$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 64(%rsp),%xmm1$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 80(%rsp),%xmm2$/;"	l
paddd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^paddd 96(%rsp),%xmm3$/;"	l
page_mask	zcash/support/pagelocker.h	/^    size_t page_size, page_mask;$/;"	m	class:LockedPageManagerBase
page_size	libsodium/src/libsodium/sodium/utils.c	/^static size_t        page_size;$/;"	v	file:
page_size	zcash/support/pagelocker.h	/^    size_t page_size, page_mask;$/;"	m	class:LockedPageManagerBase
pairing	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.cpp	/^alt_bn128_Fq12 alt_bn128_pp::pairing(const alt_bn128_G1 &P,$/;"	f	class:libsnark::alt_bn128_pp
pairing_test	libsnark/src/algebra/curves/tests/test_bilinearity.cpp	/^void pairing_test()$/;"	f
parents	zcash/IncrementalMerkleTree.hpp	/^    std::vector<boost::optional<Hash>> parents;$/;"	m	class:libzcash::IncrementalMerkleTree
parseIntAndAdvance	zcash/tinyformat.h	/^inline int parseIntAndAdvance(const char*& c)$/;"	f	namespace:tinyformat::detail
partial_path	zcash/IncrementalMerkleTree.cpp	/^std::deque<Hash> IncrementalWitness<Depth, Hash>::partial_path() const {$/;"	f	class:libzcash::IncrementalWitness
pass	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t pass;$/;"	m	struct:Argon2_position_t
passes	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t      passes;        \/* Number of passes *\/$/;"	m	struct:Argon2_instance_t
passwd1	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *   passwd1 = "";$/;"	v	file:
passwd2	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *   passwd2 = "password";$/;"	v	file:
passwd3	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *   passwd3 = "pleaseletmein";$/;"	v	file:
path	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    merkle_authentication_path_variable<FieldT, HashT> path;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
path	zcash/IncrementalMerkleTree.cpp	/^MerklePath IncrementalMerkleTree<Depth, Hash>::path(std::deque<Hash> filler_hashes) const {$/;"	f	class:libzcash::IncrementalMerkleTree
path	zcash/IncrementalMerkleTree.hpp	/^    MerklePath path() const {$/;"	f	class:libzcash::IncrementalWitness
pathCached	zcash/zcashutil.cpp	/^static boost::filesystem::path pathCached;$/;"	v	file:
pathCachedNetSpecific	zcash/zcashutil.cpp	/^static boost::filesystem::path pathCachedNetSpecific;$/;"	v	file:
pb	libsnark/src/gadgetlib1/gadget.hpp	/^    protoboard<FieldT> &pb;$/;"	m	class:libsnark::gadget
pb_coeff_sum	libsnark/src/gadgetlib1/pb_variable.tcc	/^linear_combination<FieldT> pb_coeff_sum(const pb_linear_combination_array<FieldT> &v, const std::vector<FieldT> &coeffs)$/;"	f	namespace:libsnark
pb_linear_combination	libsnark/src/gadgetlib1/pb_variable.hpp	/^class pb_linear_combination : public linear_combination<FieldT> {$/;"	c	namespace:libsnark
pb_linear_combination	libsnark/src/gadgetlib1/pb_variable.tcc	/^pb_linear_combination<FieldT>::pb_linear_combination()$/;"	f	class:libsnark::pb_linear_combination
pb_linear_combination	libsnark/src/gadgetlib1/pb_variable.tcc	/^pb_linear_combination<FieldT>::pb_linear_combination(const pb_variable<FieldT> &var)$/;"	f	class:libsnark::pb_linear_combination
pb_linear_combination_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_linear_combination_array() : contents() {};$/;"	f	class:libsnark::pb_linear_combination_array
pb_linear_combination_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_linear_combination_array(const pb_variable_array<FieldT> &arr) { for (auto &v : arr) this->emplace_back(pb_linear_combination<FieldT>(v)); };$/;"	f	class:libsnark::pb_linear_combination_array
pb_linear_combination_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_linear_combination_array(size_t count) : contents(count) {};$/;"	f	class:libsnark::pb_linear_combination_array
pb_linear_combination_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_linear_combination_array(size_t count, const pb_linear_combination<FieldT> &value) : contents(count, value) {};$/;"	f	class:libsnark::pb_linear_combination_array
pb_linear_combination_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_linear_combination_array(typename contents::const_iterator first, typename contents::const_iterator last) : contents(first, last) {};$/;"	f	class:libsnark::pb_linear_combination_array
pb_linear_combination_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_linear_combination_array(typename contents::const_reverse_iterator first, typename contents::const_reverse_iterator last) : contents(first, last) {};$/;"	f	class:libsnark::pb_linear_combination_array
pb_linear_combination_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^class pb_linear_combination_array : private std::vector<pb_linear_combination<FieldT> >$/;"	c	namespace:libsnark
pb_packing_sum	libsnark/src/gadgetlib1/pb_variable.tcc	/^linear_combination<FieldT> pb_packing_sum(const pb_linear_combination_array<FieldT> &v)$/;"	f	namespace:libsnark
pb_sum	libsnark/src/gadgetlib1/pb_variable.tcc	/^linear_combination<FieldT> pb_sum(const pb_linear_combination_array<FieldT> &v)$/;"	f	namespace:libsnark
pb_variable	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_variable(const var_index_t index = 0) : variable<FieldT>(index) {};$/;"	f	class:libsnark::pb_variable
pb_variable	libsnark/src/gadgetlib1/pb_variable.hpp	/^class pb_variable : public variable<FieldT> {$/;"	c	namespace:libsnark
pb_variable_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_variable_array() : contents() {};$/;"	f	class:libsnark::pb_variable_array
pb_variable_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_variable_array(size_t count, const pb_variable<FieldT> &value) : contents(count, value) {};$/;"	f	class:libsnark::pb_variable_array
pb_variable_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_variable_array(typename contents::const_iterator first, typename contents::const_iterator last) : contents(first, last) {};$/;"	f	class:libsnark::pb_variable_array
pb_variable_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^    pb_variable_array(typename contents::const_reverse_iterator first, typename contents::const_reverse_iterator last) : contents(first, last) {};$/;"	f	class:libsnark::pb_variable_array
pb_variable_array	libsnark/src/gadgetlib1/pb_variable.hpp	/^class pb_variable_array : private std::vector<pb_variable<FieldT> >$/;"	c	namespace:libsnark
pbegin	zcash/serialize.h	/^    char* pbegin;$/;"	m	class:CFlatData
pbkdf2_sha256_H	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h	29;"	d
pdfdir	Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	demo/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/contrib/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/dist-build/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/msvc-scripts/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/src/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/src/libsodium/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/src/libsodium/include/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/test/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	libsodium/test/default/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	zcash/Makefile	/^pdfdir = ${docdir}$/;"	m
pdfdir	zcash/secp256k1/Makefile	/^pdfdir = ${docdir}$/;"	m
pend	zcash/serialize.h	/^    char* pend;$/;"	m	class:CFlatData
perform_verification	zcash/Proof.hpp	/^    bool perform_verification;$/;"	m	class:libzcash::ProofVerifier
personal	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t personal[BLAKE2B_PERSONALBYTES]; \/* 64 *\/$/;"	m	struct:blake2b_param_
pickparams	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c	/^pickparams(unsigned long long opslimit, const size_t memlimit,$/;"	f	file:
pid	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    pid_t         pid;$/;"	m	struct:Salsa20Random_	file:
pk	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_proving_key<ppT> pk;$/;"	m	class:libsnark::r1cs_ppzksnark_keypair
pk	libsodium/test/default/sign.c	/^    const unsigned char  pk[crypto_sign_PUBLICKEYBYTES];$/;"	m	struct:TestData_	file:
pk	zcash/JoinSplit.cpp	/^    boost::optional<r1cs_ppzksnark_proving_key<ppzksnark_ppT>> pk;$/;"	m	class:libzcash::JoinSplitCircuit	file:
pkPath	zcash/JoinSplit.cpp	/^    boost::optional<std::string> pkPath;$/;"	m	class:libzcash::JoinSplitCircuit	file:
pk_enc	zcash/Address.cpp	/^uint256 ViewingKey::pk_enc() {$/;"	f	class:libzcash::ViewingKey
pk_enc	zcash/Address.hpp	/^    uint256 pk_enc;$/;"	m	class:libzcash::PaymentAddress
pk_enc	zcash/NoteEncryption.hpp	/^    uint256 pk_enc;$/;"	m	class:libzcash::NoteDecryption
pkcm	zcash/Note.hpp	/^		uint256 pkcm;$/;"	m	class:libzcash::Note
pkcm	zcash/Note.hpp	/^    uint256 pkcm;$/;"	m	class:libzcash::NotePlaintext
pkgconfig_DATA	libsodium/Makefile	/^pkgconfig_DATA = libsodium.pc$/;"	m
pkgconfig_DATA	zcash/secp256k1/Makefile	/^pkgconfig_DATA = libsecp256k1.pc$/;"	m
pkgconfigdir	libsodium/Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgconfigdir	zcash/secp256k1/Makefile	/^pkgconfigdir = $(libdir)\/pkgconfig$/;"	m
pkgdatadir	Makefile	/^pkgdatadir = $(datadir)\/full-package-name$/;"	m
pkgdatadir	demo/Makefile	/^pkgdatadir = $(datadir)\/full-package-name$/;"	m
pkgdatadir	libsodium/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/contrib/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/dist-build/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/msvc-scripts/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/src/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/src/libsodium/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/src/libsodium/include/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/test/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	libsodium/test/default/Makefile	/^pkgdatadir = $(datadir)\/libsodium$/;"	m
pkgdatadir	zcash/Makefile	/^pkgdatadir = $(datadir)\/full-package-name$/;"	m
pkgdatadir	zcash/secp256k1/Makefile	/^pkgdatadir = $(datadir)\/libsecp256k1$/;"	m
pkgincludedir	Makefile	/^pkgincludedir = $(includedir)\/full-package-name$/;"	m
pkgincludedir	demo/Makefile	/^pkgincludedir = $(includedir)\/full-package-name$/;"	m
pkgincludedir	libsodium/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/contrib/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/dist-build/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/msvc-scripts/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/src/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/src/libsodium/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/src/libsodium/include/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/test/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	libsodium/test/default/Makefile	/^pkgincludedir = $(includedir)\/libsodium$/;"	m
pkgincludedir	zcash/Makefile	/^pkgincludedir = $(includedir)\/full-package-name$/;"	m
pkgincludedir	zcash/secp256k1/Makefile	/^pkgincludedir = $(includedir)\/libsecp256k1$/;"	m
pkglibdir	Makefile	/^pkglibdir = $(libdir)\/full-package-name$/;"	m
pkglibdir	demo/Makefile	/^pkglibdir = $(libdir)\/full-package-name$/;"	m
pkglibdir	libsodium/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/contrib/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/dist-build/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/msvc-scripts/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/src/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/src/libsodium/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/src/libsodium/include/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/test/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	libsodium/test/default/Makefile	/^pkglibdir = $(libdir)\/libsodium$/;"	m
pkglibdir	zcash/Makefile	/^pkglibdir = $(libdir)\/full-package-name$/;"	m
pkglibdir	zcash/secp256k1/Makefile	/^pkglibdir = $(libdir)\/libsecp256k1$/;"	m
pkglibexecdir	Makefile	/^pkglibexecdir = $(libexecdir)\/full-package-name$/;"	m
pkglibexecdir	demo/Makefile	/^pkglibexecdir = $(libexecdir)\/full-package-name$/;"	m
pkglibexecdir	libsodium/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/contrib/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/dist-build/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/msvc-scripts/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/src/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/src/libsodium/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/src/libsodium/include/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/test/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	libsodium/test/default/Makefile	/^pkglibexecdir = $(libexecdir)\/libsodium$/;"	m
pkglibexecdir	zcash/Makefile	/^pkglibexecdir = $(libexecdir)\/full-package-name$/;"	m
pkglibexecdir	zcash/secp256k1/Makefile	/^pkglibexecdir = $(libexecdir)\/libsecp256k1$/;"	m
pkh	zcash/Note.hpp	/^		uint256 pkh;$/;"	m	class:libzcash::Note
pkh	zcash/primitives/transaction.h	/^    boost::array<uint256, ZC_NUM_JS_INPUTS> pkh;$/;"	m	class:JSDescription
pn	zcash/arith_uint256.h	/^    uint32_t pn[WIDTH];$/;"	m	class:base_uint
point	zcash/secp256k1/src/bench_ecdh.c	/^    secp256k1_pubkey point;$/;"	m	struct:__anon41	file:
pointer	zcash/support/allocators/secure.h	/^    typedef typename base::pointer pointer;$/;"	t	struct:secure_allocator
pointer	zcash/support/allocators/zeroafterfree.h	/^    typedef typename base::pointer pointer;$/;"	t	struct:zero_after_free_allocator
poly1305_block_copy31	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_block_copy31(unsigned char *dst, const unsigned char *src,$/;"	f	file:
poly1305_block_size	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	16;"	d
poly1305_block_size	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	28;"	d
poly1305_block_size	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	36;"	d	file:
poly1305_blocks	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f
poly1305_blocks	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f
poly1305_blocks	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f	file:
poly1305_donna_H	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h	2;"	d
poly1305_final_r2_r	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_final_r2_r    = 16, \/* use [r^2,r] for the final block *\/$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_final_r_1	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_final_r_1     = 32, \/* use [r,1] for the final block *\/$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_final_shift16	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_final_shift16 = 8,$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_final_shift8	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_final_shift8  = 4,$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_finish	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^poly1305_finish(poly1305_state_internal_t *st, unsigned char mac[16])$/;"	f
poly1305_finish	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^poly1305_finish(poly1305_state_internal_t *st, unsigned char mac[16])$/;"	f
poly1305_finish	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_finish(poly1305_state_internal_t *st, unsigned char mac[16])$/;"	f	file:
poly1305_finish_ext	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_finish_ext(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f	file:
poly1305_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^poly1305_init(poly1305_state_internal_t *st, const unsigned char key[32])$/;"	f
poly1305_init	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^poly1305_init(poly1305_state_internal_t *st, const unsigned char key[32])$/;"	f
poly1305_init_ext	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_init_ext(poly1305_state_internal_t *st, const unsigned char key[32],$/;"	f	file:
poly1305_sse2_H	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h	2;"	d
poly1305_started	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^    poly1305_started       = 1,$/;"	e	enum:poly1305_state_flags_t	file:
poly1305_state_flags_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^enum poly1305_state_flags_t {$/;"	g	file:
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^typedef struct poly1305_state_internal_t {$/;"	s
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^} poly1305_state_internal_t;$/;"	t	typeref:struct:poly1305_state_internal_t
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^typedef struct poly1305_state_internal_t {$/;"	s
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^} poly1305_state_internal_t;$/;"	t	typeref:struct:poly1305_state_internal_t
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^typedef struct poly1305_state_internal_t {$/;"	s	file:
poly1305_state_internal_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^} poly1305_state_internal_t;                        \/* 164 bytes total *\/$/;"	t	typeref:struct:poly1305_state_internal_t	file:
poly1305_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c	/^poly1305_update(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f	file:
poly1305_update	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^poly1305_update(poly1305_state_internal_t *st, const unsigned char *m,$/;"	f	file:
pop_lock	zcash/sync.cpp	/^static void pop_lock()$/;"	f	file:
popstack	zcash/script/interpreter.cpp	/^static inline void popstack(vector<valtype>& stack)$/;"	f	file:
pos	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    argon2_position_t  pos;$/;"	m	struct:Argon2_thread_data
positions	zcash/circuit/merkle.tcc	/^    pb_variable_array<FieldT> positions;$/;"	m	class:merkle_tree_gadget	file:
post	zcash/sync.h	/^    void post()$/;"	f	class:CSemaphore
potential_deadlock_detected	zcash/sync.cpp	/^static void potential_deadlock_detected(const std::pair<void*, void*>& mismatch, const LockStack& s1, const LockStack& s2)$/;"	f	file:
powLimit	zcash/consensus/params.h	/^    uint256 powLimit;$/;"	m	struct:Consensus::Params
power	libsnark/src/algebra/exponentiation/exponentiation.tcc	/^FieldT power(const FieldT &base, const bigint<m> &exponent)$/;"	f	namespace:libsnark
power	libsnark/src/algebra/exponentiation/exponentiation.tcc	/^FieldT power(const FieldT &base, const unsigned long exponent)$/;"	f	namespace:libsnark
pp_G2_one_precomp	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2_precomp<ppT> pp_G2_one_precomp;$/;"	m	class:libsnark::r1cs_ppzksnark_processed_verification_key
ppmutexOpenSSL	zcash/zcashutil.cpp	/^static CCriticalSection** ppmutexOpenSSL;$/;"	v	file:
ppzksnark_ppT	zcash/JoinSplit.cpp	/^    typedef default_r1cs_ppzksnark_pp ppzksnark_ppT;$/;"	t	class:libzcash::JoinSplitCircuit	file:
pre_g	zcash/secp256k1/src/ecmult.h	/^    secp256k1_ge_storage (*pre_g)[];    \/* odd multiples of the generator *\/$/;"	m	struct:__anon53
pre_g_128	zcash/secp256k1/src/ecmult.h	/^    secp256k1_ge_storage (*pre_g_128)[]; \/* odd multiples of 2^128*generator *\/$/;"	m	struct:__anon53
prec	zcash/secp256k1/src/ecmult_gen.h	/^    secp256k1_ge_storage (*prec)[64][16]; \/* prec[j][i] = 16^j * i * G + U_i *\/$/;"	m	struct:__anon44
precompute_G1	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.cpp	/^alt_bn128_G1_precomp alt_bn128_pp::precompute_G1(const alt_bn128_G1 &P)$/;"	f	class:libsnark::alt_bn128_pp
precompute_G2	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.cpp	/^alt_bn128_G2_precomp alt_bn128_pp::precompute_G2(const alt_bn128_G2 &Q)$/;"	f	class:libsnark::alt_bn128_pp
precomputed_nonce_function	zcash/secp256k1/src/tests.c	/^static int precomputed_nonce_function(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {$/;"	f	file:
prefix	Makefile	/^prefix = \/usr\/local$/;"	m
prefix	demo/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/contrib/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/dist-build/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/msvc-scripts/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/src/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/src/libsodium/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/src/libsodium/include/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/test/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	libsodium/test/default/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	zcash/Makefile	/^prefix = \/usr\/local$/;"	m
prefix	zcash/secp256k1/Makefile	/^prefix = \/usr\/local$/;"	m
prev_hasher_inputs	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::vector<block_variable<FieldT> > prev_hasher_inputs;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
prev_hashers	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::vector<HashT> prev_hashers;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
prev_internal_output	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::vector<digest_variable<FieldT> > prev_internal_output;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
prev_leaf_digest	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    digest_variable<FieldT> prev_leaf_digest;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
prev_output	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    pb_linear_combination_array<FieldT> prev_output;$/;"	m	class:libsnark::sha256_compression_function_gadget
prev_path	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    merkle_authentication_path_variable<FieldT, HashT> prev_path;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
prev_propagators	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    std::vector<digest_selector_gadget<FieldT> > prev_propagators;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
prev_root_digest	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    digest_variable<FieldT> prev_root_digest;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
prevent_faerie_gold	zcash/circuit/note.tcc	/^    std::shared_ptr<PRF_rho_gadget<FieldT>> prevent_faerie_gold;$/;"	m	class:output_note_gadget	file:
prevout	zcash/primitives/transaction.h	/^    COutPoint prevout;$/;"	m	class:CTxIn
primary_input	libsnark/src/gadgetlib1/protoboard.tcc	/^r1cs_primary_input<FieldT> protoboard<FieldT>::primary_input() const$/;"	f	class:libsnark::protoboard
primary_input	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.hpp	/^    r1cs_primary_input<FieldT> primary_input;$/;"	m	struct:libsnark::r1cs_example
primary_input_size	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    size_t primary_input_size;$/;"	m	class:libsnark::r1cs_constraint_system
print	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^void alt_bn128_G1::print() const$/;"	f	class:libsnark::alt_bn128_G1
print	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^void alt_bn128_G2::print() const$/;"	f	class:libsnark::alt_bn128_G2
print	libsnark/src/algebra/fields/bigint.tcc	/^void bigint<n>::print() const$/;"	f	class:libsnark::bigint
print	libsnark/src/algebra/fields/fp.tcc	/^void Fp_model<n,modulus>::print() const$/;"	f	class:libsnark::Fp_model
print	libsnark/src/algebra/fields/fp12_2over3over2.hpp	/^    void print() const { printf("c0\/c1:\\n"); c0.print(); c1.print(); }$/;"	f	class:libsnark::Fp12_2over3over2_model
print	libsnark/src/algebra/fields/fp2.hpp	/^    void print() const { printf("c0\/c1:\\n"); c0.print(); c1.print(); }$/;"	f	class:libsnark::Fp2_model
print	libsnark/src/algebra/fields/fp3.hpp	/^    void print() const { printf("c0\/c1\/c2:\\n"); c0.print(); c1.print(); c2.print(); }$/;"	f	class:libsnark::Fp3_model
print	libsnark/src/algebra/fields/fp6_3over2.hpp	/^    void print() const { printf("c0\/c1\/c2:\\n"); c0.print(); c1.print(); c2.print(); }$/;"	f	class:libsnark::Fp6_3over2_model
print	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^void knowledge_commitment<T1,T2>::print() const$/;"	f	class:libsnark::knowledge_commitment
print	libsnark/src/relations/variable.tcc	/^void linear_combination<FieldT>::print(const std::map<size_t, std::string> &variable_annotations) const$/;"	f	class:libsnark::linear_combination
print	libsodium/test/default/core6.c	/^print(unsigned char *x, unsigned char *y)$/;"	f	file:
printFormatStringLiteral	zcash/tinyformat.h	/^inline const char* printFormatStringLiteral(std::ostream& out, const char* fmt)$/;"	f	namespace:tinyformat::detail
print_compilation_info	libsnark/src/common/profiling.cpp	/^void print_compilation_info()$/;"	f	namespace:libsnark
print_coordinates	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^void alt_bn128_G1::print_coordinates() const$/;"	f	class:libsnark::alt_bn128_G1
print_coordinates	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^void alt_bn128_G2::print_coordinates() const$/;"	f	class:libsnark::alt_bn128_G2
print_cumulative_op_counts	libsnark/src/common/profiling.cpp	/^void print_cumulative_op_counts(const bool only_fq)$/;"	f	namespace:libsnark
print_cumulative_time_entry	libsnark/src/common/profiling.cpp	/^void print_cumulative_time_entry(const std::string &key, const long long factor)$/;"	f	namespace:libsnark
print_cumulative_times	libsnark/src/common/profiling.cpp	/^void print_cumulative_times(const long long factor)$/;"	f	namespace:libsnark
print_header	libsnark/src/common/profiling.cpp	/^void print_header(const char *msg)$/;"	f	namespace:libsnark
print_hex	libsnark/src/algebra/fields/bigint.tcc	/^void bigint<n>::print_hex() const$/;"	f	class:libsnark::bigint
print_indent	libsnark/src/common/profiling.cpp	/^void print_indent()$/;"	f	namespace:libsnark
print_internals	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    int           print_internals; \/* whether to print the memory blocks *\/$/;"	m	struct:Argon2_instance_t
print_mem	libsnark/src/common/profiling.cpp	/^void print_mem(const std::string &s)$/;"	f	namespace:libsnark
print_number	zcash/secp256k1/src/bench.h	/^void print_number(double x) {$/;"	f
print_op_profiling	libsnark/src/common/profiling.cpp	/^void print_op_profiling(const std::string &msg)$/;"	f	namespace:libsnark
print_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    void print_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_proof
print_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    void print_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_proving_key
print_size	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    void print_size() const$/;"	f	class:libsnark::r1cs_ppzksnark_verification_key
print_time	libsnark/src/common/profiling.cpp	/^void print_time(const char* msg)$/;"	f	namespace:libsnark
print_times_from_last_and_start	libsnark/src/common/profiling.cpp	/^static void print_times_from_last_and_start(long long     now, long long     last,$/;"	f	namespace:libsnark
print_usage	libsodium/build-aux/test-driver	/^print_usage ()$/;"	f
print_usage	zcash/secp256k1/build-aux/test-driver	/^print_usage ()$/;"	f
print_with_assignment	libsnark/src/relations/variable.tcc	/^void linear_combination<FieldT>::print_with_assignment(const std::vector<FieldT> &full_assignment, const std::map<size_t, std::string> &variable_annotations) const$/;"	f	class:libsnark::linear_combination
printf	libsodium/test/default/cmptest.h	66;"	d
printf	libsodium/test/default/cmptest.h	67;"	d
printf	zcash/tinyformat.h	/^inline void printf(const char* fmt)$/;"	f	namespace:tinyformat
printf	zcash/tinyformat.h	/^void printf(const char* fmt, const Args&... args)$/;"	f	namespace:tinyformat
printfln	zcash/tinyformat.h	/^inline void printfln(const char* fmt)$/;"	f	namespace:tinyformat
printfln	zcash/tinyformat.h	/^void printfln(const char* fmt, const Args&... args)$/;"	f	namespace:tinyformat
privKeyTweakAdd	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] privKeyTweakAdd(byte[] privkey, byte[] tweak) throws AssertFailException{$/;"	m	class:NativeSecp256k1
privKeyTweakMul	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] privKeyTweakMul(byte[] privkey, byte[] tweak) throws AssertFailException{$/;"	m	class:NativeSecp256k1
processVerifyingKey	zcash/JoinSplit.cpp	/^    void processVerifyingKey() {$/;"	f	class:libzcash::JoinSplitCircuit
program_details	libsodium/build-aux/missing	/^program_details ()$/;"	f
program_details	missing	/^program_details ()$/;"	f
program_details	zcash/secp256k1/build-aux/missing	/^program_details ()$/;"	f
program_options	zcash/zcashutil.cpp	/^    namespace program_options {$/;"	n	namespace:boost	file:
program_transform_name	Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	demo/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/contrib/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/dist-build/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/msvc-scripts/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/src/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/src/libsodium/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/src/libsodium/include/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/test/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	libsodium/test/default/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	zcash/Makefile	/^program_transform_name = s,x,x,$/;"	m
program_transform_name	zcash/secp256k1/Makefile	/^program_transform_name = s,x,x,$/;"	m
proof	zcash/primitives/transaction.h	/^    libzcash::ZCProof proof;$/;"	m	class:JSDescription
propagators	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    std::vector<digest_selector_gadget<FieldT> > propagators;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
protoboard	libsnark/src/gadgetlib1/protoboard.hpp	/^class protoboard {$/;"	c	namespace:libsnark
protoboard	libsnark/src/gadgetlib1/protoboard.tcc	/^protoboard<FieldT>::protoboard()$/;"	f	class:libsnark::protoboard
prototypes	configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prototypes	libsodium/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prototypes	zcash/secp256k1/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
prove	zcash/JoinSplit.cpp	/^    ZCProof prove($/;"	f	class:libzcash::JoinSplitCircuit
psdir	Makefile	/^psdir = ${docdir}$/;"	m
psdir	demo/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/contrib/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/dist-build/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/msvc-scripts/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/src/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/src/libsodium/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/src/libsodium/include/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/test/Makefile	/^psdir = ${docdir}$/;"	m
psdir	libsodium/test/default/Makefile	/^psdir = ${docdir}$/;"	m
psdir	zcash/Makefile	/^psdir = ${docdir}$/;"	m
psdir	zcash/secp256k1/Makefile	/^psdir = ${docdir}$/;"	m
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x00,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x00,%xmm0,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x00,%xmm0,%xmm3$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm1,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm10,%xmm10$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm11,%xmm11$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm12,%xmm12$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm13,%xmm13$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm14,%xmm14$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm15,%xmm15$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm2,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm3,%xmm3$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm4,%xmm4$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm5,%xmm5$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm6,%xmm6$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm7,%xmm7$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm8,%xmm8$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x39,%xmm9,%xmm9$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x4e,%xmm2,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x55,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x55,%xmm0,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x55,%xmm0,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x93,%xmm1,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0x93,%xmm3,%xmm3$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0xaa,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0xaa,%xmm0,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0xaa,%xmm0,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0xff,%xmm0,%xmm0$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0xff,%xmm0,%xmm1$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0xff,%xmm0,%xmm2$/;"	l
pshufd	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pshufd $0xff,%xmm0,%xmm3$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $13,%xmm0$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $13,%xmm1$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $13,%xmm4$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $18,%xmm0$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $18,%xmm1$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $18,%xmm2$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $18,%xmm5$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $7,%xmm0$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $7,%xmm1$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $7,%xmm2$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $7,%xmm4$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $9,%xmm0$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $9,%xmm1$/;"	l
pslld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pslld $9,%xmm5$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $14,%xmm12$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $14,%xmm2$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $14,%xmm6$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $19,%xmm12$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $19,%xmm2$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $19,%xmm6$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $23,%xmm12$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $23,%xmm2$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $23,%xmm6$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $25,%xmm12$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $25,%xmm2$/;"	l
psrld	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^psrld $25,%xmm6$/;"	l
pubKeyTweakAdd	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] pubKeyTweakAdd(byte[] pubkey, byte[] tweak) throws AssertFailException{$/;"	m	class:NativeSecp256k1
pubKeyTweakMul	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] pubKeyTweakMul(byte[] pubkey, byte[] tweak) throws AssertFailException{$/;"	m	class:NativeSecp256k1
pubkey	zcash/pubkey.h	/^    CPubKey pubkey;$/;"	m	struct:CExtPubKey
pubkey	zcash/secp256k1/src/bench_verify.c	/^    unsigned char pubkey[33];$/;"	m	struct:__anon57	file:
pubkeylen	zcash/secp256k1/src/bench_verify.c	/^    size_t pubkeylen;$/;"	m	struct:__anon57	file:
push_int64	zcash/script/script.h	/^    CScript& push_int64(int64_t n)$/;"	f	class:CScript
push_lock	zcash/sync.cpp	/^static void push_lock(void* c, const CLockLocation& locklocation, bool fTry)$/;"	f	file:
pwd	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *pwd;    \/* password array *\/$/;"	m	struct:Argon2_Context
pwdlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t pwdlen; \/* password length *\/$/;"	m	struct:Argon2_Context
pwhash_DEPENDENCIES	libsodium/test/default/Makefile	/^pwhash_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
pwhash_LDADD	libsodium/test/default/Makefile	/^pwhash_LDADD = $(TESTS_LDADD)$/;"	m
pwhash_OBJECTS	libsodium/test/default/Makefile	/^pwhash_OBJECTS = pwhash.$(OBJEXT)$/;"	m
pwhash_SOURCE	libsodium/test/default/Makefile	/^pwhash_SOURCE = cmptest.h pwhash.c$/;"	m
pwhash_SOURCES	libsodium/test/default/Makefile	/^pwhash_SOURCES = pwhash.c$/;"	m
pwhash_argon2id_DEPENDENCIES	libsodium/test/default/Makefile	/^pwhash_argon2id_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
pwhash_argon2id_LDADD	libsodium/test/default/Makefile	/^pwhash_argon2id_LDADD = $(TESTS_LDADD)$/;"	m
pwhash_argon2id_OBJECTS	libsodium/test/default/Makefile	/^pwhash_argon2id_OBJECTS = pwhash_argon2id.$(OBJEXT)$/;"	m
pwhash_argon2id_SOURCE	libsodium/test/default/Makefile	/^pwhash_argon2id_SOURCE = cmptest.h pwhash_argon2id.c$/;"	m
pwhash_argon2id_SOURCES	libsodium/test/default/Makefile	/^pwhash_argon2id_SOURCES = pwhash_argon2id.c$/;"	m
pwhash_scrypt_DEPENDENCIES	libsodium/test/default/Makefile	/^pwhash_scrypt_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
pwhash_scrypt_LDADD	libsodium/test/default/Makefile	/^pwhash_scrypt_LDADD = $(TESTS_LDADD)$/;"	m
pwhash_scrypt_OBJECTS	libsodium/test/default/Makefile	/^pwhash_scrypt_OBJECTS = pwhash_scrypt.$(OBJEXT)$/;"	m
pwhash_scrypt_SOURCE	libsodium/test/default/Makefile	/^pwhash_scrypt_SOURCE = cmptest.h pwhash_scrypt.c$/;"	m
pwhash_scrypt_SOURCES	libsodium/test/default/Makefile	/^pwhash_scrypt_SOURCES = pwhash_scrypt.c$/;"	m
pwhash_scrypt_ll_DEPENDENCIES	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
pwhash_scrypt_ll_LDADD	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_LDADD = $(TESTS_LDADD)$/;"	m
pwhash_scrypt_ll_OBJECTS	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_OBJECTS = pwhash_scrypt_ll.$(OBJEXT)$/;"	m
pwhash_scrypt_ll_SOURCE	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_SOURCE = cmptest.h pwhash_scrypt_ll.c$/;"	m
pwhash_scrypt_ll_SOURCES	libsodium/test/default/Makefile	/^pwhash_scrypt_ll_SOURCES = pwhash_scrypt_ll.c$/;"	m
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor   %xmm7,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm10$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm12$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm15$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm0,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm10$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm12$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm14$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm15$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm1,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm10$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm15$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm12,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm10$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm11$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm12$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm13$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm14$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm15$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm4$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm5$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm6$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm7$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm8$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm2,%xmm9$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm4,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm4,%xmm3$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm5,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm5,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm6,%xmm0$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm6,%xmm1$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm6,%xmm2$/;"	l
pxor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^pxor  %xmm6,%xmm3$/;"	l
qap_instance	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^class qap_instance {$/;"	c	namespace:libsnark
qap_instance	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^qap_instance<FieldT>::qap_instance(const std::shared_ptr<evaluation_domain<FieldT> > &domain,$/;"	f	class:libsnark::qap_instance
qap_instance_evaluation	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^class qap_instance_evaluation {$/;"	c	namespace:libsnark
qap_instance_evaluation	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^qap_instance_evaluation<FieldT>::qap_instance_evaluation(const std::shared_ptr<evaluation_domain<FieldT> > &domain,$/;"	f	class:libsnark::qap_instance_evaluation
qap_witness	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^class qap_witness {$/;"	c	namespace:libsnark
qap_witness	libsnark/src/relations/arithmetic_programs/qap/qap.tcc	/^qap_witness<FieldT>::qap_witness(const size_t num_variables,$/;"	f	class:libsnark::qap_witness
queue	zcash/IncrementalMerkleTree.cpp	/^    std::deque<Hash> queue;$/;"	m	class:libzcash::PathFiller	file:
r	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^    bigint<n> r;$/;"	m	class:libsnark::ordered_exponent	file:
r	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h	/^    unsigned long      r[5];$/;"	m	struct:poly1305_state_internal_t
r	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^    unsigned long long r[3];$/;"	m	struct:poly1305_state_internal_t
r	zcash/Note.hpp	/^    uint256 r;$/;"	m	class:libzcash::Note
r	zcash/Note.hpp	/^    uint256 r;$/;"	m	class:libzcash::NotePlaintext
r	zcash/circuit/note.tcc	/^    std::shared_ptr<digest_variable<FieldT>> r;$/;"	m	class:note_gadget	file:
r	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static final Lock r = rwl.readLock();$/;"	f	class:NativeSecp256k1	file:
r1	libsodium/test/default/pwhash_scrypt_ll.c	/^static const uint32_t r1      = 1U;$/;"	v	file:
r16	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	7;"	d
r1cs_constraint	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    r1cs_constraint() {};$/;"	f	class:libsnark::r1cs_constraint
r1cs_constraint	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^class r1cs_constraint {$/;"	c	namespace:libsnark
r1cs_constraint	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^r1cs_constraint<FieldT>::r1cs_constraint(const linear_combination<FieldT> &a,$/;"	f	class:libsnark::r1cs_constraint
r1cs_constraint	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^r1cs_constraint<FieldT>::r1cs_constraint(const std::initializer_list<linear_combination<FieldT> > &A,$/;"	f	class:libsnark::r1cs_constraint
r1cs_constraint_system	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    r1cs_constraint_system() : primary_input_size(0), auxiliary_input_size(0) {}$/;"	f	class:libsnark::r1cs_constraint_system
r1cs_constraint_system	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^class r1cs_constraint_system {$/;"	c	namespace:libsnark
r1cs_example	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.hpp	/^    r1cs_example<FieldT>(const r1cs_constraint_system<FieldT> &constraint_system,$/;"	f	struct:libsnark::r1cs_example
r1cs_example	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.hpp	/^    r1cs_example<FieldT>(r1cs_constraint_system<FieldT> &&constraint_system,$/;"	f	struct:libsnark::r1cs_example
r1cs_example	libsnark/src/relations/constraint_satisfaction_problems/r1cs/examples/r1cs_examples.hpp	/^struct r1cs_example {$/;"	s	namespace:libsnark
r1cs_ppzksnark_affine_verifier_weak_IC	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^bool r1cs_ppzksnark_affine_verifier_weak_IC(const r1cs_ppzksnark_verification_key<ppT> &vk,$/;"	f	namespace:libsnark
r1cs_ppzksnark_generator	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^r1cs_ppzksnark_keypair<ppT> r1cs_ppzksnark_generator($/;"	f	namespace:libsnark
r1cs_ppzksnark_generator	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^r1cs_ppzksnark_keypair<ppT> r1cs_ppzksnark_generator(const r1cs_ppzksnark_constraint_system<ppT> &cs)$/;"	f	namespace:libsnark
r1cs_ppzksnark_keypair	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_keypair(r1cs_ppzksnark_proving_key<ppT> &&pk,$/;"	f	class:libsnark::r1cs_ppzksnark_keypair
r1cs_ppzksnark_keypair	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^class r1cs_ppzksnark_keypair {$/;"	c	namespace:libsnark
r1cs_ppzksnark_online_verifier_strong_IC	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^bool r1cs_ppzksnark_online_verifier_strong_IC(const r1cs_ppzksnark_processed_verification_key<ppT> &pvk,$/;"	f	namespace:libsnark
r1cs_ppzksnark_online_verifier_weak_IC	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^bool r1cs_ppzksnark_online_verifier_weak_IC(const r1cs_ppzksnark_processed_verification_key<ppT> &pvk,$/;"	f	namespace:libsnark
r1cs_ppzksnark_processed_verification_key	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^class r1cs_ppzksnark_processed_verification_key {$/;"	c	namespace:libsnark
r1cs_ppzksnark_proof	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_proof()$/;"	f	class:libsnark::r1cs_ppzksnark_proof
r1cs_ppzksnark_proof	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_proof(knowledge_commitment<G1<ppT>, G1<ppT> > &&g_A,$/;"	f	class:libsnark::r1cs_ppzksnark_proof
r1cs_ppzksnark_proof	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^class r1cs_ppzksnark_proof {$/;"	c	namespace:libsnark
r1cs_ppzksnark_prover	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^r1cs_ppzksnark_proof<ppT> r1cs_ppzksnark_prover(const r1cs_ppzksnark_proving_key<ppT> &pk,$/;"	f	namespace:libsnark
r1cs_ppzksnark_proving_key	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_proving_key() {};$/;"	f	class:libsnark::r1cs_ppzksnark_proving_key
r1cs_ppzksnark_proving_key	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_proving_key(knowledge_commitment_vector<G1<ppT>, G1<ppT> > &&A_query,$/;"	f	class:libsnark::r1cs_ppzksnark_proving_key
r1cs_ppzksnark_proving_key	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^class r1cs_ppzksnark_proving_key {$/;"	c	namespace:libsnark
r1cs_ppzksnark_verification_key	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_verification_key(const G2<ppT> &alphaA_g2,$/;"	f	class:libsnark::r1cs_ppzksnark_verification_key
r1cs_ppzksnark_verification_key	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^class r1cs_ppzksnark_verification_key {$/;"	c	namespace:libsnark
r1cs_ppzksnark_verifier_process_vk	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^r1cs_ppzksnark_processed_verification_key<ppT> r1cs_ppzksnark_verifier_process_vk(const r1cs_ppzksnark_verification_key<ppT> &vk)$/;"	f	namespace:libsnark
r1cs_ppzksnark_verifier_strong_IC	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^bool r1cs_ppzksnark_verifier_strong_IC(const r1cs_ppzksnark_verification_key<ppT> &vk,$/;"	f	namespace:libsnark
r1cs_ppzksnark_verifier_weak_IC	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.tcc	/^bool r1cs_ppzksnark_verifier_weak_IC(const r1cs_ppzksnark_verification_key<ppT> &vk,$/;"	f	namespace:libsnark
r1cs_to_qap_instance_map	libsnark/src/reductions/r1cs_to_qap/r1cs_to_qap.tcc	/^qap_instance<FieldT> r1cs_to_qap_instance_map(const r1cs_constraint_system<FieldT> &cs)$/;"	f	namespace:libsnark
r1cs_to_qap_instance_map_with_evaluation	libsnark/src/reductions/r1cs_to_qap/r1cs_to_qap.tcc	/^qap_instance_evaluation<FieldT> r1cs_to_qap_instance_map_with_evaluation(const r1cs_constraint_system<FieldT> &cs,$/;"	f	namespace:libsnark
r1cs_to_qap_witness_map	libsnark/src/reductions/r1cs_to_qap/r1cs_to_qap.tcc	/^qap_witness<FieldT> r1cs_to_qap_witness_map(const r1cs_constraint_system<FieldT> &cs,$/;"	f	namespace:libsnark
r2	libsodium/test/default/pwhash_scrypt_ll.c	/^static const uint32_t r2      = 8U;$/;"	v	file:
r24	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-ssse3.h	9;"	d
r3	libsodium/test/default/pwhash_scrypt_ll.c	/^static const uint32_t r3      = 8U;$/;"	v	file:
rC_Z_g2	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2<ppT> rC_Z_g2;$/;"	m	class:libsnark::r1cs_ppzksnark_verification_key
r_from_k	zcash/secp256k1/src/tests_exhaustive.c	/^void r_from_k(secp256k1_scalar *r, const secp256k1_ge *group, int k) {$/;"	f
radd64	zcash/circuit/gadget.tcc	/^		boost::array<pb_variable_array<FieldT>, NumInputs> radd64;$/;"	m	class:joinsplit_gadget	file:
rand	libsodium/test/default/cmptest.h	27;"	d
rand	libsodium/test/default/cmptest.h	28;"	d
random	libsodium/src/libsodium/include/sodium/randombytes.h	/^    uint32_t    (*random)(void);              \/* required *\/$/;"	m	struct:randombytes_implementation
random	libsodium/src/libsodium/randombytes/randombytes.c	27;"	d	file:
random	libsodium/test/quirks/quirks.h	/^random(void)$/;"	f
random	libsodium/test/quirks/quirks.h	5;"	d
random	zcash/Address.cpp	/^SpendingKey SpendingKey::random() {$/;"	f	class:libzcash::SpendingKey
randomSeed	zcash/primitives/transaction.h	/^    uint256 randomSeed;$/;"	m	class:JSDescription
random_ber_signature	zcash/secp256k1/src/tests.c	/^static void random_ber_signature(unsigned char *sig, size_t *len, int* certainly_der, int* certainly_not_der) {$/;"	f	file:
random_data_source_fd	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    int           random_data_source_fd;$/;"	m	struct:Salsa20Random_	file:
random_data_source_fd	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^    int random_data_source_fd;$/;"	m	struct:SysRandom_	file:
random_element	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::random_element()$/;"	f	class:libsnark::alt_bn128_G1
random_element	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::random_element()$/;"	f	class:libsnark::alt_bn128_G2
random_element	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n, modulus> Fp_model<n,modulus>::random_element() \/\/\/ returns random element of Fp_model$/;"	f	class:libsnark::Fp_model
random_element	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::random_element()$/;"	f	class:libsnark::Fp12_2over3over2_model
random_element	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::random_element()$/;"	f	class:libsnark::Fp2_model
random_element	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::random_element()$/;"	f	class:libsnark::Fp3_model
random_element	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::random_element()$/;"	f	class:libsnark::Fp6_3over2_model
random_fe	zcash/secp256k1/src/tests.c	/^void random_fe(secp256k1_fe *x) {$/;"	f
random_fe	zcash/secp256k1/src/tests_exhaustive.c	/^void random_fe(secp256k1_fe *x) {$/;"	f
random_fe_non_square	zcash/secp256k1/src/tests.c	/^void random_fe_non_square(secp256k1_fe *ns) {$/;"	f
random_fe_non_zero	zcash/secp256k1/src/tests.c	/^void random_fe_non_zero(secp256k1_fe *nz) {$/;"	f
random_fe_test	zcash/secp256k1/src/tests.c	/^void random_fe_test(secp256k1_fe *x) {$/;"	f
random_field_element_magnitude	zcash/secp256k1/src/tests.c	/^void random_field_element_magnitude(secp256k1_fe *fe) {$/;"	f
random_field_element_test	zcash/secp256k1/src/tests.c	/^void random_field_element_test(secp256k1_fe *fe) {$/;"	f
random_group_element_jacobian_test	zcash/secp256k1/src/tests.c	/^void random_group_element_jacobian_test(secp256k1_gej *gej, const secp256k1_ge *ge) {$/;"	f
random_group_element_test	zcash/secp256k1/src/tests.c	/^void random_group_element_test(secp256k1_ge *ge) {$/;"	f
random_invalid	zcash/Proof.cpp	/^ZCProof ZCProof::random_invalid()$/;"	f	class:libzcash::ZCProof
random_num_negate	zcash/secp256k1/src/tests.c	/^void random_num_negate(secp256k1_num *num) {$/;"	f
random_num_order	zcash/secp256k1/src/tests.c	/^void random_num_order(secp256k1_num *num) {$/;"	f
random_num_order_test	zcash/secp256k1/src/tests.c	/^void random_num_order_test(secp256k1_num *num) {$/;"	f
random_scalar_order	zcash/secp256k1/src/tests.c	/^void random_scalar_order(secp256k1_scalar *num) {$/;"	f
random_scalar_order_test	zcash/secp256k1/src/tests.c	/^void random_scalar_order_test(secp256k1_scalar *num) {$/;"	f
random_sign	zcash/secp256k1/src/tests.c	/^void random_sign(secp256k1_scalar *sigr, secp256k1_scalar *sigs, const secp256k1_scalar *key, const secp256k1_scalar *msg, int *recid) {$/;"	f
random_uint252	zcash/NoteEncryption.cpp	/^uint252 random_uint252()$/;"	f	namespace:libzcash
random_uint256	zcash/NoteEncryption.cpp	/^uint256 random_uint256()$/;"	f	namespace:libzcash
randombytes	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes(unsigned char * const buf, const unsigned long long buf_len)$/;"	f
randombytes_DEPENDENCIES	libsodium/test/default/Makefile	/^randombytes_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
randombytes_H	libsodium/src/libsodium/include/sodium/randombytes.h	3;"	d
randombytes_LDADD	libsodium/test/default/Makefile	/^randombytes_LDADD = $(TESTS_LDADD)$/;"	m
randombytes_OBJECTS	libsodium/test/default/Makefile	/^randombytes_OBJECTS = randombytes.$(OBJEXT)$/;"	m
randombytes_SEEDBYTES	libsodium/src/libsodium/include/sodium/randombytes.h	28;"	d
randombytes_SOURCE	libsodium/test/default/Makefile	/^randombytes_SOURCE = cmptest.h randombytes.c$/;"	m
randombytes_SOURCES	libsodium/test/default/Makefile	/^randombytes_SOURCES = randombytes.c$/;"	m
randombytes_block_on_dev_random	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_block_on_dev_random(void)$/;"	f	file:
randombytes_block_on_dev_random	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_block_on_dev_random(void)$/;"	f	file:
randombytes_buf	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_buf(void * const buf, const size_t size)$/;"	f
randombytes_buf_deterministic	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_buf_deterministic(void * const buf, const size_t size,$/;"	f
randombytes_close	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_close(void)$/;"	f
randombytes_implementation	libsodium/src/libsodium/include/sodium/randombytes.h	/^typedef struct randombytes_implementation {$/;"	s
randombytes_implementation	libsodium/src/libsodium/include/sodium/randombytes.h	/^} randombytes_implementation;$/;"	t	typeref:struct:randombytes_implementation
randombytes_implementation_name	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_implementation_name(void)$/;"	f
randombytes_init_if_needed	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_init_if_needed(void)$/;"	f	file:
randombytes_linux_getrandom	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_linux_getrandom(void * const buf_, size_t size)$/;"	f	file:
randombytes_linux_getrandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_linux_getrandom(void * const buf_, size_t size)$/;"	f	file:
randombytes_nativeclient_H	libsodium/src/libsodium/include/sodium/randombytes_nativeclient.h	3;"	d
randombytes_nativeclient_buf	libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c	/^randombytes_nativeclient_buf(void * const buf, const size_t size)$/;"	f	file:
randombytes_nativeclient_implementation	libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c	/^struct randombytes_implementation randombytes_nativeclient_implementation = {$/;"	v	typeref:struct:randombytes_implementation
randombytes_nativeclient_implementation_name	libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c	/^randombytes_nativeclient_implementation_name(void)$/;"	f	file:
randombytes_nativeclient_random	libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c	/^randombytes_nativeclient_random(void)$/;"	f	file:
randombytes_random	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_random(void)$/;"	f
randombytes_salsa20_implementation	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^struct randombytes_implementation randombytes_salsa20_implementation = {$/;"	v	typeref:struct:randombytes_implementation
randombytes_salsa20_implementation_name	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_implementation_name(void)$/;"	f	file:
randombytes_salsa20_random	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random(void)$/;"	f	file:
randombytes_salsa20_random_H	libsodium/src/libsodium/include/sodium/randombytes_salsa20_random.h	3;"	d
randombytes_salsa20_random_buf	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_buf(void * const buf, const size_t size)$/;"	f	file:
randombytes_salsa20_random_close	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_close(void)$/;"	f	file:
randombytes_salsa20_random_init	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_init(void)$/;"	f	file:
randombytes_salsa20_random_random_dev_open	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_random_dev_open(void)$/;"	f	file:
randombytes_salsa20_random_rekey	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_rekey(const unsigned char * const mix)$/;"	f	file:
randombytes_salsa20_random_stir	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_stir(void)$/;"	f	file:
randombytes_salsa20_random_stir_if_needed	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^randombytes_salsa20_random_stir_if_needed(void)$/;"	f	file:
randombytes_seedbytes	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_seedbytes(void)$/;"	f
randombytes_set_implementation	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_set_implementation(randombytes_implementation *impl)$/;"	f
randombytes_stir	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_stir(void)$/;"	f
randombytes_sysrandom	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom(void)$/;"	f	file:
randombytes_sysrandom_H	libsodium/src/libsodium/include/sodium/randombytes_sysrandom.h	3;"	d
randombytes_sysrandom_buf	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_buf(void * const buf, const size_t size)$/;"	f	file:
randombytes_sysrandom_close	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_close(void)$/;"	f	file:
randombytes_sysrandom_implementation	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^struct randombytes_implementation randombytes_sysrandom_implementation = {$/;"	v	typeref:struct:randombytes_implementation
randombytes_sysrandom_implementation_name	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_implementation_name(void)$/;"	f	file:
randombytes_sysrandom_init	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_init(void)$/;"	f	file:
randombytes_sysrandom_random_dev_open	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_random_dev_open(void)$/;"	f	file:
randombytes_sysrandom_stir	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_stir(void)$/;"	f	file:
randombytes_sysrandom_stir_if_needed	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^randombytes_sysrandom_stir_if_needed(void)$/;"	f	file:
randombytes_tests	libsodium/test/default/randombytes.c	/^randombytes_tests(void)$/;"	f	file:
randombytes_uniform	libsodium/src/libsodium/randombytes/randombytes.c	/^randombytes_uniform(const uint32_t upper_bound)$/;"	f
randombytes_uniform_impl	libsodium/test/default/randombytes.c	/^randombytes_uniform_impl(const uint32_t upper_bound)$/;"	f	file:
randomize	libsnark/src/algebra/fields/bigint.tcc	/^bigint<n>& bigint<n>::randomize()$/;"	f	class:libsnark::bigint
randomize	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static synchronized boolean randomize(byte[] seed) throws AssertFailException{$/;"	m	class:NativeSecp256k1
rdbuf	zcash/streams.h	/^    CBaseDataStream* rdbuf()         { return this; }$/;"	f	class:CBaseDataStream
read	zcash/script/zcashconsensus.cpp	/^    TxInputStream& read(char* pch, size_t nSize)$/;"	f	class:__anon18::TxInputStream
read	zcash/streams.h	/^    CAutoFile& read(char* pch, size_t nSize)$/;"	f	class:CAutoFile
read	zcash/streams.h	/^    CBaseDataStream& read(char* pch, size_t nSize)$/;"	f	class:CBaseDataStream
read	zcash/streams.h	/^    CBufferedFile& read(char *pch, size_t nSize) {$/;"	f	class:CBufferedFile
read_bigint	zcash/Proof.cpp	/^bigint<LIMBS> read_bigint(const base_blob<8 * LIMBS * sizeof(mp_limb_t)> &blob)$/;"	f	namespace:libzcash
read_successful	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    pb_linear_combination<FieldT> read_successful;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
rebind	zcash/support/allocators/secure.h	/^    struct rebind {$/;"	s	struct:secure_allocator
rebind	zcash/support/allocators/zeroafterfree.h	/^    struct rebind {$/;"	s	struct:zero_after_free_allocator
recovery_test_nonce_function	zcash/secp256k1/src/modules/recovery/tests_impl.h	/^static int recovery_test_nonce_function(unsigned char *nonce32, const unsigned char *msg32, const unsigned char *key32, const unsigned char *algo16, void *data, unsigned int counter) {$/;"	f
reduce_output	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<lastbits_gadget<FieldT> > reduce_output;$/;"	m	class:libsnark::sha256_compression_function_gadget
reduced_output	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    pb_variable_array<FieldT> reduced_output;$/;"	m	class:libsnark::sha256_compression_function_gadget
reduced_pairing	libsnark/src/algebra/curves/alt_bn128/alt_bn128_pp.cpp	/^alt_bn128_Fq12 alt_bn128_pp::reduced_pairing(const alt_bn128_G1 &P,$/;"	f	class:libsnark::alt_bn128_pp
refcount	zcash/pubkey.cpp	/^\/* static *\/ int ECCVerifyHandle::refcount = 0;$/;"	m	class:ECCVerifyHandle	file:
refcount	zcash/pubkey.h	/^    static int refcount;$/;"	m	class:ECCVerifyHandle
reference	zcash/streams.h	/^    typedef typename vector_type::reference        reference;$/;"	t	class:CBaseDataStream
reference	zcash/support/allocators/secure.h	/^    typedef typename base::reference reference;$/;"	t	struct:secure_allocator
reference	zcash/support/allocators/zeroafterfree.h	/^    typedef typename base::reference reference;$/;"	t	struct:zero_after_free_allocator
region	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    block_region *region;        \/* Memory region pointer *\/$/;"	m	struct:Argon2_instance_t
release	zcash/streams.h	/^    FILE* release()             { FILE* ret = file; file = NULL; return ret; }$/;"	f	class:CAutoFile
rep	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^rep movsb$/;"	l
rep	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^rep stosb$/;"	l
report_linear_constraint_statistics	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^void r1cs_constraint_system<FieldT>::report_linear_constraint_statistics() const$/;"	f	class:libsnark::r1cs_constraint_system
reserialize	libsnark/src/common/serialization.tcc	/^T reserialize(const T &obj)$/;"	f	namespace:libsnark
reserve	zcash/streams.h	/^    void reserve(size_type n)                        { vch.reserve(n + nReadPos); }$/;"	f	class:CBaseDataStream
reserved	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t reserved[14];                    \/* 32 *\/$/;"	m	struct:blake2b_param_
resize	zcash/streams.h	/^    void resize(size_type n, value_type c=0)         { vch.resize(n + nReadPos, c); }$/;"	f	class:CBaseDataStream
rest	libsnark/src/common/data_structures/accumulation_vector.hpp	/^    sparse_vector<T> rest;$/;"	m	class:libsnark::accumulation_vector
result	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable<FieldT> result;$/;"	m	class:libsnark::inner_product_gadget
result	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable<FieldT> result;$/;"	m	class:libsnark::loose_multiplexing_gadget
result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable<FieldT> result;$/;"	m	class:libsnark::big_sigma_gadget
result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable<FieldT> result;$/;"	m	class:libsnark::choice_gadget
result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable<FieldT> result;$/;"	m	class:libsnark::lastbits_gadget
result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable<FieldT> result;$/;"	m	class:libsnark::majority_gadget
result	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable<FieldT> result;$/;"	m	class:libsnark::small_sigma_gadget
result	zcash/circuit/prfs.tcc	/^    std::shared_ptr<digest_variable<FieldT>> result;$/;"	m	class:PRF_gadget	file:
result_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_linear_combination_array<FieldT> result_bits;$/;"	m	class:libsnark::lastbits_gadget
result_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable_array<FieldT> result_bits;$/;"	m	class:libsnark::big_sigma_gadget
result_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable_array<FieldT> result_bits;$/;"	m	class:libsnark::choice_gadget
result_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable_array<FieldT> result_bits;$/;"	m	class:libsnark::majority_gadget
result_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable_array<FieldT> result_bits;$/;"	m	class:libsnark::small_sigma_gadget
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^ret$/;"	l
ret	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^ret$/;"	l
retry	zcash/secp256k1/src/hash.h	/^    int retry;$/;"	m	struct:__anon51
reverse_iterator	zcash/streams.h	/^    typedef typename vector_type::reverse_iterator reverse_iterator;$/;"	t	class:CBaseDataStream
rho	zcash/Note.hpp	/^    uint256 rho;$/;"	m	class:libzcash::Note
rho	zcash/Note.hpp	/^    uint256 rho;$/;"	m	class:libzcash::NotePlaintext
rho	zcash/circuit/note.tcc	/^    std::shared_ptr<digest_variable<FieldT>> rho;$/;"	m	class:input_note_gadget	file:
rho	zcash/circuit/note.tcc	/^    std::shared_ptr<digest_variable<FieldT>> rho;$/;"	m	class:output_note_gadget	file:
right	libsnark/src/gadgetlib1/gadgets/hashes/digest_selector_gadget.hpp	/^    digest_variable<FieldT> right;$/;"	m	class:libsnark::digest_selector_gadget
right	zcash/IncrementalMerkleTree.hpp	/^    boost::optional<Hash> right;$/;"	m	class:libzcash::IncrementalMerkleTree
right_digests	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.hpp	/^    std::vector<digest_variable<FieldT> > right_digests;$/;"	m	class:libsnark::merkle_authentication_path_variable
ripemd160	zcash/crypto/ripemd160.cpp	/^namespace ripemd160$/;"	n	namespace:__anon28	file:
rkeys	libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c	/^    __m128i          rkeys[16];$/;"	m	struct:context	file:
rnd32	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    unsigned char rnd32[16U * SALSA20_RANDOM_BLOCK_SIZE];$/;"	m	struct:Salsa20Random_	file:
rnd32_outleft	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^    size_t        rnd32_outleft;$/;"	m	struct:Salsa20Random_	file:
rol	zcash/crypto/ripemd160.cpp	/^uint32_t inline rol(uint32_t x, int i) { return (x << i) | (x >> (32 - i)); }$/;"	f	namespace:__anon28::ripemd160
root	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    digest_variable<FieldT> root;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
root	zcash/IncrementalMerkleTree.cpp	/^Hash IncrementalMerkleTree<Depth, Hash>::root(size_t depth,$/;"	f	class:libzcash::IncrementalMerkleTree
root	zcash/IncrementalMerkleTree.hpp	/^    Hash root() const {$/;"	f	class:libzcash::IncrementalMerkleTree
root	zcash/IncrementalMerkleTree.hpp	/^    Hash root() const {$/;"	f	class:libzcash::IncrementalWitness
root_of_unity	libsnark/src/algebra/fields/fp.hpp	/^    static Fp_model<n, modulus> root_of_unity; \/\/ generator^((modulus-1)\/2^s)$/;"	m	class:libsnark::Fp_model
root_of_unity	libsnark/src/algebra/fields/fp.hpp	/^Fp_model<n, modulus> Fp_model<n, modulus>::root_of_unity;$/;"	m	class:libsnark::Fp_model
root_size_in_bits	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.tcc	/^size_t merkle_tree_check_read_gadget<FieldT, HashT>::root_size_in_bits()$/;"	f	class:libsnark::merkle_tree_check_read_gadget
root_size_in_bits	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.tcc	/^size_t merkle_tree_check_update_gadget<FieldT, HashT>::root_size_in_bits()$/;"	f	class:libsnark::merkle_tree_check_update_gadget
rotbyte	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	457;"	d
rotl32	libsodium/src/libsodium/include/sodium/private/common.h	/^rotl32(const uint32_t x, const int b)$/;"	f
rotl64	libsodium/src/libsodium/include/sodium/private/common.h	/^rotl64(const uint64_t x, const int b)$/;"	f
rotr16	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	9;"	d
rotr24	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	8;"	d
rotr32	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	7;"	d
rotr32	libsodium/src/libsodium/include/sodium/private/common.h	/^rotr32(const uint32_t x, const int b)$/;"	f
rotr63	libsodium/src/libsodium/crypto_pwhash/argon2/blamka-round-avx2.h	10;"	d
rotr64	libsodium/src/libsodium/include/sodium/private/common.h	/^rotr64(const uint64_t x, const int b)$/;"	f
round_a	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<pb_linear_combination_array<FieldT> > round_a;$/;"	m	class:libsnark::sha256_compression_function_gadget
round_b	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<pb_linear_combination_array<FieldT> > round_b;$/;"	m	class:libsnark::sha256_compression_function_gadget
round_c	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<pb_linear_combination_array<FieldT> > round_c;$/;"	m	class:libsnark::sha256_compression_function_gadget
round_d	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<pb_linear_combination_array<FieldT> > round_d;$/;"	m	class:libsnark::sha256_compression_function_gadget
round_e	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<pb_linear_combination_array<FieldT> > round_e;$/;"	m	class:libsnark::sha256_compression_function_gadget
round_f	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<pb_linear_combination_array<FieldT> > round_f;$/;"	m	class:libsnark::sha256_compression_function_gadget
round_functions	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<sha256_round_function_gadget<FieldT> > round_functions;$/;"	m	class:libsnark::sha256_compression_function_gadget
round_g	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<pb_linear_combination_array<FieldT> > round_g;$/;"	m	class:libsnark::sha256_compression_function_gadget
round_h	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    std::vector<pb_linear_combination_array<FieldT> > round_h;$/;"	m	class:libsnark::sha256_compression_function_gadget
rs	libsodium/test/default/onetimeauth.c	/^static unsigned char rs[32] = {$/;"	v	file:
rs	libsodium/test/default/onetimeauth2.c	/^static unsigned char rs[32] = {$/;"	v	file:
rs	libsodium/test/default/stream3.c	/^static unsigned char rs[32];$/;"	v	file:
rshift32_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	32;"	d
rshift32_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^rshift32_littleendian(aes_uint128_t *r, const unsigned int n)$/;"	f
rshift64_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	35;"	d
rshift64_littleendian	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^rshift64_littleendian(aes_uint128_t *r, const unsigned int n)$/;"	f
runCommand	zcash/zcashutil.cpp	/^void runCommand(const std::string& strCommand)$/;"	f
run_benchmark	zcash/secp256k1/src/bench.h	/^void run_benchmark(char *name, void (*benchmark)(void*), void (*setup)(void*), void (*teardown)(void*), void* data, int count, int iter) {$/;"	f
run_context_tests	zcash/secp256k1/src/tests.c	/^void run_context_tests(void) {$/;"	f
run_ec_combine	zcash/secp256k1/src/tests.c	/^void run_ec_combine(void) {$/;"	f
run_ec_pubkey_parse_test	zcash/secp256k1/src/tests.c	/^void run_ec_pubkey_parse_test(void) {$/;"	f
run_ecdh_tests	zcash/secp256k1/src/modules/ecdh/tests_impl.h	/^void run_ecdh_tests(void) {$/;"	f
run_ecdsa_der_parse	zcash/secp256k1/src/tests.c	/^void run_ecdsa_der_parse(void) {$/;"	f
run_ecdsa_edge_cases	zcash/secp256k1/src/tests.c	/^void run_ecdsa_edge_cases(void) {$/;"	f
run_ecdsa_end_to_end	zcash/secp256k1/src/tests.c	/^void run_ecdsa_end_to_end(void) {$/;"	f
run_ecdsa_openssl	zcash/secp256k1/src/tests.c	/^void run_ecdsa_openssl(void) {$/;"	f
run_ecdsa_sign_verify	zcash/secp256k1/src/tests.c	/^void run_ecdsa_sign_verify(void) {$/;"	f
run_eckey_edge_case_test	zcash/secp256k1/src/tests.c	/^void run_eckey_edge_case_test(void) {$/;"	f
run_ecmult_chain	zcash/secp256k1/src/tests.c	/^void run_ecmult_chain(void) {$/;"	f
run_ecmult_const_tests	zcash/secp256k1/src/tests.c	/^void run_ecmult_const_tests(void) {$/;"	f
run_ecmult_constants	zcash/secp256k1/src/tests.c	/^void run_ecmult_constants(void) {$/;"	f
run_ecmult_gen_blind	zcash/secp256k1/src/tests.c	/^void run_ecmult_gen_blind(void) {$/;"	f
run_endomorphism_tests	zcash/secp256k1/src/tests.c	/^void run_endomorphism_tests(void) {$/;"	f
run_field_convert	zcash/secp256k1/src/tests.c	/^void run_field_convert(void) {$/;"	f
run_field_inv	zcash/secp256k1/src/tests.c	/^void run_field_inv(void) {$/;"	f
run_field_inv_all_var	zcash/secp256k1/src/tests.c	/^void run_field_inv_all_var(void) {$/;"	f
run_field_inv_var	zcash/secp256k1/src/tests.c	/^void run_field_inv_var(void) {$/;"	f
run_field_misc	zcash/secp256k1/src/tests.c	/^void run_field_misc(void) {$/;"	f
run_ge	zcash/secp256k1/src/tests.c	/^void run_ge(void) {$/;"	f
run_group_decompress	zcash/secp256k1/src/tests.c	/^void run_group_decompress(void) {$/;"	f
run_hmac_sha256_tests	zcash/secp256k1/src/tests.c	/^void run_hmac_sha256_tests(void) {$/;"	f
run_num_smalltests	zcash/secp256k1/src/tests.c	/^void run_num_smalltests(void) {$/;"	f
run_point_times_order	zcash/secp256k1/src/tests.c	/^void run_point_times_order(void) {$/;"	f
run_r1cs_ppzksnark	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/examples/run_r1cs_ppzksnark.tcc	/^bool run_r1cs_ppzksnark(const r1cs_example<Fr<ppT> > &example,$/;"	f	namespace:libsnark
run_rand_bits	zcash/secp256k1/src/tests.c	/^void run_rand_bits(void) {$/;"	f
run_rand_int	zcash/secp256k1/src/tests.c	/^void run_rand_int(void) {$/;"	f
run_random_pubkeys	zcash/secp256k1/src/tests.c	/^void run_random_pubkeys(void) {$/;"	f
run_recovery_tests	zcash/secp256k1/src/modules/recovery/tests_impl.h	/^void run_recovery_tests(void) {$/;"	f
run_rfc6979_hmac_sha256_tests	zcash/secp256k1/src/tests.c	/^void run_rfc6979_hmac_sha256_tests(void) {$/;"	f
run_scalar_tests	zcash/secp256k1/src/tests.c	/^void run_scalar_tests(void) {$/;"	f
run_sha256_tests	zcash/secp256k1/src/tests.c	/^void run_sha256_tests(void) {$/;"	f
run_sqr	zcash/secp256k1/src/tests.c	/^void run_sqr(void) {$/;"	f
run_sqrt	zcash/secp256k1/src/tests.c	/^void run_sqrt(void) {$/;"	f
run_wnaf	zcash/secp256k1/src/tests.c	/^void run_wnaf(void) {$/;"	f
runstatedir	Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	demo/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/contrib/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/dist-build/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/msvc-scripts/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/src/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/src/libsodium/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/src/libsodium/include/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/test/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	libsodium/test/default/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	zcash/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
runstatedir	zcash/secp256k1/Makefile	/^runstatedir = ${localstatedir}\/run$/;"	m
rwl	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static final ReentrantReadWriteLock rwl = new ReentrantReadWriteLock();$/;"	f	class:NativeSecp256k1	file:
s	libsnark/src/algebra/fields/fp.hpp	/^    static size_t s; \/\/ modulus = 2^s * t + 1$/;"	m	class:libsnark::Fp_model
s	libsnark/src/algebra/fields/fp.hpp	/^size_t Fp_model<n, modulus>::s;$/;"	m	class:libsnark::Fp_model
s	libsnark/src/algebra/fields/fp2.hpp	/^    static size_t s;       \/\/ modulus^2 = 2^s * t + 1$/;"	m	class:libsnark::Fp2_model
s	libsnark/src/algebra/fields/fp2.hpp	/^size_t Fp2_model<n, modulus>::s;$/;"	m	class:libsnark::Fp2_model
s	libsnark/src/algebra/fields/fp3.hpp	/^    static size_t s;       \/\/ modulus^3 = 2^s * t + 1$/;"	m	class:libsnark::Fp3_model
s	libsnark/src/algebra/fields/fp3.hpp	/^size_t Fp3_model<n, modulus>::s;$/;"	m	class:libsnark::Fp3_model
s	zcash/crypto/ripemd160.h	/^    uint32_t s[5];$/;"	m	class:CRIPEMD160
s	zcash/crypto/sha1.h	/^    uint32_t s[5];$/;"	m	class:CSHA1
s	zcash/crypto/sha256.h	/^    uint32_t s[8];$/;"	m	class:CSHA256
s	zcash/crypto/sha512.h	/^    uint64_t s[8];$/;"	m	class:CSHA512
s	zcash/secp256k1/src/hash.h	/^    uint32_t s[8];$/;"	m	struct:__anon49
s0	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	80;"	d	file:
s0	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	96;"	d	file:
s1	libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256_cp.c	81;"	d	file:
s1	libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512_cp.c	97;"	d	file:
safe_read	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^safe_read(const int fd, void * const buf_, size_t size)$/;"	f	file:
safe_read	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^safe_read(const int fd, void * const buf_, size_t size)$/;"	f	file:
salsa20_8	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^salsa20_8(uint32_t B[16])$/;"	f	file:
salsa20_encrypt_bytes	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^salsa20_encrypt_bytes(salsa_ctx *ctx, const uint8_t *m, uint8_t *c,$/;"	f	file:
salsa20_encrypt_bytes	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^salsa20_encrypt_bytes(salsa_ctx *ctx, const uint8_t *m, uint8_t *c,$/;"	f	file:
salsa_ctx	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^typedef struct salsa_ctx {$/;"	s	file:
salsa_ctx	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^} salsa_ctx;$/;"	t	typeref:struct:salsa_ctx	file:
salsa_ctx	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^typedef struct salsa_ctx {$/;"	s	file:
salsa_ctx	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^} salsa_ctx;$/;"	t	typeref:struct:salsa_ctx	file:
salsa_ivsetup	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^salsa_ivsetup(salsa_ctx *ctx, const uint8_t *iv, const uint8_t *counter)$/;"	f	file:
salsa_ivsetup	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^salsa_ivsetup(salsa_ctx *ctx, const uint8_t *iv, const uint8_t *counter)$/;"	f	file:
salsa_keysetup	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^salsa_keysetup(salsa_ctx *ctx, const uint8_t *k)$/;"	f	file:
salsa_keysetup	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^salsa_keysetup(salsa_ctx *ctx, const uint8_t *k)$/;"	f	file:
salt	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2.h	/^    uint8_t salt[BLAKE2B_SALTBYTES];         \/* 48 *\/$/;"	m	struct:blake2b_param_
salt	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *salt;    \/* salt array *\/$/;"	m	struct:Argon2_Context
salt1	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *   salt1   = "";$/;"	v	file:
salt2	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *   salt2   = "NaCl";$/;"	v	file:
salt3	libsodium/test/default/pwhash_scrypt_ll.c	/^static const char *   salt3   = "SodiumChloride";$/;"	v	file:
saltlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t saltlen; \/* salt length *\/$/;"	m	struct:Argon2_Context
sanity_test_fdelt	zcash/compat/glibc_sanity.cpp	/^bool sanity_test_fdelt()$/;"	f	namespace:__anon33
sanity_test_list	zcash/compat/glibcxx_sanity.cpp	/^bool sanity_test_list(unsigned int size)$/;"	f	namespace:__anon32
sanity_test_memcpy	zcash/compat/glibc_sanity.cpp	/^bool sanity_test_memcpy()$/;"	f	namespace:__anon33
sanity_test_range_fmt	zcash/compat/glibcxx_sanity.cpp	/^bool sanity_test_range_fmt()$/;"	f
sanity_test_widen	zcash/compat/glibcxx_sanity.cpp	/^bool sanity_test_widen(char testchar)$/;"	f	namespace:__anon32
saveProvingKey	zcash/JoinSplit.cpp	/^    void saveProvingKey(std::string path) {$/;"	f	class:libzcash::JoinSplitCircuit
saveR1CS	zcash/JoinSplit.cpp	/^    void saveR1CS(std::string path) {$/;"	f	class:libzcash::JoinSplitCircuit
saveToFile	zcash/JoinSplit.cpp	/^void saveToFile(std::string path, T& obj) {$/;"	f	namespace:libzcash
saveVerifyingKey	zcash/JoinSplit.cpp	/^    void saveVerifyingKey(std::string path) {$/;"	f	class:libzcash::JoinSplitCircuit
sbindir	Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	demo/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/contrib/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/dist-build/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/msvc-scripts/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/src/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/src/libsodium/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/src/libsodium/include/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/test/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	libsodium/test/default/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	zcash/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbindir	zcash/secp256k1/Makefile	/^sbindir = ${exec_prefix}\/sbin$/;"	m
sbox	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	548;"	d
sc_muladd	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^sc_muladd(unsigned char *s, const unsigned char *a, const unsigned char *b,$/;"	f
sc_muladd	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	155;"	d
sc_reduce	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^sc_reduce(unsigned char *s)$/;"	f
sc_reduce	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	154;"	d
scalar	libsodium/test/default/scalarmult7.c	/^static unsigned char scalar[32];$/;"	v	file:
scalar	zcash/secp256k1/src/bench_ecdh.c	/^    unsigned char scalar[32];$/;"	m	struct:__anon41	file:
scalar_field	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    typedef alt_bn128_Fr scalar_field;$/;"	t	class:libsnark::alt_bn128_G1
scalar_field	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    typedef alt_bn128_Fr scalar_field;$/;"	t	class:libsnark::alt_bn128_G2
scalar_mul	libsnark/src/algebra/curves/curve_utils.tcc	/^GroupT scalar_mul(const GroupT &base, const bigint<m> &scalar)$/;"	f	namespace:libsnark
scalar_test	zcash/secp256k1/src/tests.c	/^void scalar_test(void) {$/;"	f
scalar_x	zcash/secp256k1/src/bench_internal.c	/^    secp256k1_scalar scalar_x, scalar_y;$/;"	m	struct:__anon52	file:
scalar_y	zcash/secp256k1/src/bench_internal.c	/^    secp256k1_scalar scalar_x, scalar_y;$/;"	m	struct:__anon52	file:
scalarmult2_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult2_LDADD	libsodium/test/default/Makefile	/^scalarmult2_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult2_OBJECTS	libsodium/test/default/Makefile	/^scalarmult2_OBJECTS = scalarmult2.$(OBJEXT)$/;"	m
scalarmult2_SOURCE	libsodium/test/default/Makefile	/^scalarmult2_SOURCE = cmptest.h scalarmult2.c$/;"	m
scalarmult2_SOURCES	libsodium/test/default/Makefile	/^scalarmult2_SOURCES = scalarmult2.c$/;"	m
scalarmult5_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult5_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult5_LDADD	libsodium/test/default/Makefile	/^scalarmult5_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult5_OBJECTS	libsodium/test/default/Makefile	/^scalarmult5_OBJECTS = scalarmult5.$(OBJEXT)$/;"	m
scalarmult5_SOURCE	libsodium/test/default/Makefile	/^scalarmult5_SOURCE = cmptest.h scalarmult5.c$/;"	m
scalarmult5_SOURCES	libsodium/test/default/Makefile	/^scalarmult5_SOURCES = scalarmult5.c$/;"	m
scalarmult6_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult6_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult6_LDADD	libsodium/test/default/Makefile	/^scalarmult6_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult6_OBJECTS	libsodium/test/default/Makefile	/^scalarmult6_OBJECTS = scalarmult6.$(OBJEXT)$/;"	m
scalarmult6_SOURCE	libsodium/test/default/Makefile	/^scalarmult6_SOURCE = cmptest.h scalarmult6.c$/;"	m
scalarmult6_SOURCES	libsodium/test/default/Makefile	/^scalarmult6_SOURCES = scalarmult6.c$/;"	m
scalarmult7_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult7_LDADD	libsodium/test/default/Makefile	/^scalarmult7_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult7_OBJECTS	libsodium/test/default/Makefile	/^scalarmult7_OBJECTS = scalarmult7.$(OBJEXT)$/;"	m
scalarmult7_SOURCE	libsodium/test/default/Makefile	/^scalarmult7_SOURCE = cmptest.h scalarmult7.c$/;"	m
scalarmult7_SOURCES	libsodium/test/default/Makefile	/^scalarmult7_SOURCES = scalarmult7.c$/;"	m
scalarmult_DEPENDENCIES	libsodium/test/default/Makefile	/^scalarmult_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
scalarmult_LDADD	libsodium/test/default/Makefile	/^scalarmult_LDADD = $(TESTS_LDADD)$/;"	m
scalarmult_OBJECTS	libsodium/test/default/Makefile	/^scalarmult_OBJECTS = scalarmult.$(OBJEXT)$/;"	m
scalarmult_SOURCE	libsodium/test/default/Makefile	/^scalarmult_SOURCE = cmptest.h scalarmult.c$/;"	m
scalarmult_SOURCES	libsodium/test/default/Makefile	/^scalarmult_SOURCES = scalarmult.c$/;"	m
scalarmult_poly1305_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.h	3;"	d
screenWidth	zcash/zcashutil.cpp	/^static const int screenWidth = 79;$/;"	v	file:
script	zcash/script/standard.cpp	/^    CScript *script;$/;"	m	class:__anon22::CScriptVisitor	file:
scriptCode	zcash/script/interpreter.cpp	/^    const CScript &scriptCode; \/\/! output script being consumed$/;"	m	class:__anon21::CTransactionSignatureSerializer	file:
scriptPubKey	zcash/primitives/transaction.h	/^    CScript scriptPubKey;$/;"	m	class:CTxOut
scriptSig	zcash/primitives/transaction.h	/^    CScript scriptSig;$/;"	m	class:CTxIn
scriptnum_error	zcash/script/script.h	/^    explicit scriptnum_error(const std::string& str) : std::runtime_error(str) {}$/;"	f	class:scriptnum_error
scriptnum_error	zcash/script/script.h	/^class scriptnum_error : public std::runtime_error$/;"	c
secKeyVerify	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static boolean secKeyVerify(byte[] seckey) {$/;"	m	class:NativeSecp256k1
secondkey	libsodium/test/default/core2.c	/^static unsigned char secondkey[32];$/;"	v	file:
secondkey	libsodium/test/default/core3.c	/^static unsigned char secondkey[32] = { 0xdc, 0x90, 0x8d, 0xda, 0x0b, 0x93, 0x44,$/;"	v	file:
secondkey	libsodium/test/default/stream2.c	/^static unsigned char secondkey[32] = { 0xdc, 0x90, 0x8d, 0xda, 0x0b, 0x93, 0x44,$/;"	v	file:
secp256k1_callback	zcash/secp256k1/src/util.h	/^} secp256k1_callback;$/;"	t	typeref:struct:__anon58
secp256k1_callback_call	zcash/secp256k1/src/util.h	/^static SECP256K1_INLINE void secp256k1_callback_call(const secp256k1_callback * const cb, const char * const text) {$/;"	f
secp256k1_context	zcash/secp256k1/include/secp256k1.h	/^typedef struct secp256k1_context_struct secp256k1_context;$/;"	t	typeref:struct:secp256k1_context_struct
secp256k1_context_clone	zcash/secp256k1/src/secp256k1.c	/^secp256k1_context* secp256k1_context_clone(const secp256k1_context* ctx) {$/;"	f
secp256k1_context_create	zcash/secp256k1/src/secp256k1.c	/^secp256k1_context* secp256k1_context_create(unsigned int flags) {$/;"	f
secp256k1_context_destroy	zcash/secp256k1/src/secp256k1.c	/^void secp256k1_context_destroy(secp256k1_context* ctx) {$/;"	f
secp256k1_context_randomize	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native int secp256k1_context_randomize(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_context_randomize	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_context_randomize(secp256k1_context* ctx, const unsigned char *seed32) {$/;"	f
secp256k1_context_set_error_callback	zcash/secp256k1/src/secp256k1.c	/^void secp256k1_context_set_error_callback(secp256k1_context* ctx, void (*fun)(const char* message, void* data), const void* data) {$/;"	f
secp256k1_context_set_illegal_callback	zcash/secp256k1/src/secp256k1.c	/^void secp256k1_context_set_illegal_callback(secp256k1_context* ctx, void (*fun)(const char* message, void* data), const void* data) {$/;"	f
secp256k1_context_sign	zcash/key.cpp	/^static secp256k1_context* secp256k1_context_sign = NULL;$/;"	v	file:
secp256k1_context_struct	zcash/secp256k1/src/secp256k1.c	/^struct secp256k1_context_struct {$/;"	s	file:
secp256k1_context_verify	zcash/pubkey.cpp	/^secp256k1_context* secp256k1_context_verify = NULL;$/;"	m	namespace:__anon27	file:
secp256k1_ctx_clone	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native long secp256k1_ctx_clone(long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_der_parse_integer	zcash/secp256k1/src/ecdsa_impl.h	/^static int secp256k1_der_parse_integer(secp256k1_scalar *r, const unsigned char **sig, const unsigned char *sigend) {$/;"	f
secp256k1_der_read_len	zcash/secp256k1/src/ecdsa_impl.h	/^static int secp256k1_der_read_len(const unsigned char **sigp, const unsigned char *sigend) {$/;"	f
secp256k1_destroy_context	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native void secp256k1_destroy_context(long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ec_privkey_negate	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_privkey_negate(const secp256k1_context* ctx, unsigned char *seckey) {$/;"	f
secp256k1_ec_privkey_tweak_add	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_privkey_tweak_add(const secp256k1_context* ctx, unsigned char *seckey, const unsigned char *tweak) {$/;"	f
secp256k1_ec_privkey_tweak_mul	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_privkey_tweak_mul(const secp256k1_context* ctx, unsigned char *seckey, const unsigned char *tweak) {$/;"	f
secp256k1_ec_pubkey_combine	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_combine(const secp256k1_context* ctx, secp256k1_pubkey *pubnonce, const secp256k1_pubkey * const *pubnonces, size_t n) {$/;"	f
secp256k1_ec_pubkey_create	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_ec_pubkey_create(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ec_pubkey_create	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_create(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *seckey) {$/;"	f
secp256k1_ec_pubkey_negate	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_negate(const secp256k1_context* ctx, secp256k1_pubkey *pubkey) {$/;"	f
secp256k1_ec_pubkey_parse	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_ec_pubkey_parse(ByteBuffer byteBuff, long context, int inputLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ec_pubkey_parse	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_parse(const secp256k1_context* ctx, secp256k1_pubkey* pubkey, const unsigned char *input, size_t inputlen) {$/;"	f
secp256k1_ec_pubkey_serialize	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_serialize(const secp256k1_context* ctx, unsigned char *output, size_t *outputlen, const secp256k1_pubkey* pubkey, unsigned int flags) {$/;"	f
secp256k1_ec_pubkey_tweak_add	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_tweak_add(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *tweak) {$/;"	f
secp256k1_ec_pubkey_tweak_mul	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_pubkey_tweak_mul(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const unsigned char *tweak) {$/;"	f
secp256k1_ec_seckey_verify	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native int secp256k1_ec_seckey_verify(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ec_seckey_verify	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ec_seckey_verify(const secp256k1_context* ctx, const unsigned char *seckey) {$/;"	f
secp256k1_ecdh	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_ecdh(ByteBuffer byteBuff, long context, int inputLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ecdh	zcash/secp256k1/src/modules/ecdh/main_impl.h	/^int secp256k1_ecdh(const secp256k1_context* ctx, unsigned char *result, const secp256k1_pubkey *point, const unsigned char *scalar) {$/;"	f
secp256k1_ecdsa_const_order_as_fe	zcash/secp256k1/src/ecdsa_impl.h	/^static const secp256k1_fe secp256k1_ecdsa_const_order_as_fe = SECP256K1_FE_CONST($/;"	v
secp256k1_ecdsa_const_p_minus_order	zcash/secp256k1/src/ecdsa_impl.h	/^static const secp256k1_fe secp256k1_ecdsa_const_p_minus_order = SECP256K1_FE_CONST($/;"	v
secp256k1_ecdsa_recover	zcash/secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_recover(const secp256k1_context* ctx, secp256k1_pubkey *pubkey, const secp256k1_ecdsa_recoverable_signature *signature, const unsigned char *msg32) {$/;"	f
secp256k1_ecdsa_recoverable_signature	zcash/secp256k1/include/secp256k1_recovery.h	/^} secp256k1_ecdsa_recoverable_signature;$/;"	t	typeref:struct:__anon37
secp256k1_ecdsa_recoverable_signature_convert	zcash/secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_recoverable_signature_convert(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const secp256k1_ecdsa_recoverable_signature* sigin) {$/;"	f
secp256k1_ecdsa_recoverable_signature_load	zcash/secp256k1/src/modules/recovery/main_impl.h	/^static void secp256k1_ecdsa_recoverable_signature_load(const secp256k1_context* ctx, secp256k1_scalar* r, secp256k1_scalar* s, int* recid, const secp256k1_ecdsa_recoverable_signature* sig) {$/;"	f
secp256k1_ecdsa_recoverable_signature_parse_compact	zcash/secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_recoverable_signature_parse_compact(const secp256k1_context* ctx, secp256k1_ecdsa_recoverable_signature* sig, const unsigned char *input64, int recid) {$/;"	f
secp256k1_ecdsa_recoverable_signature_save	zcash/secp256k1/src/modules/recovery/main_impl.h	/^static void secp256k1_ecdsa_recoverable_signature_save(secp256k1_ecdsa_recoverable_signature* sig, const secp256k1_scalar* r, const secp256k1_scalar* s, int recid) {$/;"	f
secp256k1_ecdsa_recoverable_signature_serialize_compact	zcash/secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_recoverable_signature_serialize_compact(const secp256k1_context* ctx, unsigned char *output64, int *recid, const secp256k1_ecdsa_recoverable_signature* sig) {$/;"	f
secp256k1_ecdsa_sig_parse	zcash/secp256k1/src/ecdsa_impl.h	/^static int secp256k1_ecdsa_sig_parse(secp256k1_scalar *rr, secp256k1_scalar *rs, const unsigned char *sig, size_t size) {$/;"	f
secp256k1_ecdsa_sig_recover	zcash/secp256k1/src/modules/recovery/main_impl.h	/^static int secp256k1_ecdsa_sig_recover(const secp256k1_ecmult_context *ctx, const secp256k1_scalar *sigr, const secp256k1_scalar* sigs, secp256k1_ge *pubkey, const secp256k1_scalar *message, int recid) {$/;"	f
secp256k1_ecdsa_sig_serialize	zcash/secp256k1/src/ecdsa_impl.h	/^static int secp256k1_ecdsa_sig_serialize(unsigned char *sig, size_t *size, const secp256k1_scalar* ar, const secp256k1_scalar* as) {$/;"	f
secp256k1_ecdsa_sig_sign	zcash/secp256k1/src/ecdsa_impl.h	/^static int secp256k1_ecdsa_sig_sign(const secp256k1_ecmult_gen_context *ctx, secp256k1_scalar *sigr, secp256k1_scalar *sigs, const secp256k1_scalar *seckey, const secp256k1_scalar *message, const secp256k1_scalar *nonce, int *recid) {$/;"	f
secp256k1_ecdsa_sig_verify	zcash/secp256k1/src/ecdsa_impl.h	/^static int secp256k1_ecdsa_sig_verify(const secp256k1_ecmult_context *ctx, const secp256k1_scalar *sigr, const secp256k1_scalar *sigs, const secp256k1_ge *pubkey, const secp256k1_scalar *message) {$/;"	f
secp256k1_ecdsa_sign	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_ecdsa_sign(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ecdsa_sign	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_sign(const secp256k1_context* ctx, secp256k1_ecdsa_signature *signature, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, const void* noncedata) {$/;"	f
secp256k1_ecdsa_sign_recoverable	zcash/secp256k1/src/modules/recovery/main_impl.h	/^int secp256k1_ecdsa_sign_recoverable(const secp256k1_context* ctx, secp256k1_ecdsa_recoverable_signature *signature, const unsigned char *msg32, const unsigned char *seckey, secp256k1_nonce_function noncefp, const void* noncedata) {$/;"	f
secp256k1_ecdsa_signature	zcash/secp256k1/include/secp256k1.h	/^} secp256k1_ecdsa_signature;$/;"	t	typeref:struct:__anon36
secp256k1_ecdsa_signature_load	zcash/secp256k1/src/secp256k1.c	/^static void secp256k1_ecdsa_signature_load(const secp256k1_context* ctx, secp256k1_scalar* r, secp256k1_scalar* s, const secp256k1_ecdsa_signature* sig) {$/;"	f	file:
secp256k1_ecdsa_signature_normalize	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_normalize(const secp256k1_context* ctx, secp256k1_ecdsa_signature *sigout, const secp256k1_ecdsa_signature *sigin) {$/;"	f
secp256k1_ecdsa_signature_parse_compact	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_parse_compact(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input64) {$/;"	f
secp256k1_ecdsa_signature_parse_der	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_parse_der(const secp256k1_context* ctx, secp256k1_ecdsa_signature* sig, const unsigned char *input, size_t inputlen) {$/;"	f
secp256k1_ecdsa_signature_save	zcash/secp256k1/src/secp256k1.c	/^static void secp256k1_ecdsa_signature_save(secp256k1_ecdsa_signature* sig, const secp256k1_scalar* r, const secp256k1_scalar* s) {$/;"	f	file:
secp256k1_ecdsa_signature_serialize_compact	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_serialize_compact(const secp256k1_context* ctx, unsigned char *output64, const secp256k1_ecdsa_signature* sig) {$/;"	f
secp256k1_ecdsa_signature_serialize_der	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_signature_serialize_der(const secp256k1_context* ctx, unsigned char *output, size_t *outputlen, const secp256k1_ecdsa_signature* sig) {$/;"	f
secp256k1_ecdsa_verify	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native int secp256k1_ecdsa_verify(ByteBuffer byteBuff, long context, int sigLen, int pubLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_ecdsa_verify	zcash/secp256k1/src/secp256k1.c	/^int secp256k1_ecdsa_verify(const secp256k1_context* ctx, const secp256k1_ecdsa_signature *sig, const unsigned char *msg32, const secp256k1_pubkey *pubkey) {$/;"	f
secp256k1_eckey_privkey_tweak_add	zcash/secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_privkey_tweak_add(secp256k1_scalar *key, const secp256k1_scalar *tweak) {$/;"	f
secp256k1_eckey_privkey_tweak_mul	zcash/secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_privkey_tweak_mul(secp256k1_scalar *key, const secp256k1_scalar *tweak) {$/;"	f
secp256k1_eckey_pubkey_parse	zcash/secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_pubkey_parse(secp256k1_ge *elem, const unsigned char *pub, size_t size) {$/;"	f
secp256k1_eckey_pubkey_serialize	zcash/secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_pubkey_serialize(secp256k1_ge *elem, unsigned char *pub, size_t *size, int compressed) {$/;"	f
secp256k1_eckey_pubkey_tweak_add	zcash/secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_pubkey_tweak_add(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak) {$/;"	f
secp256k1_eckey_pubkey_tweak_mul	zcash/secp256k1/src/eckey_impl.h	/^static int secp256k1_eckey_pubkey_tweak_mul(const secp256k1_ecmult_context *ctx, secp256k1_ge *key, const secp256k1_scalar *tweak) {$/;"	f
secp256k1_ecmult	zcash/secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult(const secp256k1_ecmult_context *ctx, secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_scalar *na, const secp256k1_scalar *ng) {$/;"	f
secp256k1_ecmult_const	zcash/secp256k1/src/ecmult_const_impl.h	/^static void secp256k1_ecmult_const(secp256k1_gej *r, const secp256k1_ge *a, const secp256k1_scalar *scalar) {$/;"	f
secp256k1_ecmult_context	zcash/secp256k1/src/ecmult.h	/^} secp256k1_ecmult_context;$/;"	t	typeref:struct:__anon53
secp256k1_ecmult_context_build	zcash/secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_context_build(secp256k1_ecmult_context *ctx, const secp256k1_callback *cb) {$/;"	f
secp256k1_ecmult_context_clear	zcash/secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_context_clear(secp256k1_ecmult_context *ctx) {$/;"	f
secp256k1_ecmult_context_clone	zcash/secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_context_clone(secp256k1_ecmult_context *dst,$/;"	f
secp256k1_ecmult_context_init	zcash/secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_context_init(secp256k1_ecmult_context *ctx) {$/;"	f
secp256k1_ecmult_context_is_built	zcash/secp256k1/src/ecmult_impl.h	/^static int secp256k1_ecmult_context_is_built(const secp256k1_ecmult_context *ctx) {$/;"	f
secp256k1_ecmult_gen	zcash/secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen(const secp256k1_ecmult_gen_context *ctx, secp256k1_gej *r, const secp256k1_scalar *gn) {$/;"	f
secp256k1_ecmult_gen_blind	zcash/secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_blind(secp256k1_ecmult_gen_context *ctx, const unsigned char *seed32) {$/;"	f
secp256k1_ecmult_gen_context	zcash/secp256k1/src/ecmult_gen.h	/^} secp256k1_ecmult_gen_context;$/;"	t	typeref:struct:__anon44
secp256k1_ecmult_gen_context_build	zcash/secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_context_build(secp256k1_ecmult_gen_context *ctx, const secp256k1_callback* cb) {$/;"	f
secp256k1_ecmult_gen_context_clear	zcash/secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_context_clear(secp256k1_ecmult_gen_context *ctx) {$/;"	f
secp256k1_ecmult_gen_context_clone	zcash/secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_context_clone(secp256k1_ecmult_gen_context *dst,$/;"	f
secp256k1_ecmult_gen_context_init	zcash/secp256k1/src/ecmult_gen_impl.h	/^static void secp256k1_ecmult_gen_context_init(secp256k1_ecmult_gen_context *ctx) {$/;"	f
secp256k1_ecmult_gen_context_is_built	zcash/secp256k1/src/ecmult_gen_impl.h	/^static int secp256k1_ecmult_gen_context_is_built(const secp256k1_ecmult_gen_context* ctx) {$/;"	f
secp256k1_ecmult_odd_multiples_table	zcash/secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_odd_multiples_table(int n, secp256k1_gej *prej, secp256k1_fe *zr, const secp256k1_gej *a) {$/;"	f
secp256k1_ecmult_odd_multiples_table_globalz_windowa	zcash/secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_odd_multiples_table_globalz_windowa(secp256k1_ge *pre, secp256k1_fe *globalz, const secp256k1_gej *a) {$/;"	f
secp256k1_ecmult_odd_multiples_table_storage_var	zcash/secp256k1/src/ecmult_impl.h	/^static void secp256k1_ecmult_odd_multiples_table_storage_var(int n, secp256k1_ge_storage *pre, const secp256k1_gej *a, const secp256k1_callback *cb) {$/;"	f
secp256k1_ecmult_static_context	zcash/secp256k1/src/ecmult_static_context.h	/^static const secp256k1_ge_storage secp256k1_ecmult_static_context[64][16] = {$/;"	v
secp256k1_ecmult_wnaf	zcash/secp256k1/src/ecmult_impl.h	/^static int secp256k1_ecmult_wnaf(int *wnaf, int len, const secp256k1_scalar *a, int w) {$/;"	f
secp256k1_fe	zcash/secp256k1/src/field_10x26.h	/^} secp256k1_fe;$/;"	t	typeref:struct:__anon42
secp256k1_fe	zcash/secp256k1/src/field_5x52.h	/^} secp256k1_fe;$/;"	t	typeref:struct:__anon45
secp256k1_fe_add	zcash/secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_add(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_add	zcash/secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_add(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_clear	zcash/secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe *a) {$/;"	f
secp256k1_fe_clear	zcash/secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_clear(secp256k1_fe *a) {$/;"	f
secp256k1_fe_cmov	zcash/secp256k1/src/field_10x26_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe *r, const secp256k1_fe *a, int flag) {$/;"	f
secp256k1_fe_cmov	zcash/secp256k1/src/field_5x52_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_cmov(secp256k1_fe *r, const secp256k1_fe *a, int flag) {$/;"	f
secp256k1_fe_cmp_var	zcash/secp256k1/src/field_10x26_impl.h	/^static int secp256k1_fe_cmp_var(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
secp256k1_fe_cmp_var	zcash/secp256k1/src/field_5x52_impl.h	/^static int secp256k1_fe_cmp_var(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
secp256k1_fe_equal	zcash/secp256k1/src/field_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_equal(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
secp256k1_fe_equal_var	zcash/secp256k1/src/field_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_equal_var(const secp256k1_fe *a, const secp256k1_fe *b) {$/;"	f
secp256k1_fe_from_storage	zcash/secp256k1/src/field_10x26_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const secp256k1_fe_storage *a) {$/;"	f
secp256k1_fe_from_storage	zcash/secp256k1/src/field_5x52_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_from_storage(secp256k1_fe *r, const secp256k1_fe_storage *a) {$/;"	f
secp256k1_fe_get_b32	zcash/secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_get_b32	zcash/secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_get_b32(unsigned char *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_inv	zcash/secp256k1/src/field_impl.h	/^static void secp256k1_fe_inv(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_inv_all_var	zcash/secp256k1/src/field_impl.h	/^static void secp256k1_fe_inv_all_var(secp256k1_fe *r, const secp256k1_fe *a, size_t len) {$/;"	f
secp256k1_fe_inv_var	zcash/secp256k1/src/field_impl.h	/^static void secp256k1_fe_inv_var(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_is_odd	zcash/secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_is_odd(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_is_odd	zcash/secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_is_odd(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_is_quad_var	zcash/secp256k1/src/field_impl.h	/^static int secp256k1_fe_is_quad_var(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_is_zero	zcash/secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_is_zero	zcash/secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static int secp256k1_fe_is_zero(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_mul	zcash/secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_mul(secp256k1_fe *r, const secp256k1_fe *a, const secp256k1_fe * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul	zcash/secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_mul(secp256k1_fe *r, const secp256k1_fe *a, const secp256k1_fe * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul_inner	zcash/secp256k1/src/asm/field_10x26_arm.s	/^secp256k1_fe_mul_inner:$/;"	l
secp256k1_fe_mul_inner	zcash/secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_inner(uint32_t *r, const uint32_t *a, const uint32_t * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul_inner	zcash/secp256k1/src/field_5x52_asm_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a, const uint64_t * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul_inner	zcash/secp256k1/src/field_5x52_int128_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_inner(uint64_t *r, const uint64_t *a, const uint64_t * SECP256K1_RESTRICT b) {$/;"	f
secp256k1_fe_mul_int	zcash/secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe *r, int a) {$/;"	f
secp256k1_fe_mul_int	zcash/secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_mul_int(secp256k1_fe *r, int a) {$/;"	f
secp256k1_fe_negate	zcash/secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe *r, const secp256k1_fe *a, int m) {$/;"	f
secp256k1_fe_negate	zcash/secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_negate(secp256k1_fe *r, const secp256k1_fe *a, int m) {$/;"	f
secp256k1_fe_normalize	zcash/secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_normalize(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize	zcash/secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_normalize(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize_var	zcash/secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_normalize_var(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize_var	zcash/secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_normalize_var(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize_weak	zcash/secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_normalize_weak(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalize_weak	zcash/secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_normalize_weak(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalizes_to_zero	zcash/secp256k1/src/field_10x26_impl.h	/^static int secp256k1_fe_normalizes_to_zero(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalizes_to_zero	zcash/secp256k1/src/field_5x52_impl.h	/^static int secp256k1_fe_normalizes_to_zero(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalizes_to_zero_var	zcash/secp256k1/src/field_10x26_impl.h	/^static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe *r) {$/;"	f
secp256k1_fe_normalizes_to_zero_var	zcash/secp256k1/src/field_5x52_impl.h	/^static int secp256k1_fe_normalizes_to_zero_var(secp256k1_fe *r) {$/;"	f
secp256k1_fe_set_b32	zcash/secp256k1/src/field_10x26_impl.h	/^static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a) {$/;"	f
secp256k1_fe_set_b32	zcash/secp256k1/src/field_5x52_impl.h	/^static int secp256k1_fe_set_b32(secp256k1_fe *r, const unsigned char *a) {$/;"	f
secp256k1_fe_set_int	zcash/secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe *r, int a) {$/;"	f
secp256k1_fe_set_int	zcash/secp256k1/src/field_5x52_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_set_int(secp256k1_fe *r, int a) {$/;"	f
secp256k1_fe_sqr	zcash/secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_sqr(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_sqr	zcash/secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_sqr(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_sqr_inner	zcash/secp256k1/src/asm/field_10x26_arm.s	/^secp256k1_fe_sqr_inner:$/;"	l
secp256k1_fe_sqr_inner	zcash/secp256k1/src/field_10x26_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_sqr_inner(uint32_t *r, const uint32_t *a) {$/;"	f
secp256k1_fe_sqr_inner	zcash/secp256k1/src/field_5x52_asm_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_sqr_inner(uint64_t *r, const uint64_t *a) {$/;"	f
secp256k1_fe_sqr_inner	zcash/secp256k1/src/field_5x52_int128_impl.h	/^SECP256K1_INLINE static void secp256k1_fe_sqr_inner(uint64_t *r, const uint64_t *a) {$/;"	f
secp256k1_fe_sqrt	zcash/secp256k1/src/field_impl.h	/^static int secp256k1_fe_sqrt(secp256k1_fe *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_storage	zcash/secp256k1/src/field_10x26.h	/^} secp256k1_fe_storage;$/;"	t	typeref:struct:__anon43
secp256k1_fe_storage	zcash/secp256k1/src/field_5x52.h	/^} secp256k1_fe_storage;$/;"	t	typeref:struct:__anon46
secp256k1_fe_storage_cmov	zcash/secp256k1/src/field_10x26_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage *r, const secp256k1_fe_storage *a, int flag) {$/;"	f
secp256k1_fe_storage_cmov	zcash/secp256k1/src/field_5x52_impl.h	/^static SECP256K1_INLINE void secp256k1_fe_storage_cmov(secp256k1_fe_storage *r, const secp256k1_fe_storage *a, int flag) {$/;"	f
secp256k1_fe_to_storage	zcash/secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_to_storage(secp256k1_fe_storage *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_to_storage	zcash/secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_to_storage(secp256k1_fe_storage *r, const secp256k1_fe *a) {$/;"	f
secp256k1_fe_verify	zcash/secp256k1/src/field_10x26_impl.h	/^static void secp256k1_fe_verify(const secp256k1_fe *a) {$/;"	f
secp256k1_fe_verify	zcash/secp256k1/src/field_5x52_impl.h	/^static void secp256k1_fe_verify(const secp256k1_fe *a) {$/;"	f
secp256k1_ge	zcash/secp256k1/src/group.h	/^} secp256k1_ge;$/;"	t	typeref:struct:__anon54
secp256k1_ge_clear	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_clear(secp256k1_ge *r) {$/;"	f
secp256k1_ge_const_g	zcash/secp256k1/src/group_impl.h	/^const secp256k1_ge secp256k1_ge_const_g = SECP256K1_GE_CONST($/;"	v
secp256k1_ge_const_g	zcash/secp256k1/src/group_impl.h	/^static const secp256k1_ge secp256k1_ge_const_g = SECP256K1_GE_CONST($/;"	v
secp256k1_ge_from_storage	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_from_storage(secp256k1_ge *r, const secp256k1_ge_storage *a) {$/;"	f
secp256k1_ge_globalz_set_table_gej	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_globalz_set_table_gej(size_t len, secp256k1_ge *r, secp256k1_fe *globalz, const secp256k1_gej *a, const secp256k1_fe *zr) {$/;"	f
secp256k1_ge_is_infinity	zcash/secp256k1/src/group_impl.h	/^static int secp256k1_ge_is_infinity(const secp256k1_ge *a) {$/;"	f
secp256k1_ge_is_valid_var	zcash/secp256k1/src/group_impl.h	/^static int secp256k1_ge_is_valid_var(const secp256k1_ge *a) {$/;"	f
secp256k1_ge_mul_lambda	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_mul_lambda(secp256k1_ge *r, const secp256k1_ge *a) {$/;"	f
secp256k1_ge_neg	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_neg(secp256k1_ge *r, const secp256k1_ge *a) {$/;"	f
secp256k1_ge_set_all_gej_var	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_all_gej_var(secp256k1_ge *r, const secp256k1_gej *a, size_t len, const secp256k1_callback *cb) {$/;"	f
secp256k1_ge_set_gej	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_gej(secp256k1_ge *r, secp256k1_gej *a) {$/;"	f
secp256k1_ge_set_gej_var	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_gej_var(secp256k1_ge *r, secp256k1_gej *a) {$/;"	f
secp256k1_ge_set_gej_zinv	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_gej_zinv(secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_fe *zi) {$/;"	f
secp256k1_ge_set_table_gej_var	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_table_gej_var(secp256k1_ge *r, const secp256k1_gej *a, const secp256k1_fe *zr, size_t len) {$/;"	f
secp256k1_ge_set_xo_var	zcash/secp256k1/src/group_impl.h	/^static int secp256k1_ge_set_xo_var(secp256k1_ge *r, const secp256k1_fe *x, int odd) {$/;"	f
secp256k1_ge_set_xquad	zcash/secp256k1/src/group_impl.h	/^static int secp256k1_ge_set_xquad(secp256k1_ge *r, const secp256k1_fe *x) {$/;"	f
secp256k1_ge_set_xy	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_set_xy(secp256k1_ge *r, const secp256k1_fe *x, const secp256k1_fe *y) {$/;"	f
secp256k1_ge_storage	zcash/secp256k1/src/group.h	/^} secp256k1_ge_storage;$/;"	t	typeref:struct:__anon56
secp256k1_ge_storage_cmov	zcash/secp256k1/src/group_impl.h	/^static SECP256K1_INLINE void secp256k1_ge_storage_cmov(secp256k1_ge_storage *r, const secp256k1_ge_storage *a, int flag) {$/;"	f
secp256k1_ge_to_storage	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_ge_to_storage(secp256k1_ge_storage *r, const secp256k1_ge *a) {$/;"	f
secp256k1_gej	zcash/secp256k1/src/group.h	/^} secp256k1_gej;$/;"	t	typeref:struct:__anon55
secp256k1_gej_add_ge	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_add_ge(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b) {$/;"	f
secp256k1_gej_add_ge_var	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_add_ge_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b, secp256k1_fe *rzr) {$/;"	f
secp256k1_gej_add_var	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_add_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_gej *b, secp256k1_fe *rzr) {$/;"	f
secp256k1_gej_add_zinv_var	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_add_zinv_var(secp256k1_gej *r, const secp256k1_gej *a, const secp256k1_ge *b, const secp256k1_fe *bzinv) {$/;"	f
secp256k1_gej_clear	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_clear(secp256k1_gej *r) {$/;"	f
secp256k1_gej_double_nonzero	zcash/secp256k1/src/group_impl.h	/^static SECP256K1_INLINE void secp256k1_gej_double_nonzero(secp256k1_gej *r, const secp256k1_gej *a, secp256k1_fe *rzr) {$/;"	f
secp256k1_gej_double_var	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_double_var(secp256k1_gej *r, const secp256k1_gej *a, secp256k1_fe *rzr) {$/;"	f
secp256k1_gej_eq_x_var	zcash/secp256k1/src/group_impl.h	/^static int secp256k1_gej_eq_x_var(const secp256k1_fe *x, const secp256k1_gej *a) {$/;"	f
secp256k1_gej_has_quad_y_var	zcash/secp256k1/src/group_impl.h	/^static int secp256k1_gej_has_quad_y_var(const secp256k1_gej *a) {$/;"	f
secp256k1_gej_is_infinity	zcash/secp256k1/src/group_impl.h	/^static int secp256k1_gej_is_infinity(const secp256k1_gej *a) {$/;"	f
secp256k1_gej_is_valid_var	zcash/secp256k1/src/group_impl.h	/^static int secp256k1_gej_is_valid_var(const secp256k1_gej *a) {$/;"	f
secp256k1_gej_neg	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_neg(secp256k1_gej *r, const secp256k1_gej *a) {$/;"	f
secp256k1_gej_rescale	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_rescale(secp256k1_gej *r, const secp256k1_fe *s) {$/;"	f
secp256k1_gej_set_ge	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_set_ge(secp256k1_gej *r, const secp256k1_ge *a) {$/;"	f
secp256k1_gej_set_infinity	zcash/secp256k1/src/group_impl.h	/^static void secp256k1_gej_set_infinity(secp256k1_gej *r) {$/;"	f
secp256k1_hmac_sha256_finalize	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_hmac_sha256_finalize(secp256k1_hmac_sha256_t *hash, unsigned char *out32) {$/;"	f
secp256k1_hmac_sha256_initialize	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_hmac_sha256_initialize(secp256k1_hmac_sha256_t *hash, const unsigned char *key, size_t keylen) {$/;"	f
secp256k1_hmac_sha256_t	zcash/secp256k1/src/hash.h	/^} secp256k1_hmac_sha256_t;$/;"	t	typeref:struct:__anon50
secp256k1_hmac_sha256_write	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_hmac_sha256_write(secp256k1_hmac_sha256_t *hash, const unsigned char *data, size_t size) {$/;"	f
secp256k1_init_context	zcash/secp256k1/src/java/org/bitcoin/Secp256k1Context.java	/^  private static native long secp256k1_init_context();$/;"	m	class:Secp256k1Context	file:
secp256k1_nonce_function	zcash/secp256k1/include/secp256k1.h	/^typedef int (*secp256k1_nonce_function)($/;"	t
secp256k1_nonce_function_default	zcash/secp256k1/src/secp256k1.c	/^const secp256k1_nonce_function secp256k1_nonce_function_default = nonce_function_rfc6979;$/;"	v
secp256k1_nonce_function_rfc6979	zcash/secp256k1/src/secp256k1.c	/^const secp256k1_nonce_function secp256k1_nonce_function_rfc6979 = nonce_function_rfc6979;$/;"	v
secp256k1_nonce_function_smallint	zcash/secp256k1/src/tests_exhaustive.c	/^int secp256k1_nonce_function_smallint(unsigned char *nonce32, const unsigned char *msg32,$/;"	f
secp256k1_num	zcash/secp256k1/src/num_gmp.h	/^} secp256k1_num;$/;"	t	typeref:struct:__anon38
secp256k1_num_add	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_add(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_add_abs	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_add_abs(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_cmp	zcash/secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_cmp(const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_copy	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_copy(secp256k1_num *r, const secp256k1_num *a) {$/;"	f
secp256k1_num_eq	zcash/secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_eq(const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_get_bin	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_get_bin(unsigned char *r, unsigned int rlen, const secp256k1_num *a) {$/;"	f
secp256k1_num_is_neg	zcash/secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_is_neg(const secp256k1_num *a) {$/;"	f
secp256k1_num_is_one	zcash/secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_is_one(const secp256k1_num *a) {$/;"	f
secp256k1_num_is_zero	zcash/secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_is_zero(const secp256k1_num *a) {$/;"	f
secp256k1_num_jacobi	zcash/secp256k1/src/num_gmp_impl.h	/^static int secp256k1_num_jacobi(const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_mod	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_mod(secp256k1_num *r, const secp256k1_num *m) {$/;"	f
secp256k1_num_mod_inverse	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_mod_inverse(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *m) {$/;"	f
secp256k1_num_mul	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_mul(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_negate	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_negate(secp256k1_num *r) {$/;"	f
secp256k1_num_sanity	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_sanity(const secp256k1_num *a) {$/;"	f
secp256k1_num_sanity	zcash/secp256k1/src/num_gmp_impl.h	22;"	d
secp256k1_num_set_bin	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_set_bin(secp256k1_num *r, const unsigned char *a, unsigned int alen) {$/;"	f
secp256k1_num_shift	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_shift(secp256k1_num *r, int bits) {$/;"	f
secp256k1_num_sub	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_sub(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_sub_abs	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_sub_abs(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b) {$/;"	f
secp256k1_num_subadd	zcash/secp256k1/src/num_gmp_impl.h	/^static void secp256k1_num_subadd(secp256k1_num *r, const secp256k1_num *a, const secp256k1_num *b, int bneg) {$/;"	f
secp256k1_privkey_tweak_add	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_privkey_tweak_add(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_privkey_tweak_mul	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_privkey_tweak_mul(ByteBuffer byteBuff, long context);$/;"	m	class:NativeSecp256k1	file:
secp256k1_pubkey	zcash/secp256k1/include/secp256k1.h	/^} secp256k1_pubkey;$/;"	t	typeref:struct:__anon35
secp256k1_pubkey_load	zcash/secp256k1/src/secp256k1.c	/^static int secp256k1_pubkey_load(const secp256k1_context* ctx, secp256k1_ge* ge, const secp256k1_pubkey* pubkey) {$/;"	f	file:
secp256k1_pubkey_save	zcash/secp256k1/src/secp256k1.c	/^static void secp256k1_pubkey_save(secp256k1_pubkey* pubkey, secp256k1_ge* ge) {$/;"	f	file:
secp256k1_pubkey_tweak_add	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_pubkey_tweak_add(ByteBuffer byteBuff, long context, int pubLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_pubkey_tweak_mul	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static native byte[][] secp256k1_pubkey_tweak_mul(ByteBuffer byteBuff, long context, int pubLen);$/;"	m	class:NativeSecp256k1	file:
secp256k1_rand256	zcash/secp256k1/src/testrand_impl.h	/^static void secp256k1_rand256(unsigned char *b32) {$/;"	f
secp256k1_rand256_test	zcash/secp256k1/src/testrand_impl.h	/^static void secp256k1_rand256_test(unsigned char *b32) {$/;"	f
secp256k1_rand32	zcash/secp256k1/src/testrand_impl.h	/^SECP256K1_INLINE static uint32_t secp256k1_rand32(void) {$/;"	f
secp256k1_rand_bits	zcash/secp256k1/src/testrand_impl.h	/^static uint32_t secp256k1_rand_bits(int bits) {$/;"	f
secp256k1_rand_bytes_test	zcash/secp256k1/src/testrand_impl.h	/^static void secp256k1_rand_bytes_test(unsigned char *bytes, size_t len) {$/;"	f
secp256k1_rand_int	zcash/secp256k1/src/testrand_impl.h	/^static uint32_t secp256k1_rand_int(uint32_t range) {$/;"	f
secp256k1_rand_seed	zcash/secp256k1/src/testrand_impl.h	/^SECP256K1_INLINE static void secp256k1_rand_seed(const unsigned char *seed16) {$/;"	f
secp256k1_rfc6979_hmac_sha256_finalize	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_rfc6979_hmac_sha256_finalize(secp256k1_rfc6979_hmac_sha256_t *rng) {$/;"	f
secp256k1_rfc6979_hmac_sha256_generate	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_rfc6979_hmac_sha256_generate(secp256k1_rfc6979_hmac_sha256_t *rng, unsigned char *out, size_t outlen) {$/;"	f
secp256k1_rfc6979_hmac_sha256_initialize	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_rfc6979_hmac_sha256_initialize(secp256k1_rfc6979_hmac_sha256_t *rng, const unsigned char *key, size_t keylen) {$/;"	f
secp256k1_rfc6979_hmac_sha256_t	zcash/secp256k1/src/hash.h	/^} secp256k1_rfc6979_hmac_sha256_t;$/;"	t	typeref:struct:__anon51
secp256k1_scalar	zcash/secp256k1/src/scalar_4x64.h	/^} secp256k1_scalar;$/;"	t	typeref:struct:__anon48
secp256k1_scalar	zcash/secp256k1/src/scalar_8x32.h	/^} secp256k1_scalar;$/;"	t	typeref:struct:__anon40
secp256k1_scalar	zcash/secp256k1/src/scalar_low.h	/^typedef uint32_t secp256k1_scalar;$/;"	t
secp256k1_scalar_add	zcash/secp256k1/src/scalar_4x64_impl.h	/^static int secp256k1_scalar_add(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_add	zcash/secp256k1/src/scalar_8x32_impl.h	/^static int secp256k1_scalar_add(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_add	zcash/secp256k1/src/scalar_low_impl.h	/^static int secp256k1_scalar_add(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_cadd_bit	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_cadd_bit(secp256k1_scalar *r, unsigned int bit, int flag) {$/;"	f
secp256k1_scalar_cadd_bit	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_cadd_bit(secp256k1_scalar *r, unsigned int bit, int flag) {$/;"	f
secp256k1_scalar_cadd_bit	zcash/secp256k1/src/scalar_low_impl.h	/^static void secp256k1_scalar_cadd_bit(secp256k1_scalar *r, unsigned int bit, int flag) {$/;"	f
secp256k1_scalar_check_overflow	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_check_overflow	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_check_overflow	zcash/secp256k1/src/scalar_low_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_check_overflow(const secp256k1_scalar *a) { return *a >= EXHAUSTIVE_TEST_ORDER; }$/;"	f
secp256k1_scalar_clear	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar *r) {$/;"	f
secp256k1_scalar_clear	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar *r) {$/;"	f
secp256k1_scalar_clear	zcash/secp256k1/src/scalar_low_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_clear(secp256k1_scalar *r) { *r = 0; }$/;"	f
secp256k1_scalar_cond_negate	zcash/secp256k1/src/scalar_4x64_impl.h	/^static int secp256k1_scalar_cond_negate(secp256k1_scalar *r, int flag) {$/;"	f
secp256k1_scalar_cond_negate	zcash/secp256k1/src/scalar_8x32_impl.h	/^static int secp256k1_scalar_cond_negate(secp256k1_scalar *r, int flag) {$/;"	f
secp256k1_scalar_cond_negate	zcash/secp256k1/src/scalar_low_impl.h	/^static int secp256k1_scalar_cond_negate(secp256k1_scalar *r, int flag) {$/;"	f
secp256k1_scalar_eq	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_eq	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_eq	zcash/secp256k1/src/scalar_low_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_eq(const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_get_b32	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a) {$/;"	f
secp256k1_scalar_get_b32	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a) {$/;"	f
secp256k1_scalar_get_b32	zcash/secp256k1/src/scalar_low_impl.h	/^static void secp256k1_scalar_get_b32(unsigned char *bin, const secp256k1_scalar* a) {$/;"	f
secp256k1_scalar_get_bits	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_bits	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_bits	zcash/secp256k1/src/scalar_low_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_bits_var	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_bits_var	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_bits_var	zcash/secp256k1/src/scalar_low_impl.h	/^SECP256K1_INLINE static unsigned int secp256k1_scalar_get_bits_var(const secp256k1_scalar *a, unsigned int offset, unsigned int count) {$/;"	f
secp256k1_scalar_get_num	zcash/secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_get_num(secp256k1_num *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_inverse	zcash/secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_inverse(secp256k1_scalar *r, const secp256k1_scalar *x) {$/;"	f
secp256k1_scalar_inverse_var	zcash/secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_inverse_var(secp256k1_scalar *r, const secp256k1_scalar *x) {$/;"	f
secp256k1_scalar_is_even	zcash/secp256k1/src/scalar_low_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_even(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_high	zcash/secp256k1/src/scalar_4x64_impl.h	/^static int secp256k1_scalar_is_high(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_high	zcash/secp256k1/src/scalar_8x32_impl.h	/^static int secp256k1_scalar_is_high(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_high	zcash/secp256k1/src/scalar_low_impl.h	/^static int secp256k1_scalar_is_high(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_one	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_one	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_one	zcash/secp256k1/src/scalar_low_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_one(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_zero	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_zero	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_is_zero	zcash/secp256k1/src/scalar_low_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_is_zero(const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_mul	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_mul	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_mul	zcash/secp256k1/src/scalar_low_impl.h	/^static void secp256k1_scalar_mul(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_mul_512	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_mul_512(uint64_t l[8], const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_mul_512	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_mul_512(uint32_t *l, const secp256k1_scalar *a, const secp256k1_scalar *b) {$/;"	f
secp256k1_scalar_mul_shift_var	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift) {$/;"	f
secp256k1_scalar_mul_shift_var	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_mul_shift_var(secp256k1_scalar *r, const secp256k1_scalar *a, const secp256k1_scalar *b, unsigned int shift) {$/;"	f
secp256k1_scalar_negate	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_negate	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_negate	zcash/secp256k1/src/scalar_low_impl.h	/^static void secp256k1_scalar_negate(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_order_get_num	zcash/secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_order_get_num(secp256k1_num *r) {$/;"	f
secp256k1_scalar_reduce	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar *r, unsigned int overflow) {$/;"	f
secp256k1_scalar_reduce	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static int secp256k1_scalar_reduce(secp256k1_scalar *r, uint32_t overflow) {$/;"	f
secp256k1_scalar_reduce_512	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_reduce_512(secp256k1_scalar *r, const uint64_t *l) {$/;"	f
secp256k1_scalar_reduce_512	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_reduce_512(secp256k1_scalar *r, const uint32_t *l) {$/;"	f
secp256k1_scalar_set_b32	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *b32, int *overflow) {$/;"	f
secp256k1_scalar_set_b32	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *b32, int *overflow) {$/;"	f
secp256k1_scalar_set_b32	zcash/secp256k1/src/scalar_low_impl.h	/^static void secp256k1_scalar_set_b32(secp256k1_scalar *r, const unsigned char *b32, int *overflow) {$/;"	f
secp256k1_scalar_set_int	zcash/secp256k1/src/scalar_4x64_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar *r, unsigned int v) {$/;"	f
secp256k1_scalar_set_int	zcash/secp256k1/src/scalar_8x32_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar *r, unsigned int v) {$/;"	f
secp256k1_scalar_set_int	zcash/secp256k1/src/scalar_low_impl.h	/^SECP256K1_INLINE static void secp256k1_scalar_set_int(secp256k1_scalar *r, unsigned int v) { *r = v; }$/;"	f
secp256k1_scalar_shr_int	zcash/secp256k1/src/scalar_4x64_impl.h	/^static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n) {$/;"	f
secp256k1_scalar_shr_int	zcash/secp256k1/src/scalar_8x32_impl.h	/^static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n) {$/;"	f
secp256k1_scalar_shr_int	zcash/secp256k1/src/scalar_low_impl.h	/^static int secp256k1_scalar_shr_int(secp256k1_scalar *r, int n) {$/;"	f
secp256k1_scalar_split_128	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_split_128	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_split_128	zcash/secp256k1/src/scalar_low_impl.h	/^static void secp256k1_scalar_split_128(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_split_lambda	zcash/secp256k1/src/scalar_impl.h	/^static void secp256k1_scalar_split_lambda(secp256k1_scalar *r1, secp256k1_scalar *r2, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_sqr	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_sqr(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_sqr	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_sqr(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_sqr	zcash/secp256k1/src/scalar_low_impl.h	/^static void secp256k1_scalar_sqr(secp256k1_scalar *r, const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_sqr_512	zcash/secp256k1/src/scalar_4x64_impl.h	/^static void secp256k1_scalar_sqr_512(uint64_t l[8], const secp256k1_scalar *a) {$/;"	f
secp256k1_scalar_sqr_512	zcash/secp256k1/src/scalar_8x32_impl.h	/^static void secp256k1_scalar_sqr_512(uint32_t *l, const secp256k1_scalar *a) {$/;"	f
secp256k1_sha256_finalize	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_sha256_finalize(secp256k1_sha256_t *hash, unsigned char *out32) {$/;"	f
secp256k1_sha256_initialize	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_sha256_initialize(secp256k1_sha256_t *hash) {$/;"	f
secp256k1_sha256_t	zcash/secp256k1/src/hash.h	/^} secp256k1_sha256_t;$/;"	t	typeref:struct:__anon49
secp256k1_sha256_transform	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_sha256_transform(uint32_t* s, const uint32_t* chunk) {$/;"	f
secp256k1_sha256_write	zcash/secp256k1/src/hash_impl.h	/^static void secp256k1_sha256_write(secp256k1_sha256_t *hash, const unsigned char *data, size_t len) {$/;"	f
secp256k1_test_rng	zcash/secp256k1/src/testrand_impl.h	/^static secp256k1_rfc6979_hmac_sha256_t secp256k1_test_rng;$/;"	v
secp256k1_test_rng_integer	zcash/secp256k1/src/testrand_impl.h	/^static uint64_t secp256k1_test_rng_integer;$/;"	v
secp256k1_test_rng_integer_bits_left	zcash/secp256k1/src/testrand_impl.h	/^static int secp256k1_test_rng_integer_bits_left = 0;$/;"	v
secp256k1_test_rng_precomputed	zcash/secp256k1/src/testrand_impl.h	/^static uint32_t secp256k1_test_rng_precomputed[8];$/;"	v
secp256k1_test_rng_precomputed_used	zcash/secp256k1/src/testrand_impl.h	/^static int secp256k1_test_rng_precomputed_used = 8;$/;"	v
secp256k1_wnaf_const	zcash/secp256k1/src/ecmult_const_impl.h	/^static int secp256k1_wnaf_const(int *wnaf, secp256k1_scalar s, int w) {$/;"	f
secret	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint8_t *secret;    \/* key array *\/$/;"	m	struct:Argon2_Context
secretbox2_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox2_LDADD	libsodium/test/default/Makefile	/^secretbox2_LDADD = $(TESTS_LDADD)$/;"	m
secretbox2_OBJECTS	libsodium/test/default/Makefile	/^secretbox2_OBJECTS = secretbox2.$(OBJEXT)$/;"	m
secretbox2_SOURCE	libsodium/test/default/Makefile	/^secretbox2_SOURCE = cmptest.h secretbox2.c$/;"	m
secretbox2_SOURCES	libsodium/test/default/Makefile	/^secretbox2_SOURCES = secretbox2.c$/;"	m
secretbox7_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox7_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox7_LDADD	libsodium/test/default/Makefile	/^secretbox7_LDADD = $(TESTS_LDADD)$/;"	m
secretbox7_OBJECTS	libsodium/test/default/Makefile	/^secretbox7_OBJECTS = secretbox7.$(OBJEXT)$/;"	m
secretbox7_SOURCE	libsodium/test/default/Makefile	/^secretbox7_SOURCE = cmptest.h secretbox7.c$/;"	m
secretbox7_SOURCES	libsodium/test/default/Makefile	/^secretbox7_SOURCES = secretbox7.c$/;"	m
secretbox8_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox8_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox8_LDADD	libsodium/test/default/Makefile	/^secretbox8_LDADD = $(TESTS_LDADD)$/;"	m
secretbox8_OBJECTS	libsodium/test/default/Makefile	/^secretbox8_OBJECTS = secretbox8.$(OBJEXT)$/;"	m
secretbox8_SOURCE	libsodium/test/default/Makefile	/^secretbox8_SOURCE = cmptest.h secretbox8.c$/;"	m
secretbox8_SOURCES	libsodium/test/default/Makefile	/^secretbox8_SOURCES = secretbox8.c$/;"	m
secretbox_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox_LDADD	libsodium/test/default/Makefile	/^secretbox_LDADD = $(TESTS_LDADD)$/;"	m
secretbox_OBJECTS	libsodium/test/default/Makefile	/^secretbox_OBJECTS = secretbox.$(OBJEXT)$/;"	m
secretbox_SOURCE	libsodium/test/default/Makefile	/^secretbox_SOURCE = cmptest.h secretbox.c$/;"	m
secretbox_SOURCES	libsodium/test/default/Makefile	/^secretbox_SOURCES = secretbox.c$/;"	m
secretbox_easy2_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox_easy2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox_easy2_LDADD	libsodium/test/default/Makefile	/^secretbox_easy2_LDADD = $(TESTS_LDADD)$/;"	m
secretbox_easy2_OBJECTS	libsodium/test/default/Makefile	/^secretbox_easy2_OBJECTS = secretbox_easy2.$(OBJEXT)$/;"	m
secretbox_easy2_SOURCE	libsodium/test/default/Makefile	/^secretbox_easy2_SOURCE = cmptest.h secretbox_easy2.c$/;"	m
secretbox_easy2_SOURCES	libsodium/test/default/Makefile	/^secretbox_easy2_SOURCES = secretbox_easy2.c$/;"	m
secretbox_easy_DEPENDENCIES	libsodium/test/default/Makefile	/^secretbox_easy_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
secretbox_easy_LDADD	libsodium/test/default/Makefile	/^secretbox_easy_LDADD = $(TESTS_LDADD)$/;"	m
secretbox_easy_OBJECTS	libsodium/test/default/Makefile	/^secretbox_easy_OBJECTS = secretbox_easy.$(OBJEXT)$/;"	m
secretbox_easy_SOURCE	libsodium/test/default/Makefile	/^secretbox_easy_SOURCE = cmptest.h secretbox_easy.c$/;"	m
secretbox_easy_SOURCES	libsodium/test/default/Makefile	/^secretbox_easy_SOURCES = secretbox_easy.c$/;"	m
secretlen	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t secretlen; \/* key length *\/$/;"	m	struct:Argon2_Context
secure_allocator	zcash/support/allocators/secure.h	/^    secure_allocator() throw() {}$/;"	f	struct:secure_allocator
secure_allocator	zcash/support/allocators/secure.h	/^    secure_allocator(const secure_allocator& a) throw() : base(a) {}$/;"	f	struct:secure_allocator
secure_allocator	zcash/support/allocators/secure.h	/^    secure_allocator(const secure_allocator<U>& a) throw() : base(a)$/;"	f	struct:secure_allocator
secure_allocator	zcash/support/allocators/secure.h	/^struct secure_allocator : public std::allocator<T> {$/;"	s
seed	libsodium/test/default/box_seed.c	/^static unsigned char seed[32] = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5,$/;"	v	file:
seed_insecure_rand	zcash/random.cpp	/^void seed_insecure_rand(bool fDeterministic)$/;"	f
segment_length	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t      segment_length;$/;"	m	struct:Argon2_instance_t
segv_handler	libsodium/test/default/sodium_utils2.c	/^segv_handler(int sig)$/;"	f	file:
segv_handler	libsodium/test/default/sodium_utils3.c	/^segv_handler(int sig)$/;"	f	file:
sem	zcash/sync.h	/^    CSemaphore* sem;$/;"	m	class:CSemaphoreGrant
ser_double_to_uint64	zcash/serialize.h	/^inline uint64_t ser_double_to_uint64(double x)$/;"	f
ser_float_to_uint32	zcash/serialize.h	/^inline uint32_t ser_float_to_uint32(float x)$/;"	f
ser_readdata16	zcash/serialize.h	/^template<typename Stream> inline uint16_t ser_readdata16(Stream &s)$/;"	f
ser_readdata32	zcash/serialize.h	/^template<typename Stream> inline uint32_t ser_readdata32(Stream &s)$/;"	f
ser_readdata64	zcash/serialize.h	/^template<typename Stream> inline uint64_t ser_readdata64(Stream &s)$/;"	f
ser_readdata8	zcash/serialize.h	/^template<typename Stream> inline uint8_t ser_readdata8(Stream &s)$/;"	f
ser_uint32_to_float	zcash/serialize.h	/^inline float ser_uint32_to_float(uint32_t y)$/;"	f
ser_uint64_to_double	zcash/serialize.h	/^inline double ser_uint64_to_double(uint64_t y)$/;"	f
ser_writedata16	zcash/serialize.h	/^template<typename Stream> inline void ser_writedata16(Stream &s, uint16_t obj)$/;"	f
ser_writedata32	zcash/serialize.h	/^template<typename Stream> inline void ser_writedata32(Stream &s, uint32_t obj)$/;"	f
ser_writedata64	zcash/serialize.h	/^template<typename Stream> inline void ser_writedata64(Stream &s, uint64_t obj)$/;"	f
ser_writedata8	zcash/serialize.h	/^template<typename Stream> inline void ser_writedata8(Stream &s, uint8_t obj)$/;"	f
serialize	zcash/script/script.h	/^    static std::vector<unsigned char> serialize(const int64_t& value)$/;"	f	class:CScriptNum
serialize_bit_vector	libsnark/src/common/utils.cpp	/^void serialize_bit_vector(std::ostream &out, const bit_vector &v)$/;"	f	namespace:libsnark
setProvingKeyPath	zcash/JoinSplit.cpp	/^    void setProvingKeyPath(std::string path) {$/;"	f	class:libzcash::JoinSplitCircuit
setValid	zcash/script/sigcache.cpp	/^    std::set< sigdata_type> setValid;$/;"	m	class:__anon24::CSignatureCache	file:
setWatchOnly	zcash/keystore.h	/^    WatchOnlySet setWatchOnly;$/;"	m	class:CBasicKeyStore
set_base_from	depcomp	/^set_base_from ()$/;"	f
set_base_from	libsodium/build-aux/depcomp	/^set_base_from ()$/;"	f
set_base_from	zcash/secp256k1/build-aux/depcomp	/^set_base_from ()$/;"	f
set_dir_from	depcomp	/^set_dir_from ()$/;"	f
set_dir_from	libsodium/build-aux/depcomp	/^set_dir_from ()$/;"	f
set_dir_from	zcash/secp256k1/build-aux/depcomp	/^set_dir_from ()$/;"	f
set_error	zcash/script/interpreter.cpp	/^inline bool set_error(ScriptError* ret, const ScriptError serror)$/;"	f	namespace:__anon20
set_error	zcash/script/zcashconsensus.cpp	/^inline int set_error(zcashconsensus_error* ret, zcashconsensus_error serror)$/;"	f	namespace:__anon18
set_input_sizes	libsnark/src/gadgetlib1/protoboard.tcc	/^void protoboard<FieldT>::set_input_sizes(const size_t primary_input_size)$/;"	f	class:libsnark::protoboard
set_success	zcash/script/interpreter.cpp	/^inline bool set_success(ScriptError* ret)$/;"	f	namespace:__anon20
set_ulong	libsnark/src/algebra/fields/fp.tcc	/^void Fp_model<n,modulus>::set_ulong(const unsigned long x)$/;"	f	class:libsnark::Fp_model
set_value	libsnark/src/common/data_structures/merkle_tree.tcc	/^void merkle_tree<HashT>::set_value(const size_t address,$/;"	f	class:libsnark::merkle_tree
set_vch	zcash/script/script.h	/^    static int64_t set_vch(const std::vector<unsigned char>& vch)$/;"	f	class:CScriptNum
sha	zcash/hash.h	/^    CSHA256 sha;$/;"	m	class:CHash160
sha	zcash/hash.h	/^    CSHA256 sha;$/;"	m	class:CHash256
sha1	zcash/crypto/sha1.cpp	/^namespace sha1$/;"	n	namespace:__anon30	file:
sha224	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^class sha224(sha256):$/;"	c
sha224_init	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^def sha224_init():$/;"	f
sha256	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^class sha256(object):$/;"	c
sha256	zcash/crypto/sha256.cpp	/^namespace sha256$/;"	n	namespace:__anon29	file:
sha256_compression_function_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^class sha256_compression_function_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
sha256_compression_function_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^sha256_compression_function_gadget<FieldT>::sha256_compression_function_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::sha256_compression_function_gadget
sha256_gadget	zcash/circuit/merkle.tcc	/^    typedef sha256_two_to_one_hash_gadget<FieldT> sha256_gadget;$/;"	t	class:merkle_tree_gadget	file:
sha256_message_schedule_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^class sha256_message_schedule_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
sha256_message_schedule_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^sha256_message_schedule_gadget<FieldT>::sha256_message_schedule_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::sha256_message_schedule_gadget
sha256_round_function_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^class sha256_round_function_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
sha256_round_function_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.tcc	/^sha256_round_function_gadget<FieldT>::sha256_round_function_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::sha256_round_function_gadget
sha256_two_to_one_hash_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^class sha256_two_to_one_hash_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
sha256_two_to_one_hash_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.tcc	/^sha256_two_to_one_hash_gadget<FieldT>::sha256_two_to_one_hash_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::sha256_two_to_one_hash_gadget
sha512	zcash/crypto/sha512.cpp	/^namespace sha512$/;"	n	namespace:__anon31	file:
sha_final	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^def sha_final(sha_info):$/;"	f
sha_init	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^def sha_init():$/;"	f
sha_transform	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^def sha_transform(sha_info):$/;"	f
sha_update	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^def sha_update(sha_info, buffer):$/;"	f
shared	libsodium/test/default/core1.c	/^static unsigned char shared[32] = { 0x4a, 0x5d, 0x9d, 0x5b, 0xa4, 0xce, 0x2d,$/;"	v	file:
sharedstatedir	Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	demo/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/contrib/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/dist-build/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/msvc-scripts/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/src/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/src/libsodium/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/src/libsodium/include/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/test/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	libsodium/test/default/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	zcash/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
sharedstatedir	zcash/secp256k1/Makefile	/^sharedstatedir = ${prefix}\/com$/;"	m
shiftrows	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	461;"	d
shl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shl  $1,%rcx$/;"	l
shl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shl  $3,%rax$/;"	l
shl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shl  $4,%rcx$/;"	l
shl	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shl  $6,%rcx$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%r10,%r11$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%r12,%r13$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%r14,%r15$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%r8,%r9$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shld $13,%rbx,%rbp$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%r11,%r12$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%r13,%r14$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%r15,%rbx$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%r9,%r10$/;"	l
shld	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shld $13,%rcx,%rbp$/;"	l
shorten	libsnark/src/algebra/fields/bigint.tcc	/^inline bigint<m> bigint<n>::shorten(const bigint<m>& q, const char *msg) const$/;"	f	class:libsnark::bigint
shorthash_DEPENDENCIES	libsodium/test/default/Makefile	/^shorthash_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
shorthash_LDADD	libsodium/test/default/Makefile	/^shorthash_LDADD = $(TESTS_LDADD)$/;"	m
shorthash_OBJECTS	libsodium/test/default/Makefile	/^shorthash_OBJECTS = shorthash.$(OBJEXT)$/;"	m
shorthash_SOURCE	libsodium/test/default/Makefile	/^shorthash_SOURCE = cmptest.h shorthash.c$/;"	m
shorthash_SOURCES	libsodium/test/default/Makefile	/^shorthash_SOURCES = shorthash.c$/;"	m
shorthash_siphash_H	libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash_ref.h	2;"	d
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^shr  $51,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^shr  $51,%r9$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $10,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $12,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $13,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $15,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $16,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $18,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $2,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $20,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $21,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $23,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $24,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $26,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $28,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $29,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $31,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $32,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $34,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $36,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $37,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $39,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $4,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $40,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $42,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $44,%rsi$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $45,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $47,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $48,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $5,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $50,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $51,%r12$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $7,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^shr  $8,%rax$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shr  $1,%r8$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shr  $1,%r9$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shr  $1,%rcx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shr  $1,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shr  $1,%r8$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shr  $1,%r9$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shr  $1,%rcx$/;"	l
shr	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shr  $1,%rdx$/;"	l
shr	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^shr  $32,%r8$/;"	l
shr	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^shr  $32,%rcx$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shrd $1,%r8,%rcx$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shrd $1,%r9,%r8$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^shrd $1,%rcx,%rdx$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shrd $1,%r8,%rcx$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shrd $1,%r9,%r8$/;"	l
shrd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^shrd $1,%rcx,%rdx$/;"	l
shufb	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	26;"	d
shufb	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^shufb(aes_uint128_t *r, const unsigned char *l)$/;"	f
shufd	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	29;"	d
shufd	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^shufd(aes_uint128_t *r, const aes_uint128_t *x, const unsigned int c)$/;"	f
sig	libsodium/test/default/sign.c	/^    const unsigned char  sig[crypto_sign_BYTES];$/;"	m	struct:TestData_	file:
sig	zcash/secp256k1/src/bench_recover.c	/^    unsigned char sig[64];$/;"	m	struct:__anon39	file:
sig	zcash/secp256k1/src/bench_verify.c	/^    unsigned char sig[72];$/;"	m	struct:__anon57	file:
sigdata_type	zcash/script/sigcache.cpp	/^    typedef boost::tuple<uint256, std::vector<unsigned char>, CPubKey> sigdata_type;$/;"	t	class:__anon24::CSignatureCache	file:
siglen	zcash/secp256k1/src/bench_verify.c	/^    size_t siglen;$/;"	m	struct:__anon57	file:
sigma0	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> sigma0;$/;"	m	class:libsnark::sha256_round_function_gadget
sigma0	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::vector<pb_variable<FieldT> > sigma0;$/;"	m	class:libsnark::sha256_message_schedule_gadget
sigma0	zcash/crypto/sha256.cpp	/^uint32_t inline sigma0(uint32_t x) { return (x >> 7 | x << 25) ^ (x >> 18 | x << 14) ^ (x >> 3); }$/;"	f	namespace:__anon29::sha256
sigma0	zcash/crypto/sha512.cpp	/^uint64_t inline sigma0(uint64_t x) { return (x >> 1 | x << 63) ^ (x >> 8 | x << 56) ^ (x >> 7); }$/;"	f	namespace:__anon31::sha512
sigma0	zcash/secp256k1/src/hash_impl.h	20;"	d
sigma0	zcash/secp256k1/src/hash_impl.h	275;"	d
sigma1	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> sigma1;$/;"	m	class:libsnark::sha256_round_function_gadget
sigma1	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::vector<pb_variable<FieldT> > sigma1;$/;"	m	class:libsnark::sha256_message_schedule_gadget
sigma1	zcash/crypto/sha256.cpp	/^uint32_t inline sigma1(uint32_t x) { return (x >> 17 | x << 15) ^ (x >> 19 | x << 13) ^ (x >> 10); }$/;"	f	namespace:__anon29::sha256
sigma1	zcash/crypto/sha512.cpp	/^uint64_t inline sigma1(uint64_t x) { return (x >> 19 | x << 45) ^ (x >> 61 | x << 3) ^ (x >> 6); }$/;"	f	namespace:__anon31::sha512
sigma1	zcash/secp256k1/src/hash_impl.h	21;"	d
sigma1	zcash/secp256k1/src/hash_impl.h	274;"	d
sign	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static byte[] sign(byte[] data, byte[] sec) throws AssertFailException{$/;"	m	class:NativeSecp256k1
sign_DEPENDENCIES	libsodium/test/default/Makefile	/^sign_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sign_LDADD	libsodium/test/default/Makefile	/^sign_LDADD = $(TESTS_LDADD)$/;"	m
sign_OBJECTS	libsodium/test/default/Makefile	/^sign_OBJECTS = sign.$(OBJEXT)$/;"	m
sign_SOURCE	libsodium/test/default/Makefile	/^sign_SOURCE = cmptest.h sign.c$/;"	m
sign_SOURCES	libsodium/test/default/Makefile	/^sign_SOURCES = sign.c$/;"	m
siphashx24_DEPENDENCIES	libsodium/test/default/Makefile	/^siphashx24_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
siphashx24_LDADD	libsodium/test/default/Makefile	/^siphashx24_LDADD = $(TESTS_LDADD)$/;"	m
siphashx24_OBJECTS	libsodium/test/default/Makefile	/^siphashx24_OBJECTS = siphashx24.$(OBJEXT)$/;"	m
siphashx24_SOURCE	libsodium/test/default/Makefile	/^siphashx24_SOURCE = cmptest.h siphashx24.c$/;"	m
siphashx24_SOURCES	libsodium/test/default/Makefile	/^siphashx24_SOURCES = siphashx24.c$/;"	m
size	libsnark/src/common/data_structures/accumulation_vector.tcc	/^size_t accumulation_vector<T>::size() const$/;"	f	class:libsnark::accumulation_vector
size	libsnark/src/common/data_structures/sparse_vector.tcc	/^size_t sparse_vector<T>::size() const$/;"	f	class:libsnark::sparse_vector
size	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    size_t size;$/;"	m	struct:block_region_
size	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    size_t size;$/;"	m	struct:__anon10
size	zcash/IncrementalMerkleTree.cpp	/^size_t IncrementalMerkleTree<Depth, Hash>::size() const {$/;"	f	class:libzcash::IncrementalMerkleTree
size	zcash/arith_uint256.h	/^    unsigned int size() const$/;"	f	class:base_uint
size	zcash/key.h	/^    unsigned int size() const { return (fValid ? 32 : 0); }$/;"	f	class:CKey
size	zcash/pubkey.h	/^    unsigned int size() const { return GetLen(vch[0]); }$/;"	f	class:CPubKey
size	zcash/serialize.h	/^    size_t size() const {$/;"	f	class:CSizeComputer
size	zcash/streams.h	/^    size_type size() const                           { return vch.size() - nReadPos; }$/;"	f	class:CBaseDataStream
size	zcash/uint256.h	/^    unsigned int size() const$/;"	f	class:base_blob
size_in_bits	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    static size_t size_in_bits() { return base_field::size_in_bits() + 1; }$/;"	f	class:libsnark::alt_bn128_G1
size_in_bits	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    static size_t size_in_bits() { return twist_field::size_in_bits() + 1; }$/;"	f	class:libsnark::alt_bn128_G2
size_in_bits	libsnark/src/algebra/fields/fp.hpp	/^    static size_t size_in_bits() { return num_bits; }$/;"	f	class:libsnark::Fp_model
size_in_bits	libsnark/src/algebra/fields/fp2.hpp	/^    static size_t size_in_bits() { return 2*my_Fp::size_in_bits(); }$/;"	f	class:libsnark::Fp2_model
size_in_bits	libsnark/src/algebra/fields/fp3.hpp	/^    static size_t size_in_bits() { return 3*my_Fp::size_in_bits(); }$/;"	f	class:libsnark::Fp3_model
size_in_bits	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^size_t knowledge_commitment<T1,T2>::size_in_bits()$/;"	f	class:libsnark::knowledge_commitment
size_in_bits	libsnark/src/common/data_structures/accumulation_vector.tcc	/^size_t accumulation_vector<T>::size_in_bits() const$/;"	f	class:libsnark::accumulation_vector
size_in_bits	libsnark/src/common/data_structures/sparse_vector.tcc	/^size_t sparse_vector<T>::size_in_bits() const$/;"	f	class:libsnark::sparse_vector
size_in_bits	libsnark/src/common/utils.tcc	/^size_t size_in_bits(const std::vector<T> &v)$/;"	f	namespace:libsnark
size_in_bits	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t size_in_bits() const$/;"	f	class:libsnark::r1cs_ppzksnark_proof
size_in_bits	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t size_in_bits() const$/;"	f	class:libsnark::r1cs_ppzksnark_proving_key
size_in_bits	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    size_t size_in_bits() const$/;"	f	class:libsnark::r1cs_ppzksnark_verification_key
size_type	zcash/streams.h	/^    typedef typename vector_type::size_type        size_type;$/;"	t	class:CBaseDataStream
size_type	zcash/support/allocators/secure.h	/^    typedef typename base::size_type size_type;$/;"	t	struct:secure_allocator
size_type	zcash/support/allocators/zeroafterfree.h	/^    typedef typename base::size_type size_type;$/;"	t	struct:zero_after_free_allocator
sk	libsodium/test/default/sign.c	/^    const unsigned char  sk[crypto_sign_SEEDBYTES];$/;"	m	struct:TestData_	file:
sk_enc	zcash/NoteEncryption.hpp	/^    uint256 sk_enc;$/;"	m	class:libzcash::NoteDecryption
slice	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint8_t  slice;$/;"	m	struct:Argon2_position_t
slide	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^slide(signed char *r, const unsigned char *a)$/;"	f	file:
small_order	libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c	/^small_order(const unsigned char R[32])$/;"	f	file:
small_order_p	libsodium/test/default/box.c	/^static const unsigned char small_order_p[crypto_box_PUBLICKEYBYTES] = {$/;"	v	file:
small_order_p	libsodium/test/default/box2.c	/^static const unsigned char small_order_p[crypto_box_PUBLICKEYBYTES] = {$/;"	v	file:
small_order_p	libsodium/test/default/box_easy2.c	/^static const unsigned char small_order_p[crypto_box_PUBLICKEYBYTES] = {$/;"	v	file:
small_order_p	libsodium/test/default/scalarmult.c	/^static const unsigned char small_order_p[crypto_scalarmult_BYTES] = {$/;"	v	file:
small_sigma_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^class small_sigma_gadget : public gadget<FieldT> {$/;"	c	namespace:libsnark
small_sigma_gadget	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.tcc	/^small_sigma_gadget<FieldT>::small_sigma_gadget(protoboard<FieldT> &pb,$/;"	f	class:libsnark::small_sigma_gadget
smix	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c	/^smix(uint8_t *B, size_t r, uint64_t N, uint32_t *V, uint32_t *XY)$/;"	f	file:
smix	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c	/^smix(uint8_t *B, size_t r, uint32_t N, void *V, void *XY)$/;"	f	file:
sodium_H	libsodium/src/libsodium/include/sodium.h	3;"	d
sodium__mm_cvtsi64_si128	libsodium/src/libsodium/include/sodium/private/sse2_64_32.h	/^sodium__mm_cvtsi64_si128(int64_t q)$/;"	f
sodium__mm_set1_epi64x	libsodium/src/libsodium/include/sodium/private/sse2_64_32.h	/^sodium__mm_set1_epi64x(int64_t q)$/;"	f
sodium__mm_set_epi64x	libsodium/src/libsodium/include/sodium/private/sse2_64_32.h	/^sodium__mm_set_epi64x(int64_t q1, int64_t q0)$/;"	f
sodium_add	libsodium/src/libsodium/sodium/utils.c	/^sodium_add(unsigned char *a, const unsigned char *b, const size_t len)$/;"	f
sodium_allocarray	libsodium/src/libsodium/sodium/utils.c	/^sodium_allocarray(size_t count, size_t size)$/;"	f
sodium_bin2hex	libsodium/src/libsodium/sodium/utils.c	/^sodium_bin2hex(char *const hex, const size_t hex_maxlen,$/;"	f
sodium_compare	libsodium/src/libsodium/sodium/utils.c	/^sodium_compare(const unsigned char *b1_, const unsigned char *b2_, size_t len)$/;"	f
sodium_core_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_core_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_core_H	libsodium/src/libsodium/include/sodium/core.h	3;"	d
sodium_core_LDADD	libsodium/test/default/Makefile	/^sodium_core_LDADD = $(TESTS_LDADD)$/;"	m
sodium_core_OBJECTS	libsodium/test/default/Makefile	/^sodium_core_OBJECTS = sodium_core.$(OBJEXT)$/;"	m
sodium_core_SOURCE	libsodium/test/default/Makefile	/^sodium_core_SOURCE = cmptest.h sodium_core.c$/;"	m
sodium_core_SOURCES	libsodium/test/default/Makefile	/^sodium_core_SOURCES = sodium_core.c$/;"	m
sodium_crit_enter	libsodium/src/libsodium/sodium/core.c	/^sodium_crit_enter(void)$/;"	f
sodium_crit_leave	libsodium/src/libsodium/sodium/core.c	/^sodium_crit_leave(void)$/;"	f
sodium_export_H	libsodium/src/libsodium/include/sodium/export.h	3;"	d
sodium_free	libsodium/src/libsodium/sodium/utils.c	/^sodium_free(void *ptr)$/;"	f
sodium_hex2bin	libsodium/src/libsodium/sodium/utils.c	/^sodium_hex2bin(unsigned char *const bin, const size_t bin_maxlen,$/;"	f
sodium_hrtime	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^sodium_hrtime(void)$/;"	f	file:
sodium_increment	libsodium/src/libsodium/sodium/utils.c	/^sodium_increment(unsigned char *n, const size_t nlen)$/;"	f
sodium_init	libsodium/src/libsodium/sodium/core.c	/^sodium_init(void)$/;"	f
sodium_is_zero	libsodium/src/libsodium/sodium/utils.c	/^sodium_is_zero(const unsigned char *n, const size_t nlen)$/;"	f
sodium_library_minimal	libsodium/src/libsodium/sodium/version.c	/^sodium_library_minimal(void)$/;"	f
sodium_library_version_major	libsodium/src/libsodium/sodium/version.c	/^sodium_library_version_major(void)$/;"	f
sodium_library_version_minor	libsodium/src/libsodium/sodium/version.c	/^sodium_library_version_minor(void)$/;"	f
sodium_malloc	libsodium/src/libsodium/sodium/utils.c	/^sodium_malloc(const size_t size)$/;"	f
sodium_memcmp	libsodium/src/libsodium/sodium/utils.c	/^sodium_memcmp(const void *const b1_, const void *const b2_, size_t len)$/;"	f
sodium_memzero	libsodium/src/libsodium/sodium/utils.c	/^sodium_memzero(void *const pnt, const size_t len)$/;"	f
sodium_mlock	libsodium/src/libsodium/sodium/utils.c	/^sodium_mlock(void *const addr, const size_t len)$/;"	f
sodium_mprotect_noaccess	libsodium/src/libsodium/sodium/utils.c	/^sodium_mprotect_noaccess(void *ptr)$/;"	f
sodium_mprotect_readonly	libsodium/src/libsodium/sodium/utils.c	/^sodium_mprotect_readonly(void *ptr)$/;"	f
sodium_mprotect_readwrite	libsodium/src/libsodium/sodium/utils.c	/^sodium_mprotect_readwrite(void *ptr)$/;"	f
sodium_munlock	libsodium/src/libsodium/sodium/utils.c	/^sodium_munlock(void *const addr, const size_t len)$/;"	f
sodium_runtime_H	libsodium/src/libsodium/include/sodium/runtime.h	3;"	d
sodium_runtime_has_aesni	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_aesni(void)$/;"	f
sodium_runtime_has_avx	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_avx(void)$/;"	f
sodium_runtime_has_avx2	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_avx2(void)$/;"	f
sodium_runtime_has_neon	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_neon(void)$/;"	f
sodium_runtime_has_pclmul	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_pclmul(void)$/;"	f
sodium_runtime_has_sse2	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_sse2(void)$/;"	f
sodium_runtime_has_sse3	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_sse3(void)$/;"	f
sodium_runtime_has_sse41	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_sse41(void)$/;"	f
sodium_runtime_has_ssse3	libsodium/src/libsodium/sodium/runtime.c	/^sodium_runtime_has_ssse3(void)$/;"	f
sodium_utils2_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_utils2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_utils2_LDADD	libsodium/test/default/Makefile	/^sodium_utils2_LDADD = $(TESTS_LDADD)$/;"	m
sodium_utils2_OBJECTS	libsodium/test/default/Makefile	/^sodium_utils2_OBJECTS = sodium_utils2.$(OBJEXT)$/;"	m
sodium_utils2_SOURCE	libsodium/test/default/Makefile	/^sodium_utils2_SOURCE = cmptest.h sodium_utils2.c$/;"	m
sodium_utils2_SOURCES	libsodium/test/default/Makefile	/^sodium_utils2_SOURCES = sodium_utils2.c$/;"	m
sodium_utils3_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_utils3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_utils3_LDADD	libsodium/test/default/Makefile	/^sodium_utils3_LDADD = $(TESTS_LDADD)$/;"	m
sodium_utils3_OBJECTS	libsodium/test/default/Makefile	/^sodium_utils3_OBJECTS = sodium_utils3.$(OBJEXT)$/;"	m
sodium_utils3_SOURCE	libsodium/test/default/Makefile	/^sodium_utils3_SOURCE = cmptest.h sodium_utils3.c$/;"	m
sodium_utils3_SOURCES	libsodium/test/default/Makefile	/^sodium_utils3_SOURCES = sodium_utils3.c$/;"	m
sodium_utils_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_utils_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_utils_H	libsodium/src/libsodium/include/sodium/utils.h	3;"	d
sodium_utils_LDADD	libsodium/test/default/Makefile	/^sodium_utils_LDADD = $(TESTS_LDADD)$/;"	m
sodium_utils_OBJECTS	libsodium/test/default/Makefile	/^sodium_utils_OBJECTS = sodium_utils.$(OBJEXT)$/;"	m
sodium_utils_SOURCE	libsodium/test/default/Makefile	/^sodium_utils_SOURCE = cmptest.h sodium_utils.c$/;"	m
sodium_utils_SOURCES	libsodium/test/default/Makefile	/^sodium_utils_SOURCES = sodium_utils.c$/;"	m
sodium_version_DEPENDENCIES	libsodium/test/default/Makefile	/^sodium_version_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
sodium_version_H	libsodium/builds/msvc/version.h	3;"	d
sodium_version_H	libsodium/src/libsodium/include/sodium/version.h	3;"	d
sodium_version_LDADD	libsodium/test/default/Makefile	/^sodium_version_LDADD = $(TESTS_LDADD)$/;"	m
sodium_version_OBJECTS	libsodium/test/default/Makefile	/^sodium_version_OBJECTS = sodium_version.$(OBJEXT)$/;"	m
sodium_version_SOURCE	libsodium/test/default/Makefile	/^sodium_version_SOURCE = cmptest.h sodium_version.c$/;"	m
sodium_version_SOURCES	libsodium/test/default/Makefile	/^sodium_version_SOURCES = sodium_version.c$/;"	m
sodium_version_string	libsodium/src/libsodium/sodium/version.c	/^sodium_version_string(void)$/;"	f
solver_cancelled	zcash/crypto/equihash.cpp	/^EhSolverCancelledException solver_cancelled;$/;"	v
source	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable_array<FieldT> source;$/;"	m	class:libsnark::field_vector_copy_gadget
sourceFile	zcash/sync.cpp	/^    std::string sourceFile;$/;"	m	struct:CLockLocation	file:
sourceLine	zcash/sync.cpp	/^    int sourceLine;$/;"	m	struct:CLockLocation	file:
source_bits	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable_array<FieldT> source_bits;$/;"	m	class:libsnark::bit_vector_copy_gadget
sparse_vector	libsnark/src/common/data_structures/sparse_vector.hpp	/^struct sparse_vector {$/;"	s	namespace:libsnark
sparse_vector	libsnark/src/common/data_structures/sparse_vector.tcc	/^sparse_vector<T>::sparse_vector(std::vector<T> &&v) :$/;"	f	class:libsnark::sparse_vector
spend_authority	zcash/circuit/note.tcc	/^    std::shared_ptr<PRF_addr_a_pk_gadget<FieldT>> spend_authority;$/;"	m	class:input_note_gadget	file:
sqr_cnt	libsnark/src/algebra/fields/fp.hpp	/^    static long long sqr_cnt;$/;"	m	class:libsnark::Fp_model
sqr_cnt	libsnark/src/algebra/fields/fp.hpp	/^long long Fp_model<n, modulus>::sqr_cnt = 0;$/;"	m	class:libsnark::Fp_model
sqrt	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::sqrt() const$/;"	f	class:libsnark::Fp_model
sqrt	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::sqrt() const$/;"	f	class:libsnark::Fp2_model
sqrt	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::sqrt() const$/;"	f	class:libsnark::Fp3_model
sqrtm1	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static const fe sqrtm1 = { -32595792, -7943725,  9377950,  3500415, 12389472,$/;"	v	file:
squared	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::squared() const$/;"	f	class:libsnark::Fp_model
squared	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::squared() const$/;"	f	class:libsnark::Fp12_2over3over2_model
squared	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::squared() const$/;"	f	class:libsnark::Fp2_model
squared	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::squared() const$/;"	f	class:libsnark::Fp3_model
squared	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::squared() const$/;"	f	class:libsnark::Fp6_3over2_model
squared_complex	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::squared_complex() const$/;"	f	class:libsnark::Fp12_2over3over2_model
squared_complex	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::squared_complex() const$/;"	f	class:libsnark::Fp2_model
squared_karatsuba	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::squared_karatsuba() const$/;"	f	class:libsnark::Fp12_2over3over2_model
squared_karatsuba	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::squared_karatsuba() const$/;"	f	class:libsnark::Fp2_model
srandom	libsodium/test/quirks/quirks.h	/^srandom(unsigned seed)$/;"	f
src	zcash/streams.h	/^    FILE *src;            \/\/ source file$/;"	m	class:CBufferedFile
srcdir	Makefile	/^srcdir = .$/;"	m
srcdir	demo/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/contrib/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/dist-build/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/msvc-scripts/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/src/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/src/libsodium/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/src/libsodium/include/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/test/Makefile	/^srcdir = .$/;"	m
srcdir	libsodium/test/default/Makefile	/^srcdir = .$/;"	m
srcdir	zcash/Makefile	/^srcdir = .$/;"	m
srcdir	zcash/secp256k1/Makefile	/^srcdir = .$/;"	m
sse2_64_32_H	libsodium/src/libsodium/include/sodium/private/sse2_64_32.h	2;"	d
stacktop	zcash/script/interpreter.cpp	57;"	d	file:
start_cpu_time	libsnark/src/common/profiling.cpp	/^long long start_cpu_time, last_cpu_time;$/;"	m	namespace:libsnark	file:
start_profiling	libsnark/src/common/profiling.cpp	/^void start_profiling()$/;"	f	namespace:libsnark
start_time	libsnark/src/common/profiling.cpp	/^long long start_time, last_time;$/;"	m	namespace:libsnark	file:
state	libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h	/^    uint32_t state[8];$/;"	m	struct:crypto_hash_sha256_state
state	libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h	/^    uint64_t state[8];$/;"	m	struct:crypto_hash_sha512_state
stir	libsodium/src/libsodium/include/sodium/randombytes.h	/^    void        (*stir)(void);                \/* optional *\/$/;"	m	struct:randombytes_implementation
store	zcash/script/sigcache.h	/^    bool store;$/;"	m	class:CachingTransactionSignatureChecker
store32_be	libsodium/src/libsodium/include/sodium/private/common.h	/^store32_be(uint8_t dst[4], uint32_t w)$/;"	f
store32_le	libsodium/src/libsodium/include/sodium/private/common.h	/^store32_le(uint8_t dst[4], uint32_t w)$/;"	f
store64_be	libsodium/src/libsodium/include/sodium/private/common.h	/^store64_be(uint8_t dst[8], uint64_t w)$/;"	f
store64_le	libsodium/src/libsodium/include/sodium/private/common.h	/^store64_le(uint8_t dst[8], uint64_t w)$/;"	f
store_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^store_block(void *output, const block *src)$/;"	f	file:
store_limb	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^store_limb(u8 *out, limb in)$/;"	f	file:
str	zcash/streams.h	/^    std::string str() const$/;"	f	class:CBaseDataStream
strMiscWarning	zcash/zcashutil.cpp	/^string strMiscWarning;$/;"	v
strRejectReason	zcash/consensus/validation.h	/^    std::string strRejectReason;$/;"	m	class:CValidationState
strcmp	libsodium/test/quirks/quirks.h	/^strcmp(const char *s1, const char *s2)$/;"	f
strcmp	libsodium/test/quirks/quirks.h	25;"	d
stream	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^    int (*stream)(unsigned char *c, unsigned long long clen,$/;"	m	struct:crypto_stream_chacha20_implementation
stream	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.h	/^    int (*stream)(unsigned char *c, unsigned long long clen,$/;"	m	struct:crypto_stream_salsa20_implementation
stream	libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c	/^static Salsa20Random stream = {$/;"	v	file:
stream	libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c	/^static SysRandom stream = {$/;"	v	file:
stream2_DEPENDENCIES	libsodium/test/default/Makefile	/^stream2_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
stream2_LDADD	libsodium/test/default/Makefile	/^stream2_LDADD = $(TESTS_LDADD)$/;"	m
stream2_OBJECTS	libsodium/test/default/Makefile	/^stream2_OBJECTS = stream2.$(OBJEXT)$/;"	m
stream2_SOURCE	libsodium/test/default/Makefile	/^stream2_SOURCE = cmptest.h stream2.c$/;"	m
stream2_SOURCES	libsodium/test/default/Makefile	/^stream2_SOURCES = stream2.c$/;"	m
stream3_DEPENDENCIES	libsodium/test/default/Makefile	/^stream3_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
stream3_LDADD	libsodium/test/default/Makefile	/^stream3_LDADD = $(TESTS_LDADD)$/;"	m
stream3_OBJECTS	libsodium/test/default/Makefile	/^stream3_OBJECTS = stream3.$(OBJEXT)$/;"	m
stream3_SOURCE	libsodium/test/default/Makefile	/^stream3_SOURCE = cmptest.h stream3.c$/;"	m
stream3_SOURCES	libsodium/test/default/Makefile	/^stream3_SOURCES = stream3.c$/;"	m
stream4_DEPENDENCIES	libsodium/test/default/Makefile	/^stream4_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
stream4_LDADD	libsodium/test/default/Makefile	/^stream4_LDADD = $(TESTS_LDADD)$/;"	m
stream4_OBJECTS	libsodium/test/default/Makefile	/^stream4_OBJECTS = stream4.$(OBJEXT)$/;"	m
stream4_SOURCE	libsodium/test/default/Makefile	/^stream4_SOURCE = cmptest.h stream4.c$/;"	m
stream4_SOURCES	libsodium/test/default/Makefile	/^stream4_SOURCES = stream4.c$/;"	m
streamStateFromFormat	zcash/tinyformat.h	/^inline const char* streamStateFromFormat(std::ostream& out, bool& spacePadPositive,$/;"	f	namespace:tinyformat::detail
stream_DEPENDENCIES	libsodium/test/default/Makefile	/^stream_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
stream_LDADD	libsodium/test/default/Makefile	/^stream_LDADD = $(TESTS_LDADD)$/;"	m
stream_OBJECTS	libsodium/test/default/Makefile	/^stream_OBJECTS = stream.$(OBJEXT)$/;"	m
stream_SOURCE	libsodium/test/default/Makefile	/^stream_SOURCE = cmptest.h stream.c$/;"	m
stream_SOURCES	libsodium/test/default/Makefile	/^stream_SOURCES = stream.c$/;"	m
stream_avx2	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^stream_avx2(unsigned char *c, unsigned long long clen, const unsigned char *n,$/;"	f	file:
stream_avx2_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c	/^stream_avx2_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_chacha20_H	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	3;"	d
stream_ietf	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^    int (*stream_ietf)(unsigned char *c, unsigned long long clen,$/;"	m	struct:crypto_stream_chacha20_implementation
stream_ietf_ref	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^stream_ietf_ref(unsigned char *c, unsigned long long clen,$/;"	f	file:
stream_ietf_ref	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^stream_ietf_ref(unsigned char *c, unsigned long long clen,$/;"	f	file:
stream_ietf_ref	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^stream_ietf_ref(unsigned char *c, unsigned long long clen,$/;"	f	file:
stream_ietf_ref_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^stream_ietf_ref_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_ietf_ref_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^stream_ietf_ref_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_ietf_ref_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^stream_ietf_ref_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_ietf_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^    int (*stream_ietf_xor_ic)(unsigned char *c, const unsigned char *m,$/;"	m	struct:crypto_stream_chacha20_implementation
stream_ref	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^stream_ref(unsigned char *c, unsigned long long clen, const unsigned char *n,$/;"	f	file:
stream_ref	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^stream_ref(unsigned char *c, unsigned long long clen, const unsigned char *n,$/;"	f	file:
stream_ref	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^stream_ref(unsigned char *c, unsigned long long clen, const unsigned char *n,$/;"	f	file:
stream_ref	libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c	/^stream_ref(unsigned char *c, unsigned long long clen, const unsigned char *n,$/;"	f	file:
stream_ref_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c	/^stream_ref_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_ref_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c	/^stream_ref_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_ref_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/ref/chacha20_ref.c	/^stream_ref_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_ref_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/ref/salsa20_ref.c	/^stream_ref_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_salsa20_H	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.h	3;"	d
stream_salsa20_xmm6	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^stream_salsa20_xmm6:$/;"	l
stream_salsa20_xmm6_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^stream_salsa20_xmm6_xor_ic:$/;"	l
stream_sse2	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^stream_sse2(unsigned char *c, unsigned long long clen, const unsigned char *n,$/;"	f	file:
stream_sse2_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c	/^stream_sse2_xor_ic(unsigned char *c, const unsigned char *m,$/;"	f	file:
stream_xor_ic	libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h	/^    int (*stream_xor_ic)(unsigned char *c, const unsigned char *m,$/;"	m	struct:crypto_stream_chacha20_implementation
stream_xor_ic	libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20.h	/^    int (*stream_xor_ic)(unsigned char *c, const unsigned char *m,$/;"	m	struct:crypto_stream_salsa20_implementation
string	zcash/serialize.h	/^    std::string& string;$/;"	m	class:LimitedString
strnlen	zcash/compat/strnlen.cpp	/^size_t strnlen( const char *start, size_t max_len)$/;"	f
strprintf	zcash/tinyformat.h	1047;"	d
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^sub  $1,%rsi$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  $1,%r11$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %r10,%rdx$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %rax,%r8$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %rax,%r9$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %rax,%rcx$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub  %rax,%rsi$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^sub  $1,%rax$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^sub  $1,%rdx$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^sub  $4,%rsi$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^sub  $1,%rax$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^sub  $1,%rdx$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^sub  $4,%rsi$/;"	l
sub	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^sub %r11,%rsp$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^sub  $2,%rdx$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^sub  $256,%r9$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^sub  $4,%rcx$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^sub  $64,%r9$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^sub  %r9,%rdi$/;"	l
sub	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^sub %r11,%rsp$/;"	l
sub_cnt	libsnark/src/algebra/fields/fp.hpp	/^    static long long sub_cnt;$/;"	m	class:libsnark::Fp_model
sub_cnt	libsnark/src/algebra/fields/fp.hpp	/^long long Fp_model<n, modulus>::sub_cnt = 0;$/;"	m	class:libsnark::Fp_model
subc0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^subc0: .quad 0x07FFFFDA, 0x03FFFFFE$/;"	l
subc0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	15;"	d
subc2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^subc2: .quad 0x07FFFFFE, 0x03FFFFFE$/;"	l
subc2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	16;"	d
subdir	Makefile	/^subdir = .$/;"	m
subdir	demo/Makefile	/^subdir = demo$/;"	m
subdir	libsodium/Makefile	/^subdir = .$/;"	m
subdir	libsodium/contrib/Makefile	/^subdir = contrib$/;"	m
subdir	libsodium/dist-build/Makefile	/^subdir = dist-build$/;"	m
subdir	libsodium/msvc-scripts/Makefile	/^subdir = msvc-scripts$/;"	m
subdir	libsodium/src/Makefile	/^subdir = src$/;"	m
subdir	libsodium/src/libsodium/Makefile	/^subdir = src\/libsodium$/;"	m
subdir	libsodium/src/libsodium/include/Makefile	/^subdir = src\/libsodium\/include$/;"	m
subdir	libsodium/test/Makefile	/^subdir = test$/;"	m
subdir	libsodium/test/default/Makefile	/^subdir = test\/default$/;"	m
subdir	zcash/Makefile	/^subdir = zcash$/;"	m
subdir	zcash/secp256k1/Makefile	/^subdir = .$/;"	m
succeed	zcash/tinyformat.h	/^        struct succeed { char dummy; };$/;"	s	struct:tinyformat::detail::is_convertible
success_flag	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable<FieldT> success_flag;$/;"	m	class:libsnark::loose_multiplexing_gadget
sumadd	zcash/secp256k1/src/scalar_4x64_impl.h	238;"	d
sumadd	zcash/secp256k1/src/scalar_4x64_impl.h	883;"	d
sumadd	zcash/secp256k1/src/scalar_8x32_impl.h	317;"	d
sumadd	zcash/secp256k1/src/scalar_8x32_impl.h	639;"	d
sumadd_fast	zcash/secp256k1/src/scalar_4x64_impl.h	247;"	d
sumadd_fast	zcash/secp256k1/src/scalar_4x64_impl.h	884;"	d
sumadd_fast	zcash/secp256k1/src/scalar_8x32_impl.h	326;"	d
sumadd_fast	zcash/secp256k1/src/scalar_8x32_impl.h	640;"	d
swap_AB_if_beneficial	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.tcc	/^void r1cs_constraint_system<FieldT>::swap_AB_if_beneficial()$/;"	f	class:libsnark::r1cs_constraint_system
swap_conditional	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^swap_conditional(limb a[5], limb b[5], limb iswap)$/;"	f	file:
swap_endianness_u64	zcash/circuit/utils.tcc	/^T swap_endianness_u64(T v) {$/;"	f
swapmove	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/common.h	448;"	d
sysconfdir	Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	demo/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/contrib/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/dist-build/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/msvc-scripts/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/src/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/src/libsodium/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/src/libsodium/include/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/test/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	libsodium/test/default/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	zcash/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
sysconfdir	zcash/secp256k1/Makefile	/^sysconfdir = ${prefix}\/etc$/;"	m
t	libsnark/src/algebra/fields/fp.hpp	/^    static bigint<n> t; \/\/ with t odd$/;"	m	class:libsnark::Fp_model
t	libsnark/src/algebra/fields/fp.hpp	/^bigint<n> Fp_model<n, modulus>::t;$/;"	m	class:libsnark::Fp_model
t	libsnark/src/algebra/fields/fp2.hpp	/^    static bigint<2*n> t;  \/\/ with t odd$/;"	m	class:libsnark::Fp2_model
t	libsnark/src/algebra/fields/fp2.hpp	/^bigint<2*n> Fp2_model<n, modulus>::t;$/;"	m	class:libsnark::Fp2_model
t	libsnark/src/algebra/fields/fp3.hpp	/^    static bigint<3*n> t;  \/\/ with t odd$/;"	m	class:libsnark::Fp3_model
t	libsnark/src/algebra/fields/fp3.hpp	/^bigint<3*n> Fp3_model<n, modulus>::t;$/;"	m	class:libsnark::Fp3_model
t	libsnark/src/relations/arithmetic_programs/qap/qap.hpp	/^    FieldT t;$/;"	m	class:libsnark::qap_instance_evaluation
t_cost	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t t_cost;  \/* number of passes *\/$/;"	m	struct:Argon2_Context
t_minus_1_over_2	libsnark/src/algebra/fields/fp.hpp	/^    static bigint<n> t_minus_1_over_2; \/\/ (t-1)\/2$/;"	m	class:libsnark::Fp_model
t_minus_1_over_2	libsnark/src/algebra/fields/fp.hpp	/^bigint<n> Fp_model<n, modulus>::t_minus_1_over_2;$/;"	m	class:libsnark::Fp_model
t_minus_1_over_2	libsnark/src/algebra/fields/fp2.hpp	/^    static bigint<2*n> t_minus_1_over_2; \/\/ (t-1)\/2$/;"	m	class:libsnark::Fp2_model
t_minus_1_over_2	libsnark/src/algebra/fields/fp2.hpp	/^bigint<2*n> Fp2_model<n, modulus>::t_minus_1_over_2;$/;"	m	class:libsnark::Fp2_model
t_minus_1_over_2	libsnark/src/algebra/fields/fp3.hpp	/^    static bigint<3*n> t_minus_1_over_2; \/\/ (t-1)\/2$/;"	m	class:libsnark::Fp3_model
t_minus_1_over_2	libsnark/src/algebra/fields/fp3.hpp	/^bigint<3*n> Fp3_model<n, modulus>::t_minus_1_over_2;$/;"	m	class:libsnark::Fp3_model
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	libsodium/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
tardir	zcash/secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2$/;"	m
tardir	zcash/secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz$/;"	m
tardir	zcash/secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz$/;"	m
tardir	zcash/secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z$/;"	m
tardir	zcash/secp256k1/Makefile	/^	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz$/;"	m
target	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable_array<FieldT> target;$/;"	m	class:libsnark::field_vector_copy_gadget
target_alias	Makefile	/^target_alias = $/;"	m
target_alias	demo/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/contrib/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/dist-build/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/msvc-scripts/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/src/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/src/libsodium/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/src/libsodium/include/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/test/Makefile	/^target_alias = $/;"	m
target_alias	libsodium/test/default/Makefile	/^target_alias = $/;"	m
target_alias	zcash/Makefile	/^target_alias = $/;"	m
target_alias	zcash/secp256k1/Makefile	/^target_alias = $/;"	m
target_bits	libsnark/src/gadgetlib1/gadgets/basic_gadgets.hpp	/^    const pb_variable_array<FieldT> target_bits;$/;"	m	class:libsnark::bit_vector_copy_gadget
terms	libsnark/src/relations/variable.hpp	/^    std::vector<linear_term<FieldT> > terms;$/;"	m	class:libsnark::linear_combination
test	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^def test():$/;"	f
testCreateECDHSecret	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testCreateECDHSecret() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testPrivKeyTweakAdd_1	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPrivKeyTweakAdd_1() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testPrivKeyTweakAdd_2	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPrivKeyTweakAdd_2() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testPrivKeyTweakMul_1	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPrivKeyTweakMul_1() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testPrivKeyTweakMul_2	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPrivKeyTweakMul_2() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testPubKeyCreateNeg	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPubKeyCreateNeg() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testPubKeyCreatePos	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testPubKeyCreatePos() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testRandomize	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testRandomize() throws AssertFailException {$/;"	m	class:NativeSecp256k1Test
testSecKeyVerifyNeg	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testSecKeyVerifyNeg() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testSecKeyVerifyPos	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testSecKeyVerifyPos() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testSignNeg	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testSignNeg() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testSignPos	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testSignPos() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testVerifyNeg	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testVerifyNeg() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
testVerifyPos	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1Test.java	/^    public static void testVerifyPos() throws AssertFailException{$/;"	m	class:NativeSecp256k1Test
test_Fp4_tom_cook	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_Fp4_tom_cook()$/;"	f
test_Frobenius	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_Frobenius()$/;"	f
test_add_neg_y_diff_x	zcash/secp256k1/src/tests.c	/^void test_add_neg_y_diff_x(void) {$/;"	f
test_affine_verifier	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/examples/run_r1cs_ppzksnark.tcc	/^test_affine_verifier(const r1cs_ppzksnark_verification_key<ppT> &vk,$/;"	f	namespace:libsnark
test_all_fields	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_all_fields()$/;"	f
test_all_merkle_tree_gadgets	libsnark/src/gadgetlib1/gadgets/merkle_tree/tests/test_merkle_tree_gadgets.cpp	/^void test_all_merkle_tree_gadgets()$/;"	f
test_bad_scalar	zcash/secp256k1/src/modules/ecdh/tests_impl.h	/^void test_bad_scalar(void) {$/;"	f
test_bigint	libsnark/src/algebra/fields/tests/test_bigint.cpp	/^void test_bigint()$/;"	f
test_bit	libsnark/src/algebra/fields/bigint.tcc	/^bool bigint<n>::test_bit(const std::size_t bitno) const$/;"	f	class:libsnark::bigint
test_comparison_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void test_comparison_gadget(const size_t n)$/;"	f	namespace:libsnark
test_conjunction_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void test_conjunction_gadget(const size_t n)$/;"	f	namespace:libsnark
test_constant_wnaf	zcash/secp256k1/src/tests.c	/^void test_constant_wnaf(const secp256k1_scalar *number, int w) {$/;"	f
test_constant_wnaf_negate	zcash/secp256k1/src/tests.c	/^void test_constant_wnaf_negate(const secp256k1_scalar *number) {$/;"	f
test_cyclotomic_squaring	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_cyclotomic_squaring<Fqk<edwards_pp> >()$/;"	f
test_cyclotomic_squaring	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_cyclotomic_squaring<Fqk<mnt4_pp> >()$/;"	f
test_cyclotomic_squaring	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_cyclotomic_squaring<Fqk<mnt6_pp> >()$/;"	f
test_data	libsodium/test/default/sign.c	/^static TestData test_data[] = {$/;"	v	file:
test_disjunction_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void test_disjunction_gadget(const size_t n)$/;"	f	namespace:libsnark
test_ec_combine	zcash/secp256k1/src/tests.c	/^void test_ec_combine(void) {$/;"	f
test_ecdh_api	zcash/secp256k1/src/modules/ecdh/tests_impl.h	/^void test_ecdh_api(void) {$/;"	f
test_ecdh_generator_basepoint	zcash/secp256k1/src/modules/ecdh/tests_impl.h	/^void test_ecdh_generator_basepoint(void) {$/;"	f
test_ecdsa_der_parse	zcash/secp256k1/src/tests.c	/^int test_ecdsa_der_parse(const unsigned char *sig, size_t siglen, int certainly_der, int certainly_not_der) {$/;"	f
test_ecdsa_edge_cases	zcash/secp256k1/src/tests.c	/^void test_ecdsa_edge_cases(void) {$/;"	f
test_ecdsa_end_to_end	zcash/secp256k1/src/tests.c	/^void test_ecdsa_end_to_end(void) {$/;"	f
test_ecdsa_openssl	zcash/secp256k1/src/tests.c	/^void test_ecdsa_openssl(void) {$/;"	f
test_ecdsa_recovery_api	zcash/secp256k1/src/modules/recovery/tests_impl.h	/^void test_ecdsa_recovery_api(void) {$/;"	f
test_ecdsa_recovery_edge_cases	zcash/secp256k1/src/modules/recovery/tests_impl.h	/^void test_ecdsa_recovery_edge_cases(void) {$/;"	f
test_ecdsa_recovery_end_to_end	zcash/secp256k1/src/modules/recovery/tests_impl.h	/^void test_ecdsa_recovery_end_to_end(void) {$/;"	f
test_ecdsa_sign_verify	zcash/secp256k1/src/tests.c	/^void test_ecdsa_sign_verify(void) {$/;"	f
test_ecmult_constants	zcash/secp256k1/src/tests.c	/^void test_ecmult_constants(void) {$/;"	f
test_ecmult_gen_blind	zcash/secp256k1/src/tests.c	/^void test_ecmult_gen_blind(void) {$/;"	f
test_ecmult_gen_blind_reset	zcash/secp256k1/src/tests.c	/^void test_ecmult_gen_blind_reset(void) {$/;"	f
test_exhaustive_addition	zcash/secp256k1/src/tests_exhaustive.c	/^void test_exhaustive_addition(const secp256k1_ge *group, const secp256k1_gej *groupj, int order) {$/;"	f
test_exhaustive_ecmult	zcash/secp256k1/src/tests_exhaustive.c	/^void test_exhaustive_ecmult(const secp256k1_context *ctx, const secp256k1_ge *group, const secp256k1_gej *groupj, int order) {$/;"	f
test_exhaustive_endomorphism	zcash/secp256k1/src/tests_exhaustive.c	/^void test_exhaustive_endomorphism(const secp256k1_ge *group, int order) {$/;"	f
test_exhaustive_recovery_sign	zcash/secp256k1/src/tests_exhaustive.c	/^void test_exhaustive_recovery_sign(const secp256k1_context *ctx, const secp256k1_ge *group, int order) {$/;"	f
test_exhaustive_recovery_verify	zcash/secp256k1/src/tests_exhaustive.c	/^void test_exhaustive_recovery_verify(const secp256k1_context *ctx, const secp256k1_ge *group, int order) {$/;"	f
test_exhaustive_sign	zcash/secp256k1/src/tests_exhaustive.c	/^void test_exhaustive_sign(const secp256k1_context *ctx, const secp256k1_ge *group, int order) {$/;"	f
test_exhaustive_verify	zcash/secp256k1/src/tests_exhaustive.c	/^void test_exhaustive_verify(const secp256k1_context *ctx, const secp256k1_ge *group, int order) {$/;"	f
test_field	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_field()$/;"	f
test_ge	zcash/secp256k1/src/tests.c	/^void test_ge(void) {$/;"	f
test_group	libsnark/src/algebra/curves/tests/test_groups.cpp	/^void test_group()$/;"	f
test_group_decompress	zcash/secp256k1/src/tests.c	/^void test_group_decompress(const secp256k1_fe* x) {$/;"	f
test_inner_product_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void test_inner_product_gadget(const size_t n)$/;"	f	namespace:libsnark
test_loose_multiplexing_gadget	libsnark/src/gadgetlib1/gadgets/basic_gadgets.tcc	/^void test_loose_multiplexing_gadget(const size_t n)$/;"	f	namespace:libsnark
test_merkle_tree_check_read_gadget	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.tcc	/^void test_merkle_tree_check_read_gadget()$/;"	f	namespace:libsnark
test_merkle_tree_check_update_gadget	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.tcc	/^void test_merkle_tree_check_update_gadget()$/;"	f	namespace:libsnark
test_mixed_add	libsnark/src/algebra/curves/tests/test_groups.cpp	/^void test_mixed_add()$/;"	f
test_mul_by_q	libsnark/src/algebra/curves/tests/test_groups.cpp	/^void test_mul_by_q()$/;"	f
test_num_add_sub	zcash/secp256k1/src/tests.c	/^void test_num_add_sub(void) {$/;"	f
test_num_jacobi	zcash/secp256k1/src/tests.c	/^void test_num_jacobi(void) {$/;"	f
test_num_mod	zcash/secp256k1/src/tests.c	/^void test_num_mod(void) {$/;"	f
test_num_negate	zcash/secp256k1/src/tests.c	/^void test_num_negate(void) {$/;"	f
test_output	libsnark/src/algebra/curves/tests/test_groups.cpp	/^void test_output()$/;"	f
test_point_times_order	zcash/secp256k1/src/tests.c	/^void test_point_times_order(const secp256k1_gej *point) {$/;"	f
test_qap	libsnark/src/relations/arithmetic_programs/qap/tests/test_qap.cpp	/^void test_qap(const size_t qap_degree, const size_t num_inputs, const bool binary_input)$/;"	f
test_r1cs_ppzksnark	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/tests/test_r1cs_ppzksnark.cpp	/^void test_r1cs_ppzksnark(size_t num_constraints,$/;"	f
test_rand_bits	zcash/secp256k1/src/tests.c	/^void test_rand_bits(int rand32, int bits) {$/;"	f
test_rand_int	zcash/secp256k1/src/tests.c	/^void test_rand_int(uint32_t range, uint32_t subrange) {$/;"	f
test_random_pubkeys	zcash/secp256k1/src/tests.c	/^void test_random_pubkeys(void) {$/;"	f
test_scalar_split	zcash/secp256k1/src/tests.c	/^void test_scalar_split(void) {$/;"	f
test_sqrt	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_sqrt()$/;"	f
test_sqrt	zcash/secp256k1/src/tests.c	/^void test_sqrt(const secp256k1_fe *a, const secp256k1_fe *k) {$/;"	f
test_two_squarings	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_two_squarings()$/;"	f
test_two_to_one	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/test_sha256_gadget.cpp	/^void test_two_to_one()$/;"	f
test_unitary_inverse	libsnark/src/algebra/fields/tests/test_fields.cpp	/^void test_unitary_inverse()$/;"	f
test_varargs_macros	libsodium/configure	/^  test_varargs_macros ();$/;"	f
test_wnaf	zcash/secp256k1/src/tests.c	/^void test_wnaf(const secp256k1_scalar *number, int w) {$/;"	f
tests	libsodium/test/default/aead_aes256gcm.c	/^} tests[] = {$/;"	v	typeref:struct:__anon2	file:
tests	libsodium/test/default/generichash.c	/^} tests[] = {$/;"	v	typeref:struct:__anon1	file:
tests_CPPFLAGS	zcash/secp256k1/Makefile	/^tests_CPPFLAGS = -DSECP256K1_BUILD -I$(top_srcdir)\/src \\$/;"	m
tests_DEPENDENCIES	zcash/secp256k1/Makefile	/^tests_DEPENDENCIES = $(am__DEPENDENCIES_2) \\$/;"	m
tests_LDADD	zcash/secp256k1/Makefile	/^tests_LDADD = $(SECP_LIBS) $(SECP_TEST_LIBS) $(COMMON_LIB)$/;"	m
tests_LDFLAGS	zcash/secp256k1/Makefile	/^tests_LDFLAGS = -static$/;"	m
tests_LINK	zcash/secp256k1/Makefile	/^tests_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\$/;"	m
tests_OBJECTS	zcash/secp256k1/Makefile	/^tests_OBJECTS = $(am_tests_OBJECTS)$/;"	m
tests_SOURCES	zcash/secp256k1/Makefile	/^tests_SOURCES = src\/tests.c$/;"	m
threads	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint32_t      threads;$/;"	m	struct:Argon2_instance_t
threads	libsodium/src/libsodium/crypto_pwhash/argon2/argon2.h	/^    uint32_t threads; \/* maximum number of threads *\/$/;"	m	struct:Argon2_Context
tinyformat	zcash/tinyformat.h	/^namespace tinyformat {$/;"	n
tinyformat	zcash/tinyformat.h	/^namespace tinyformat {}$/;"	n
tinyformat_wchar_is_not_supported	zcash/tinyformat.h	/^template<typename T> struct is_wchar { typedef int tinyformat_wchar_is_not_supported; };$/;"	t	struct:tinyformat::detail::is_wchar
tlist	zcash/circuit/note.tcc	/^		pb_variable_array<FieldT> tlist;$/;"	m	class:input_note_gadget	file:
tlock	zcash/Note.hpp	/^		uint64_t tlock;$/;"	m	class:libzcash::Note
tlock	zcash/Note.hpp	/^    uint64_t tlock;$/;"	m	class:libzcash::NotePlaintext
tlock64	zcash/circuit/gadget.tcc	/^		boost::array<pb_variable_array<FieldT>, NumInputs> tlock64;$/;"	m	class:joinsplit_gadget	file:
tmp	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    pb_variable<FieldT> tmp;$/;"	m	class:libsnark::XOR3_gadget
toInt	zcash/tinyformat.h	/^        int toInt() const$/;"	f	class:tinyformat::detail::FormatArg
toIntImpl	zcash/tinyformat.h	/^        TINYFORMAT_HIDDEN static int toIntImpl(const void* value)$/;"	f	class:tinyformat::detail::FormatArg
to_affine_coordinates	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^void alt_bn128_G1::to_affine_coordinates()$/;"	f	class:libsnark::alt_bn128_G1
to_affine_coordinates	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^void alt_bn128_G2::to_affine_coordinates()$/;"	f	class:libsnark::alt_bn128_G2
to_base64	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^to_base64(char *dst, size_t dst_len, const void *src, size_t src_len)$/;"	f	file:
to_bool_vector	zcash/circuit/utils.tcc	/^std::vector<bool> to_bool_vector(T input) {$/;"	f
to_libsnark_fq	zcash/Proof.cpp	/^curve_Fq Fq::to_libsnark_fq() const$/;"	f	class:libzcash::Fq
to_libsnark_fq2	zcash/Proof.cpp	/^curve_Fq2 Fq2::to_libsnark_fq2() const$/;"	f	class:libzcash::Fq2
to_libsnark_g1	zcash/Proof.cpp	/^curve_G1 CompressedG1::to_libsnark_g1() const$/;"	f	class:libzcash::CompressedG1
to_libsnark_g2	zcash/Proof.cpp	/^curve_G2 CompressedG2::to_libsnark_g2() const$/;"	f	class:libzcash::CompressedG2
to_libsnark_proof	zcash/Proof.cpp	/^r1cs_ppzksnark_proof<curve_pp> ZCProof::to_libsnark_proof() const$/;"	f	class:libzcash::ZCProof
to_mpz	libsnark/src/algebra/fields/bigint.tcc	/^void bigint<n>::to_mpz(mpz_t r) const$/;"	f	class:libsnark::bigint
to_special	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^void alt_bn128_G1::to_special()$/;"	f	class:libsnark::alt_bn128_G1
to_special	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^void alt_bn128_G2::to_special()$/;"	f	class:libsnark::alt_bn128_G2
toggle	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	41;"	d
toggle	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^toggle(aes_uint128_t *r)$/;"	f
top_build_prefix	Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	demo/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/Makefile	/^top_build_prefix = $/;"	m
top_build_prefix	libsodium/contrib/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/dist-build/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/msvc-scripts/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/src/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/src/libsodium/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	libsodium/src/libsodium/include/Makefile	/^top_build_prefix = ..\/..\/..\/$/;"	m
top_build_prefix	libsodium/test/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	libsodium/test/default/Makefile	/^top_build_prefix = ..\/..\/$/;"	m
top_build_prefix	zcash/Makefile	/^top_build_prefix = ..\/$/;"	m
top_build_prefix	zcash/secp256k1/Makefile	/^top_build_prefix = $/;"	m
top_builddir	Makefile	/^top_builddir = .$/;"	m
top_builddir	demo/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/Makefile	/^top_builddir = .$/;"	m
top_builddir	libsodium/contrib/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/dist-build/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/msvc-scripts/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/src/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/src/libsodium/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	libsodium/src/libsodium/include/Makefile	/^top_builddir = ..\/..\/..$/;"	m
top_builddir	libsodium/test/Makefile	/^top_builddir = ..$/;"	m
top_builddir	libsodium/test/default/Makefile	/^top_builddir = ..\/..$/;"	m
top_builddir	zcash/Makefile	/^top_builddir = ..$/;"	m
top_builddir	zcash/secp256k1/Makefile	/^top_builddir = .$/;"	m
top_distdir	Makefile	/^top_distdir = $(distdir)$/;"	m
top_distdir	libsodium/Makefile	/^top_distdir = $(distdir)$/;"	m
top_distdir	zcash/secp256k1/Makefile	/^top_distdir = $(distdir)$/;"	m
top_srcdir	Makefile	/^top_srcdir = .$/;"	m
top_srcdir	demo/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/Makefile	/^top_srcdir = .$/;"	m
top_srcdir	libsodium/contrib/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/dist-build/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/msvc-scripts/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/src/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/src/libsodium/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	libsodium/src/libsodium/include/Makefile	/^top_srcdir = ..\/..\/..$/;"	m
top_srcdir	libsodium/test/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	libsodium/test/default/Makefile	/^top_srcdir = ..\/..$/;"	m
top_srcdir	zcash/Makefile	/^top_srcdir = ..$/;"	m
top_srcdir	zcash/secp256k1/Makefile	/^top_srcdir = .$/;"	m
trailing252	zcash/circuit/utils.tcc	/^std::vector<bool> trailing252(std::vector<bool> input) {$/;"	f
transform	Makefile	/^transform = $(program_transform_name)$/;"	m
transform	demo/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/contrib/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/dist-build/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/msvc-scripts/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/src/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/src/libsodium/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/src/libsodium/include/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/test/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	libsodium/test/default/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	zcash/Makefile	/^transform = $(program_transform_name)$/;"	m
transform	zcash/secp256k1/Makefile	/^transform = $(program_transform_name)$/;"	m
translationInterface	zcash/zcashutil.cpp	/^CTranslationInterface translationInterface;$/;"	v
tree	zcash/IncrementalMerkleTree.hpp	/^    IncrementalMerkleTree<Depth, Hash> tree;$/;"	m	class:libzcash::IncrementalWitness
tree_depth	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_authentication_path_variable.hpp	/^    const size_t tree_depth;$/;"	m	class:libsnark::merkle_authentication_path_variable
tree_depth	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_read_gadget.hpp	/^    const size_t tree_depth;$/;"	m	class:libsnark::merkle_tree_check_read_gadget
tree_depth	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    const size_t tree_depth;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
try_wait	zcash/sync.h	/^    bool try_wait()$/;"	f	class:CSemaphore
tv	libsodium/test/default/aead_aes256gcm.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/aead_chacha20poly1305.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/aead_xchacha20poly1305.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/chacha20.c	/^void tv(void)$/;"	f	file:
tv	libsodium/test/default/generichash.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/pwhash.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/pwhash_argon2id.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/pwhash_scrypt.c	/^tv(void)$/;"	f	file:
tv	libsodium/test/default/pwhash_scrypt_ll.c	/^tv(const char *passwd, const char *salt, uint64_t N, uint32_t r, uint32_t p)$/;"	f	file:
tv2	libsodium/test/default/pwhash.c	/^tv2(void)$/;"	f	file:
tv2	libsodium/test/default/pwhash_argon2id.c	/^tv2(void)$/;"	f	file:
tv2	libsodium/test/default/pwhash_scrypt.c	/^tv2(void)$/;"	f	file:
tv3	libsodium/test/default/pwhash.c	/^tv3(void)$/;"	f	file:
tv3	libsodium/test/default/pwhash_argon2id.c	/^tv3(void)$/;"	f	file:
tv3	libsodium/test/default/pwhash_scrypt.c	/^tv3(void)$/;"	f	file:
tv_box_xchacha20poly1305	libsodium/test/default/xchacha20.c	/^tv_box_xchacha20poly1305(void)$/;"	f	file:
tv_hchacha20	libsodium/test/default/xchacha20.c	/^tv_hchacha20(void)$/;"	f	file:
tv_ietf	libsodium/test/default/aead_chacha20poly1305.c	/^tv_ietf(void)$/;"	f	file:
tv_ietf	libsodium/test/default/chacha20.c	/^void tv_ietf(void)$/;"	f	file:
tv_kdf	libsodium/test/default/kdf.c	/^tv_kdf(void)$/;"	f	file:
tv_keygen	libsodium/test/default/keygen.c	/^tv_keygen(void)$/;"	f	file:
tv_kx	libsodium/test/default/kx.c	/^tv_kx(void)$/;"	f	file:
tv_secretbox_xchacha20poly1305	libsodium/test/default/xchacha20.c	/^tv_secretbox_xchacha20poly1305(void)$/;"	f	file:
tv_stream_xchacha20	libsodium/test/default/xchacha20.c	/^tv_stream_xchacha20(void)$/;"	f	file:
twist_field	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    typedef alt_bn128_Fq2 twist_field;$/;"	t	class:libsnark::alt_bn128_G2
two_to_one_CRH	libsnark/src/common/data_structures/merkle_tree.tcc	/^typename HashT::hash_value_type two_to_one_CRH(const typename HashT::hash_value_type &l,$/;"	f	namespace:libsnark
txTo	zcash/script/interpreter.cpp	/^    const CTransaction &txTo;  \/\/! reference to the spending transaction (the one being serialized)$/;"	m	class:__anon21::CTransactionSignatureSerializer	file:
txTo	zcash/script/interpreter.h	/^    const CTransaction txTo;$/;"	m	class:MutableTransactionSignatureChecker
txTo	zcash/script/interpreter.h	/^    const CTransaction* txTo;$/;"	m	class:TransactionSignatureChecker
txTo	zcash/script/sign.h	/^    const CTransaction* txTo;$/;"	m	class:TransactionSignatureCreator
txnouttype	zcash/script/standard.h	/^enum txnouttype$/;"	g
type	libsnark/src/common/template_utils.hpp	/^    typedef void type;$/;"	t	struct:libsnark::void_type
type	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    argon2_type   type;$/;"	m	struct:Argon2_instance_t
u32	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	/^    uint32_t u32[4];$/;"	m	union:__anon12
u32_to_string	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-encoding.c	/^u32_to_string(char *str, uint32_t x)$/;"	f	file:
u64	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	/^    uint64_t u64[2];$/;"	m	union:__anon12
u8	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^typedef uint8_t u8;$/;"	t	file:
u8	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	/^    uint8_t  u8[16];$/;"	m	union:__anon12
uint128_t	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^typedef unsigned __int128 uint128_t;$/;"	t	file:
uint128_t	libsodium/src/libsodium/crypto_generichash/blake2b/ref/blake2b-ref.c	/^typedef unsigned uint128_t __attribute__((mode(TI)));$/;"	t	file:
uint128_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^typedef unsigned __int128 uint128_t;$/;"	t
uint128_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h	/^typedef unsigned uint128_t __attribute__((mode(TI)));$/;"	t
uint128_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^typedef unsigned __int128 uint128_t;$/;"	t	file:
uint128_t	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^typedef unsigned uint128_t __attribute__((mode(TI)));$/;"	t	file:
uint128_t	libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c	/^typedef unsigned uint128_t __attribute__((mode(TI)));$/;"	t	file:
uint128_t	zcash/secp256k1/src/util.h	/^SECP256K1_GNUC_EXT typedef unsigned __int128 uint128_t;$/;"	t
uint160	zcash/uint256.h	/^    explicit uint160(const std::vector<unsigned char>& vch) : base_blob<160>(vch) {}$/;"	f	class:uint160
uint160	zcash/uint256.h	/^    uint160() {}$/;"	f	class:uint160
uint160	zcash/uint256.h	/^    uint160(const base_blob<160>& b) : base_blob<160>(b) {}$/;"	f	class:uint160
uint160	zcash/uint256.h	/^class uint160 : public base_blob<160> {$/;"	c
uint252	zcash/uint252.h	/^    explicit uint252(const uint256& in) : contents(in) {$/;"	f	class:uint252
uint252	zcash/uint252.h	/^    uint252() : contents() {};$/;"	f	class:uint252
uint252	zcash/uint252.h	/^class uint252 {$/;"	c
uint252_to_bool_vector	zcash/circuit/utils.tcc	/^std::vector<bool> uint252_to_bool_vector(uint252 input) {$/;"	f
uint256	zcash/uint256.h	/^		uint256(unsigned char a) : base_blob<256>({a}) {}$/;"	f	class:uint256
uint256	zcash/uint256.h	/^    explicit uint256(const std::vector<unsigned char>& vch) : base_blob<256>(vch) {}$/;"	f	class:uint256
uint256	zcash/uint256.h	/^    uint256() {}$/;"	f	class:uint256
uint256	zcash/uint256.h	/^    uint256(const base_blob<256>& b) : base_blob<256>(b) {}$/;"	f	class:uint256
uint256	zcash/uint256.h	/^class uint256 : public base_blob<256> {$/;"	c
uint256S	zcash/uint256.h	/^inline uint256 uint256S(const char *str)$/;"	f
uint256S	zcash/uint256.h	/^inline uint256 uint256S(const std::string& str)$/;"	f
uint256_to_bool_vector	zcash/circuit/utils.tcc	/^std::vector<bool> uint256_to_bool_vector(uint256 input) {$/;"	f
uint64_to_bool_vector	zcash/circuit/utils.tcc	/^std::vector<bool> uint64_to_bool_vector(uint64_t input) {$/;"	f
uint_error	zcash/arith_uint256.h	/^    explicit uint_error(const std::string& str) : std::runtime_error(str) {}$/;"	f	class:uint_error
uint_error	zcash/arith_uint256.h	/^class uint_error : public std::runtime_error {$/;"	c
uncounting_illegal_callback_fn	zcash/secp256k1/src/tests.c	/^static void uncounting_illegal_callback_fn(const char* str, void* data) {$/;"	f	file:
uniform	libsodium/src/libsodium/include/sodium/randombytes.h	/^    uint32_t    (*uniform)(const uint32_t upper_bound); \/* optional, a default implementation will be used if NULL *\/$/;"	m	struct:randombytes_implementation
unitary_inverse	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::unitary_inverse() const$/;"	f	class:libsnark::Fp12_2over3over2_model
unpack_bits	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_aux.hpp	/^    std::shared_ptr<packing_gadget<FieldT> > unpack_bits;$/;"	m	class:libsnark::lastbits_gadget
unpacker	zcash/circuit/gadget.tcc	/^    std::shared_ptr<multipacking_gadget<FieldT>> unpacker;$/;"	m	class:joinsplit_gadget	file:
unreduced_W	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    std::vector<pb_variable<FieldT> > unreduced_W;$/;"	m	class:libsnark::sha256_message_schedule_gadget
unreduced_new_a	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> unreduced_new_a;$/;"	m	class:libsnark::sha256_round_function_gadget
unreduced_new_e	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_components.hpp	/^    pb_variable<FieldT> unreduced_new_e;$/;"	m	class:libsnark::sha256_round_function_gadget
unreduced_output	libsnark/src/gadgetlib1/gadgets/hashes/sha256/sha256_gadget.hpp	/^    pb_variable_array<FieldT> unreduced_output;$/;"	m	class:libsnark::sha256_compression_function_gadget
update	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/pypy_sha256.py	/^    def update(self, s):$/;"	m	class:sha256
update_successful	libsnark/src/gadgetlib1/gadgets/merkle_tree/merkle_tree_check_update_gadget.hpp	/^    pb_linear_combination<FieldT> update_successful;$/;"	m	class:libsnark::merkle_tree_check_update_gadget
usage_error	libsodium/build-aux/test-driver	/^usage_error ()$/;"	f
usage_error	zcash/secp256k1/build-aux/test-driver	/^usage_error ()$/;"	f
v	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.h	/^    uint64_t v[ARGON2_QWORDS_IN_BLOCK];$/;"	m	struct:block_
v	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h	/^    uint64_t v[5];$/;"	m	struct:__anon4
v	zcash/secp256k1/src/hash.h	/^    unsigned char v[32];$/;"	m	struct:__anon51
v0_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v0_0: .quad 0, 0$/;"	l
v0_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	4;"	d
v121666_121666	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v121666_121666: .quad 121666, 121666$/;"	l
v121666_121666	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	12;"	d
v19_19	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v19_19: .quad 19, 19$/;"	l
v19_19	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	9;"	d
v1_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v1_0: .quad 1, 0$/;"	l
v1_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	5;"	d
v2_1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v2_1: .quad 2, 1$/;"	l
v2_1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	6;"	d
v38_1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v38_1: .quad 38, 1$/;"	l
v38_1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	10;"	d
v38_38	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v38_38: .quad 38, 38$/;"	l
v38_38	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	11;"	d
v9_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v9_0: .quad 9, 0$/;"	l
v9_0	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	7;"	d
v9_9	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts.S	/^v9_9: .quad 9, 9$/;"	l
v9_9	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h	8;"	d
vHave	zcash/primitives/block.h	/^    std::vector<uint256> vHave;$/;"	m	struct:CBlockLocator
vMerkleTree	zcash/primitives/block.h	/^    mutable std::vector<uint256> vMerkleTree;$/;"	m	class:CBlock
vMsgsBeforeOpenLog	zcash/zcashutil.cpp	/^static list<string> *vMsgsBeforeOpenLog;$/;"	v	file:
val	libsnark/src/gadgetlib1/protoboard.tcc	/^FieldT protoboard<FieldT>::val(const pb_variable<FieldT> &var) const$/;"	f	class:libsnark::protoboard
val	libsnark/src/gadgetlib1/protoboard.tcc	/^FieldT& protoboard<FieldT>::val(const pb_variable<FieldT> &var)$/;"	f	class:libsnark::protoboard
valgrind_enabled_tools	libsodium/Makefile	/^valgrind_enabled_tools = $/;"	m
valgrind_enabled_tools	libsodium/contrib/Makefile	/^valgrind_enabled_tools = $/;"	m
valgrind_enabled_tools	libsodium/dist-build/Makefile	/^valgrind_enabled_tools = $/;"	m
valgrind_enabled_tools	libsodium/msvc-scripts/Makefile	/^valgrind_enabled_tools = $/;"	m
valgrind_enabled_tools	libsodium/src/Makefile	/^valgrind_enabled_tools = $/;"	m
valgrind_enabled_tools	libsodium/src/libsodium/Makefile	/^valgrind_enabled_tools = $/;"	m
valgrind_enabled_tools	libsodium/src/libsodium/include/Makefile	/^valgrind_enabled_tools = $/;"	m
valgrind_enabled_tools	libsodium/test/Makefile	/^valgrind_enabled_tools = $/;"	m
valgrind_enabled_tools	libsodium/test/default/Makefile	/^valgrind_enabled_tools = $/;"	m
valgrind_tools	libsodium/Makefile	/^valgrind_tools = memcheck helgrind drd sgcheck$/;"	m
valgrind_tools	libsodium/contrib/Makefile	/^valgrind_tools = memcheck helgrind drd sgcheck$/;"	m
valgrind_tools	libsodium/dist-build/Makefile	/^valgrind_tools = memcheck helgrind drd sgcheck$/;"	m
valgrind_tools	libsodium/msvc-scripts/Makefile	/^valgrind_tools = memcheck helgrind drd sgcheck$/;"	m
valgrind_tools	libsodium/src/Makefile	/^valgrind_tools = memcheck helgrind drd sgcheck$/;"	m
valgrind_tools	libsodium/src/libsodium/Makefile	/^valgrind_tools = memcheck helgrind drd sgcheck$/;"	m
valgrind_tools	libsodium/src/libsodium/include/Makefile	/^valgrind_tools = memcheck helgrind drd sgcheck$/;"	m
valgrind_tools	libsodium/test/Makefile	/^valgrind_tools = memcheck helgrind drd sgcheck$/;"	m
valgrind_tools	libsodium/test/default/Makefile	/^valgrind_tools = memcheck helgrind drd sgcheck$/;"	m
validate_inputs	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^validate_inputs(const argon2_context *context)$/;"	f
valtype	zcash/script/interpreter.cpp	/^typedef vector<unsigned char> valtype;$/;"	t	file:
valtype	zcash/script/sign.cpp	/^typedef vector<unsigned char> valtype;$/;"	t	file:
valtype	zcash/script/standard.cpp	/^typedef vector<unsigned char> valtype;$/;"	t	file:
value	zcash/JoinSplit.hpp	/^    uint64_t value;$/;"	m	class:libzcash::JSOutput
value	zcash/Note.hpp	/^    uint64_t value = 0;$/;"	m	class:libzcash::NotePlaintext
value	zcash/Note.hpp	/^    uint64_t value;$/;"	m	class:libzcash::Note
value	zcash/circuit/note.tcc	/^    pb_variable_array<FieldT> value;$/;"	m	class:note_gadget	file:
value	zcash/sync.h	/^    int value;$/;"	m	class:CSemaphore
value	zcash/tinyformat.h	/^        static const bool value =$/;"	m	struct:tinyformat::detail::is_convertible
value_enforce	zcash/circuit/note.tcc	/^    pb_variable<FieldT> value_enforce;$/;"	m	class:input_note_gadget	file:
value_size	libsnark/src/common/data_structures/merkle_tree.hpp	/^    size_t value_size;$/;"	m	class:libsnark::merkle_tree
value_type	zcash/streams.h	/^    typedef typename vector_type::value_type       value_type;$/;"	t	class:CBaseDataStream
value_type	zcash/support/allocators/secure.h	/^    typedef typename base::value_type value_type;$/;"	t	struct:secure_allocator
value_type	zcash/support/allocators/zeroafterfree.h	/^    typedef typename base::value_type value_type;$/;"	t	struct:zero_after_free_allocator
values	libsnark/src/common/data_structures/merkle_tree.hpp	/^    std::map<size_t, bit_vector> values;$/;"	m	class:libsnark::merkle_tree
values	libsnark/src/common/data_structures/sparse_vector.hpp	/^    std::vector<T> values;$/;"	m	struct:libsnark::sparse_vector
values	libsnark/src/gadgetlib1/protoboard.hpp	/^    r1cs_variable_assignment<FieldT> values; \/* values[0] will hold the value of the first allocated variable of the protoboard, *NOT* constant 1 *\/$/;"	m	class:libsnark::protoboard
var_index_t	libsnark/src/relations/variable.hpp	/^typedef size_t var_index_t;$/;"	t	namespace:libsnark
variable	libsnark/src/relations/variable.hpp	/^    variable(const var_index_t index = 0) : index(index) {};$/;"	f	class:libsnark::variable
variable	libsnark/src/relations/variable.hpp	/^class variable {$/;"	c	namespace:libsnark
variable_annotations	libsnark/src/relations/constraint_satisfaction_problems/r1cs/r1cs.hpp	/^    std::map<size_t, std::string> variable_annotations;$/;"	m	class:libsnark::r1cs_constraint_system
vars	libsnark/src/gadgetlib1/gadgets/gadget_from_r1cs.hpp	/^    const std::vector<pb_variable_array<FieldT> > vars;$/;"	m	class:libsnark::gadget_from_r1cs
vblendps	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vblendps $12, %xmm11, %xmm10, %xmm10$/;"	l
vbroadcastss	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vbroadcastss 0(%rsi),%xmm10$/;"	l
vbroadcastss	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vbroadcastss 0(%rsi),%xmm10$/;"	l
vch	zcash/key.h	/^    unsigned char vch[32];$/;"	m	class:CKey
vch	zcash/pubkey.h	/^    unsigned char vch[PUBLIC_KEY_SIZE];$/;"	m	class:CPubKey
vch	zcash/streams.h	/^    vector_type vch;$/;"	m	class:CBaseDataStream
vchBuf	zcash/streams.h	/^    std::vector<char> vchBuf; \/\/ the buffer$/;"	m	class:CBufferedFile
vchFingerprint	zcash/key.h	/^    unsigned char vchFingerprint[4];$/;"	m	struct:CExtKey
vchFingerprint	zcash/pubkey.h	/^    unsigned char vchFingerprint[4];$/;"	m	struct:CExtPubKey
vector_type	zcash/streams.h	/^    typedef SerializeType vector_type;$/;"	t	class:CBaseDataStream
verify	zcash/JoinSplit.cpp	/^    bool verify($/;"	f	class:libzcash::JoinSplitCircuit
verify	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    public static boolean verify(byte[] data, byte[] signature, byte[] pub) throws AssertFailException{$/;"	m	class:NativeSecp256k1
verify1_DEPENDENCIES	libsodium/test/default/Makefile	/^verify1_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
verify1_LDADD	libsodium/test/default/Makefile	/^verify1_LDADD = $(TESTS_LDADD)$/;"	m
verify1_OBJECTS	libsodium/test/default/Makefile	/^verify1_OBJECTS = verify1.$(OBJEXT)$/;"	m
verify1_SOURCE	libsodium/test/default/Makefile	/^verify1_SOURCE = cmptest.h verify1.c$/;"	m
verify1_SOURCES	libsodium/test/default/Makefile	/^verify1_SOURCES = verify1.c$/;"	m
verifying_field_element_size	zcash/circuit/gadget.tcc	/^    static size_t verifying_field_element_size() {$/;"	f	class:joinsplit_gadget
verifying_input_bit_size	zcash/circuit/gadget.tcc	/^    static size_t verifying_input_bit_size() {$/;"	f	class:joinsplit_gadget
vformat	zcash/tinyformat.h	/^inline void vformat(std::ostream& out, const char* fmt, FormatListRef list)$/;"	f	namespace:tinyformat
viewing_key	zcash/Address.cpp	/^ViewingKey SpendingKey::viewing_key() const {$/;"	f	class:libzcash::SpendingKey
vin	zcash/primitives/transaction.h	/^    const std::vector<CTxIn> vin;$/;"	m	class:CTransaction
vin	zcash/primitives/transaction.h	/^    std::vector<CTxIn> vin;$/;"	m	struct:CMutableTransaction
vjoinsplit	zcash/primitives/transaction.h	/^    const std::vector<JSDescription> vjoinsplit;$/;"	m	class:CTransaction
vjoinsplit	zcash/primitives/transaction.h	/^    std::vector<JSDescription> vjoinsplit;$/;"	m	struct:CMutableTransaction
vk	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    r1cs_ppzksnark_verification_key<ppT> vk;$/;"	m	class:libsnark::r1cs_ppzksnark_keypair
vk	zcash/JoinSplit.cpp	/^    boost::optional<r1cs_ppzksnark_verification_key<ppzksnark_ppT>> vk;$/;"	m	class:libzcash::JoinSplitCircuit	file:
vk_alphaA_g2_precomp	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2_precomp<ppT> vk_alphaA_g2_precomp;$/;"	m	class:libsnark::r1cs_ppzksnark_processed_verification_key
vk_alphaB_g1_precomp	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G1_precomp<ppT> vk_alphaB_g1_precomp;$/;"	m	class:libsnark::r1cs_ppzksnark_processed_verification_key
vk_alphaC_g2_precomp	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2_precomp<ppT> vk_alphaC_g2_precomp;$/;"	m	class:libsnark::r1cs_ppzksnark_processed_verification_key
vk_gamma_beta_g1_precomp	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G1_precomp<ppT> vk_gamma_beta_g1_precomp;$/;"	m	class:libsnark::r1cs_ppzksnark_processed_verification_key
vk_gamma_beta_g2_precomp	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2_precomp<ppT> vk_gamma_beta_g2_precomp;$/;"	m	class:libsnark::r1cs_ppzksnark_processed_verification_key
vk_gamma_g2_precomp	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2_precomp<ppT> vk_gamma_g2_precomp;$/;"	m	class:libsnark::r1cs_ppzksnark_processed_verification_key
vk_precomp	zcash/JoinSplit.cpp	/^    boost::optional<r1cs_ppzksnark_processed_verification_key<ppzksnark_ppT>> vk_precomp;$/;"	m	class:libzcash::JoinSplitCircuit	file:
vk_rC_Z_g2_precomp	libsnark/src/zk_proof_systems/ppzksnark/r1cs_ppzksnark/r1cs_ppzksnark.hpp	/^    G2_precomp<ppT> vk_rC_Z_g2_precomp;$/;"	m	class:libsnark::r1cs_ppzksnark_processed_verification_key
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm0,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm0,128(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm0,144(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm0,448(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm0,64(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm0,752(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm0,768(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm0,96(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,%xmm0$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,0(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,128(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,16(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,32(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,448(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,464(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,48(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,480(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,512(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,528(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm1,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,160(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,176(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,192(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,208(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,224(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,240(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,256(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,272(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,288(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,304(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,320(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,336(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,352(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,368(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,384(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,400(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,416(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,432(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm10,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm11,448(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm13,0(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm13,32(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm13,48(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm13,64(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm14,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm14,16(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm14,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm14,96(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm2,0(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm2,16(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm2,32(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm2,48(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm2,480(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm2,496(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm2,64(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm2,96(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,16(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,32(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,464(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,496(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,528(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,560(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,592(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,608(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,624(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm3,688(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm4,128(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm4,544(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm4,576(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm4,592(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm4,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm5,144(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm5,512(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm5,544(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm5,560(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm5,624(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm5,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm5,96(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm6,48(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm6,608(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm6,64(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm6,640(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm6,656(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm6,96(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm7,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm7,576(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm7,640(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm7,656(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm7,688(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm8,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm8,448(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm8,672(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm8,704(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm8,720(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm9,672(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm9,704(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa %xmm9,736(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 0(%rsp),%xmm11$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 0(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 112(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 112(%rsp),%xmm5$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 112(%rsp),%xmm9$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 128(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 128(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 144(%rsp),%xmm0$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 144(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 16(%rsp),%xmm13$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 16(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 16(%rsp),%xmm9$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 32(%rsp),%xmm13$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 32(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 32(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 448(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 448(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 448(%rsp),%xmm7$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 464(%rsp),%xmm5$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 464(%rsp),%xmm6$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 48(%rsp),%xmm13$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 48(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 48(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 480(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 496(%rsp),%xmm0$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 528(%rsp),%xmm8$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 544(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 544(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 560(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 592(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 608(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 608(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 64(%rsp),%xmm13$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 64(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 64(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 640(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 656(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 672(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 672(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 688(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 80(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 80(%rsp),%xmm12$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 80(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 80(%rsp),%xmm9$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 96(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 96(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 96(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa 96(%rsp),%xmm9$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa v0_0(%rip),%xmm0$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqa v1_0(%rip),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,128(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,144(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,16(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,160(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,208(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,32(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,464(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,48(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,480(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,64(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm0,96(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,%xmm0$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,0(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,128(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,16(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,160(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,176(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,192(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,224(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,240(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,32(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,48(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm1,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm10,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm13,0(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm13,32(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm13,48(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm13,64(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm14,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm14,16(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm14,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm14,96(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm2,0(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm2,16(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm2,192(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm2,32(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm2,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm2,96(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm3,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm3,176(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm3,208(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm3,240(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm3,272(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm3,304(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm3,320(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm3,336(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm3,400(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm4,128(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm4,256(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm4,288(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm4,304(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm5,144(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm5,224(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm5,256(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm5,272(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm5,336(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm5,80(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm5,96(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm6,320(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm6,352(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm6,368(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm6,48(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm6,64(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm7,288(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm7,352(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm7,368(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm7,400(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm8,112(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm8,160(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm8,384(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm8,416(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm8,432(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm9,384(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm9,416(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa %xmm9,448(%rsp)$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 0(%rsp),%xmm11$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 0(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 112(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 112(%rsp),%xmm5$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 112(%rsp),%xmm9$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 128(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 128(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 144(%rsp),%xmm0$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 144(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 16(%rsp),%xmm13$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 16(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 16(%rsp),%xmm9$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 160(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 160(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 160(%rsp),%xmm7$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 176(%rsp),%xmm5$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 176(%rsp),%xmm6$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 192(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 208(%rsp),%xmm0$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 240(%rsp),%xmm8$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 256(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 256(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 272(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 304(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 32(%rsp),%xmm13$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 32(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 32(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 320(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 320(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 352(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 368(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 384(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 384(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 400(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 48(%rsp),%xmm13$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 48(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 48(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 64(%rsp),%xmm13$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 64(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 64(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 80(%rsp),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 80(%rsp),%xmm12$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 80(%rsp),%xmm4$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 80(%rsp),%xmm9$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 96(%rsp),%xmm14$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 96(%rsp),%xmm2$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 96(%rsp),%xmm3$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa 96(%rsp),%xmm9$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa v0_0(%rip),%xmm0$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa v1_0(%rip),%xmm1$/;"	l
vmovdqa	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqa v9_0(%rip),%xmm2$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm0,80(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm1,160(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm2,96(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm3,176(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm4,112(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm5,192(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm6,128(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm7,208(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm8,144(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu %xmm9,224(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 0(%rdi),%xmm10$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 0(%rdi),%xmm2$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 16(%rdi),%xmm10$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 16(%rdi),%xmm2$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 24(%rdi),%xmm10$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 32(%rdi),%xmm10$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 32(%rdi),%xmm2$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 40(%rdi),%xmm10$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 48(%rdi),%xmm10$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 48(%rdi),%xmm2$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 56(%rdi),%xmm10$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 64(%rdi),%xmm10$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 64(%rdi),%xmm11$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 64(%rdi),%xmm2$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vmovdqu 8(%rdi),%xmm10$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm0,0(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm1,80(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm2,16(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm3,96(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm4,32(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm5,112(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm6,48(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm7,128(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm8,64(%rdi)$/;"	l
vmovdqu	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vmovdqu %xmm9,144(%rdi)$/;"	l
void_type	libsnark/src/common/template_utils.hpp	/^struct void_type$/;"	s	namespace:libsnark
vout	zcash/primitives/transaction.h	/^    const std::vector<CTxOut> vout;$/;"	m	class:CTransaction
vout	zcash/primitives/transaction.h	/^    std::vector<CTxOut> vout;$/;"	m	struct:CMutableTransaction
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm0,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm0,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm0,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm1,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm10,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm11,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm11,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm11,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm12,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm12,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm12,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm12,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm13,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm13,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm14,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm14,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm14,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm14,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm14,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm14,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm14,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm15,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm15,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm15,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm15,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm2,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm2,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm2,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm3,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm4,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm4,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm5,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm5,%xmm15,%xmm15$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm5,%xmm4,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm5,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm6,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm6,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm6,%xmm6,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm15,%xmm15$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm6,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm7,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm8,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm8,%xmm8,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm8,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm9,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq %xmm9,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc0(%rip),%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc0(%rip),%xmm11,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc0(%rip),%xmm2,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc0(%rip),%xmm9,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm0,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm1,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm3,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm3,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm5,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm5,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm7,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm7,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpaddq subc2(%rip),%xmm9,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm0,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm0,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm0,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm1,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm10,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm11,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm11,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm12,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm13,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm14,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm14,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm14,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm14,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm14,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm14,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm14,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm15,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm15,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm15,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm15,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm2,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm2,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm2,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm3,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm13,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm14,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm4,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm4,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm5,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm5,%xmm15,%xmm15$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm5,%xmm4,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm5,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm6,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm6,%xmm6,%xmm14$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm10,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm15,%xmm15$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm5,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm6,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm7,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm8,%xmm7,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm8,%xmm8,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm1,%xmm1$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm11,%xmm11$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm12,%xmm12$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm3,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm8,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm9,%xmm13$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq %xmm9,%xmm9,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc0(%rip),%xmm0,%xmm0$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc0(%rip),%xmm11,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc0(%rip),%xmm2,%xmm3$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc0(%rip),%xmm9,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm0,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm1,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm2,%xmm2$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm3,%xmm10$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm3,%xmm5$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm4,%xmm4$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm5,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm5,%xmm7$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm6,%xmm6$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm7,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm7,%xmm9$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm8,%xmm8$/;"	l
vpaddq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpaddq subc2(%rip),%xmm9,%xmm10$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand %xmm10,%xmm13,%xmm13$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand %xmm10,%xmm15,%xmm15$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm0,%xmm0$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm1,%xmm1$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm10,%xmm10$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm11,%xmm11$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm12,%xmm12$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm13,%xmm13$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm14,%xmm14$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm2,%xmm2$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm3,%xmm3$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm4,%xmm4$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm5,%xmm5$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm7,%xmm7$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm8,%xmm8$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m25(%rip),%xmm9,%xmm9$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm0,%xmm0$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm1,%xmm1$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm11,%xmm11$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm12,%xmm12$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm13,%xmm13$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm2,%xmm2$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm3,%xmm3$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm4,%xmm4$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm5,%xmm5$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm6,%xmm6$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm7,%xmm7$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm8,%xmm8$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpand m26(%rip),%xmm9,%xmm9$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand %xmm10,%xmm13,%xmm13$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand %xmm10,%xmm15,%xmm15$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm0,%xmm0$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm1,%xmm1$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm10,%xmm10$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm11,%xmm11$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm12,%xmm12$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm13,%xmm13$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm14,%xmm14$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm2,%xmm2$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm3,%xmm3$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm4,%xmm4$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm5,%xmm5$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm7,%xmm7$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm8,%xmm8$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m25(%rip),%xmm9,%xmm9$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm0,%xmm0$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm1,%xmm1$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm11,%xmm11$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm12,%xmm12$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm13,%xmm13$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm2,%xmm2$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm3,%xmm3$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm4,%xmm4$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm5,%xmm5$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm6,%xmm6$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm7,%xmm7$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm8,%xmm8$/;"	l
vpand	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpand m26(%rip),%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm0,%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm0,%xmm10,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm0,%xmm10,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm0,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm1,%xmm10,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm1,%xmm10,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm1,%xmm12,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm1,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm10,%xmm10,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm13,%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm14,%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm14,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm14,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm14,%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm14,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm14,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm4,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm7,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm15,%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm2,%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm2,%xmm10,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm2,%xmm13,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm2,%xmm2,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm10,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm10,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm10,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm10,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm12,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm12,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm3,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm0,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm10,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm13,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm6,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm4,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm5,%xmm10,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm5,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm0,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm13,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm2,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm6,%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm7,%xmm10,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm7,%xmm10,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm7,%xmm12,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm0,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm14,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm8,%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm9,%xmm10,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm9,%xmm10,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq %xmm9,%xmm12,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 0(%rsp),%xmm10,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 0(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 0(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 112(%rsp),%xmm10,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 112(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 112(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 112(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 128(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 144(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 144(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 16(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 16(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 16(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 160(%rsp),%xmm3,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 176(%rsp),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 176(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 176(%rsp),%xmm2,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 176(%rsp),%xmm3,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 192(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 208(%rsp),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 208(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 208(%rsp),%xmm3,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 224(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 224(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 240(%rsp),%xmm2,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 240(%rsp),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 256(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 256(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 256(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 272(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 288(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 288(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 288(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 288(%rsp),%xmm3,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 304(%rsp),%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 304(%rsp),%xmm3,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 304(%rsp),%xmm3,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 304(%rsp),%xmm9,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 320(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 336(%rsp),%xmm3,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 336(%rsp),%xmm3,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 336(%rsp),%xmm9,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 352(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 352(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 368(%rsp),%xmm3,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 368(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 384(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 384(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 384(%rsp),%xmm3,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 400(%rsp),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 416(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 416(%rsp),%xmm1,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 416(%rsp),%xmm3,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 416(%rsp),%xmm9,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm1,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm3,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm3,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 432(%rsp),%xmm9,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 448(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 448(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 448(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 448(%rsp),%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 448(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 464(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm10,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 48(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm1,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 480(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 496(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm0,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 512(%rsp),%xmm6,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm1,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 528(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 544(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 544(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 544(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 544(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 560(%rsp),%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm0,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 576(%rsp),%xmm6,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm0,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm1,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 592(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 608(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 608(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm0,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm1,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm6,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 624(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 64(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 64(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm6,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 640(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm1,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 656(%rsp),%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 672(%rsp),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm1,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 688(%rsp),%xmm6,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 704(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 704(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 704(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 704(%rsp),%xmm6,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 704(%rsp),%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 720(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 720(%rsp),%xmm1,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 720(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm1,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 736(%rsp),%xmm6,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 752(%rsp),%xmm15,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 752(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 752(%rsp),%xmm6,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 768(%rsp),%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 768(%rsp),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 80(%rsp),%xmm10,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 80(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 80(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 80(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 96(%rsp),%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 96(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq 96(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v121666_121666(%rip),%xmm10,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v121666_121666(%rip),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v121666_121666(%rip),%xmm5,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v121666_121666(%rip),%xmm7,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v121666_121666(%rip),%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm10,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm12,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm15,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm5,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm7,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm8,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v19_19(%rip),%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v2_1(%rip),%xmm10,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v38_1(%rip),%xmm10,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v38_38(%rip),%xmm14,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v38_38(%rip),%xmm5,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpmuludq v38_38(%rip),%xmm7,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm0,%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm0,%xmm10,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm0,%xmm10,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm0,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm1,%xmm10,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm1,%xmm10,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm1,%xmm12,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm1,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm10,%xmm10,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm13,%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm14,%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm14,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm14,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm14,%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm14,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm14,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm4,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm7,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm15,%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm2,%xmm0,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm2,%xmm10,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm2,%xmm13,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm2,%xmm2,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm10,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm10,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm10,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm10,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm12,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm12,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm3,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm0,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm10,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm13,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm6,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm4,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm5,%xmm10,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm5,%xmm12,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm0,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm13,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm2,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm6,%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm7,%xmm10,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm7,%xmm10,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm7,%xmm12,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm0,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm14,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm8,%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm9,%xmm10,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm9,%xmm10,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq %xmm9,%xmm12,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 0(%rsp),%xmm10,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 0(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 0(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 112(%rsp),%xmm10,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 112(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 112(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 112(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 128(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 144(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 144(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 16(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 16(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 16(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 160(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 160(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 160(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 160(%rsp),%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 160(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 176(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm1,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 192(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 208(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm0,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 224(%rsp),%xmm6,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm1,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 240(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 256(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 256(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 256(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 256(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm1,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 272(%rsp),%xmm6,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm0,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 288(%rsp),%xmm6,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm0,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm1,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 304(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 320(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 320(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm0,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm1,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm3,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm6,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 336(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm6,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm6,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 352(%rsp),%xmm9,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm1,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 368(%rsp),%xmm8,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 384(%rsp),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm1,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm14,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 400(%rsp),%xmm6,%xmm11$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 416(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 416(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 416(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 416(%rsp),%xmm6,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 416(%rsp),%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 432(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 432(%rsp),%xmm1,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 432(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm0,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm1,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm1,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm15,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm2,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm2,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 448(%rsp),%xmm6,%xmm13$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 464(%rsp),%xmm15,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 464(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 464(%rsp),%xmm6,%xmm14$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm10,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm2,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 48(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 480(%rsp),%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 480(%rsp),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 64(%rsp),%xmm2,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 64(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 80(%rsp),%xmm10,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 80(%rsp),%xmm13,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 80(%rsp),%xmm15,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 80(%rsp),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 96(%rsp),%xmm4,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 96(%rsp),%xmm4,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq 96(%rsp),%xmm6,%xmm4$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v121666_121666(%rip),%xmm10,%xmm10$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v121666_121666(%rip),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v121666_121666(%rip),%xmm5,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v121666_121666(%rip),%xmm7,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v121666_121666(%rip),%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm12,%xmm12$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm15,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm2,%xmm2$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm3,%xmm3$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm5,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm6,%xmm6$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm7,%xmm7$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm8,%xmm8$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v19_19(%rip),%xmm9,%xmm9$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v38_38(%rip),%xmm14,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v38_38(%rip),%xmm5,%xmm5$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v38_38(%rip),%xmm7,%xmm15$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v9_9(%rip),%xmm0,%xmm0$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v9_9(%rip),%xmm1,%xmm1$/;"	l
vpmuludq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpmuludq v9_9(%rip),%xmm2,%xmm2$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm0,%xmm0$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm1,%xmm1$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm10,%xmm1$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm11,%xmm3$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm12,%xmm3$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm14,%xmm3$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm3,%xmm2$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm5,%xmm1$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm8,%xmm0$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $0,%xmm9,%xmm9$/;"	l
vpshufd	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpshufd $2,%xmm10,%xmm10$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $1,%xmm0,%xmm0$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $1,%xmm1,%xmm1$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $1,%xmm10,%xmm10$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $1,%xmm2,%xmm2$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $1,%xmm3,%xmm3$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $1,%xmm4,%xmm4$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $1,%xmm6,%xmm6$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $1,%xmm8,%xmm8$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $4,%xmm0,%xmm1$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $4,%xmm10,%xmm11$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $4,%xmm2,%xmm4$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsllq $4,%xmm3,%xmm9$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $1,%xmm0,%xmm0$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $1,%xmm1,%xmm1$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $1,%xmm10,%xmm10$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $1,%xmm2,%xmm2$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $1,%xmm3,%xmm3$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $1,%xmm4,%xmm4$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $1,%xmm6,%xmm6$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $1,%xmm8,%xmm8$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $4,%xmm0,%xmm1$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $4,%xmm10,%xmm11$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $4,%xmm2,%xmm4$/;"	l
vpsllq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsllq $4,%xmm3,%xmm9$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm0,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm0,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm1,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm10,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm10,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm11,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm12,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm12,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm13,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm14,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm14,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm2,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm3,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm3,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm4,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm5,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm5,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm5,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm7,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm7,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm7,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm8,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $25,%xmm9,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm0,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm1,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm1,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm11,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm11,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm11,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm12,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm13,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm13,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm2,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm3,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm4,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm5,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm6,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm6,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm6,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm7,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm8,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm8,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm8,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm9,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm9,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsrlq $26,%xmm9,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm0,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm0,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm1,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm10,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm10,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm11,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm12,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm12,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm13,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm14,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm14,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm2,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm3,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm3,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm4,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm5,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm5,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm5,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm7,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm7,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm7,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm8,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $25,%xmm9,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm0,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm1,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm1,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm11,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm11,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm11,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm12,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm13,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm13,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm2,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm3,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm4,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm5,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm6,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm6,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm6,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm7,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm8,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm8,%xmm2$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm8,%xmm3$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm9,%xmm0$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm9,%xmm10$/;"	l
vpsrlq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsrlq $26,%xmm9,%xmm2$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm0,%xmm10,%xmm10$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm1,%xmm0,%xmm0$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm1,%xmm3,%xmm3$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm12,%xmm10,%xmm10$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm12,%xmm2,%xmm2$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm14,%xmm4,%xmm4$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm15,%xmm6,%xmm6$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm15,%xmm8,%xmm8$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm3,%xmm10,%xmm10$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm3,%xmm2,%xmm2$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm4,%xmm5,%xmm5$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm5,%xmm4,%xmm4$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm6,%xmm7,%xmm7$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm7,%xmm6,%xmm6$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm8,%xmm9,%xmm9$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm9,%xmm10,%xmm10$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpsubq %xmm9,%xmm8,%xmm8$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm0,%xmm10,%xmm10$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm1,%xmm0,%xmm0$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm1,%xmm3,%xmm3$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm12,%xmm10,%xmm10$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm12,%xmm2,%xmm2$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm14,%xmm4,%xmm4$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm15,%xmm6,%xmm6$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm15,%xmm8,%xmm8$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm3,%xmm10,%xmm10$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm3,%xmm2,%xmm2$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm4,%xmm5,%xmm5$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm5,%xmm4,%xmm4$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm6,%xmm7,%xmm7$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm7,%xmm6,%xmm6$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm8,%xmm9,%xmm9$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm9,%xmm10,%xmm10$/;"	l
vpsubq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpsubq %xmm9,%xmm8,%xmm8$/;"	l
vpub_new	zcash/primitives/transaction.h	/^    CAmount vpub_new;$/;"	m	class:JSDescription
vpub_old	zcash/primitives/transaction.h	/^    CAmount vpub_old;$/;"	m	class:JSDescription
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm1,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm10,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm13,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm5,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm0,%xmm9,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm1,%xmm2,%xmm10$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm1,%xmm2,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm1,%xmm3,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm1,%xmm5,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm11,%xmm12$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm3,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm8,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm9,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm10,%xmm9,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm11,%xmm0,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm11,%xmm3,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm12,%xmm11,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm12,%xmm2,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm13,%xmm11,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm14,%xmm1,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm14,%xmm13,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm14,%xmm4,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm15,%xmm6,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm15,%xmm8,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm2,%xmm0,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm2,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm1,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm10,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm2,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm4,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm4,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm5,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm6,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm3,%xmm8,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm4,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm3,%xmm4$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm5,%xmm7,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm5,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm5,%xmm6$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm8,%xmm4$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm8,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm7,%xmm9,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm8,%xmm7,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm9,%xmm12,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpckhqdq %xmm9,%xmm7,%xmm8$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm1,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm10,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm13,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm5,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm0,%xmm9,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm1,%xmm2,%xmm10$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm1,%xmm2,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm1,%xmm3,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm1,%xmm5,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm11,%xmm12$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm3,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm8,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm9,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm10,%xmm9,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm11,%xmm0,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm11,%xmm3,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm12,%xmm11,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm12,%xmm2,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm13,%xmm11,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm14,%xmm1,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm14,%xmm13,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm14,%xmm4,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm15,%xmm6,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm15,%xmm8,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm2,%xmm0,%xmm0$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm2,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm1,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm10,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm2,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm4,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm4,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm5,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm6,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm3,%xmm8,%xmm9$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm4,%xmm1,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm3,%xmm4$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm1$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm6,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm5,%xmm7,%xmm5$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm5,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm5,%xmm6$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm8,%xmm4$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm8,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm7,%xmm9,%xmm7$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm8,%xmm7,%xmm3$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm9,%xmm12,%xmm2$/;"	l
vpunpckhqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpckhqdq %xmm9,%xmm7,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm0,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm0,%xmm10,%xmm9$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm0,%xmm13,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm0,%xmm9,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm1,%xmm2,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm1,%xmm3,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm1,%xmm5,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm11,%xmm10$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm3,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm9$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm11,%xmm0,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm12,%xmm11,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm12,%xmm11,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm12,%xmm2,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm13,%xmm11,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm14,%xmm13,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm14,%xmm4,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm15,%xmm6,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm15,%xmm8,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm2,%xmm0,%xmm12$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm2,%xmm1,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm1,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm10,%xmm10$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm2,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm4,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm4,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm5,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm6,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm3,%xmm8,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm4,%xmm1,%xmm14$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm4,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm3,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm5,%xmm7,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm5,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm5,%xmm5$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm8,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm8,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm7,%xmm9,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm8,%xmm7,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpunpcklqdq %xmm9,%xmm7,%xmm7$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm10,%xmm9$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm13,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm5,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm0,%xmm9,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm1,%xmm2,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm1,%xmm3,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm1,%xmm5,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm11,%xmm10$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm3,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm8,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm10,%xmm9,%xmm9$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm11,%xmm0,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm11,%xmm3,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm12,%xmm11,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm12,%xmm11,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm12,%xmm2,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm13,%xmm11,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm14,%xmm1,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm14,%xmm13,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm14,%xmm4,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm15,%xmm6,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm15,%xmm8,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm2,%xmm0,%xmm12$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm2,%xmm1,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm1,%xmm1$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm10,%xmm10$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm2,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm4,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm4,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm5,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm6,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm3,%xmm8,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm4,%xmm1,%xmm14$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm4,%xmm1,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm3,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm0$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm6,%xmm3$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm5,%xmm7,%xmm6$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm5,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm5,%xmm5$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm8,%xmm15$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm8,%xmm4$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm7,%xmm9,%xmm8$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm8,%xmm7,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm9,%xmm12,%xmm2$/;"	l
vpunpcklqdq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpunpcklqdq %xmm9,%xmm7,%xmm7$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm1,%xmm1,%xmm1$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm11,%xmm0,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm12,%xmm1,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm0,%xmm0$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm1,%xmm1$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm11,%xmm11$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm12,%xmm12$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm2,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm4,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm6,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm13,%xmm8,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm14,%xmm3,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm14,%xmm5,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm14,%xmm7,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm14,%xmm9,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm13,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm14,%xmm14$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm2,%xmm2$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm3,%xmm3$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm4,%xmm4$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm5,%xmm5$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm6,%xmm6$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm7,%xmm7$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm8,%xmm8$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm15,%xmm9,%xmm9$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm2,%xmm2,%xmm2$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm3,%xmm3,%xmm3$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm4,%xmm4,%xmm4$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm5,%xmm5,%xmm5$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm6,%xmm6,%xmm6$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm7,%xmm7,%xmm7$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm8,%xmm8,%xmm8$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^vpxor %xmm9,%xmm9,%xmm9$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm1,%xmm1,%xmm1$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm11,%xmm0,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm12,%xmm1,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm0,%xmm0$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm1,%xmm1$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm11,%xmm11$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm12,%xmm12$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm2,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm4,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm6,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm13,%xmm8,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm14,%xmm3,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm14,%xmm5,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm14,%xmm7,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm14,%xmm9,%xmm15$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm13,%xmm13$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm14,%xmm14$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm2,%xmm2$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm3,%xmm3$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm4,%xmm4$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm5,%xmm5$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm6,%xmm6$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm7,%xmm7$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm8,%xmm8$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm15,%xmm9,%xmm9$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm2,%xmm2,%xmm2$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm3,%xmm3,%xmm3$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm4,%xmm4,%xmm4$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm5,%xmm5,%xmm5$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm6,%xmm6,%xmm6$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm7,%xmm7,%xmm7$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm8,%xmm8,%xmm8$/;"	l
vpxor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^vpxor %xmm9,%xmm9,%xmm9$/;"	l
vtx	zcash/primitives/block.h	/^    std::vector<CTransaction> vtx;$/;"	m	class:CBlock
w	libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h	/^    uint32_t w[16];$/;"	m	union:__anon11
w	zcash/secp256k1/src/java/org/bitcoin/NativeSecp256k1.java	/^    private static final Lock w = rwl.writeLock();$/;"	f	class:NativeSecp256k1	file:
wait	zcash/sync.h	/^    void wait()$/;"	f	class:CSemaphore
wfcheck	zcash/IncrementalMerkleTree.cpp	/^void IncrementalMerkleTree<Depth, Hash>::wfcheck() const {$/;"	f	class:libzcash::IncrementalMerkleTree
what	zcash/crypto/equihash.h	/^    virtual const char* what() const throw() {$/;"	f	class:EhSolverCancelledException
windowed_exp	libsnark/src/algebra/scalar_multiplication/multiexp.tcc	/^T windowed_exp(const size_t scalar_size,$/;"	f	namespace:libsnark
witness	zcash/IncrementalMerkleTree.hpp	/^    IncrementalWitness<Depth, Hash> witness() const {$/;"	f	class:libzcash::IncrementalMerkleTree
witness	zcash/JoinSplit.hpp	/^    ZCIncrementalWitness witness;$/;"	m	class:libzcash::JSInput
witness_input	zcash/circuit/note.tcc	/^    std::shared_ptr<merkle_tree_gadget<FieldT>> witness_input;$/;"	m	class:input_note_gadget	file:
witness_map	zcash/circuit/gadget.tcc	/^    static r1cs_primary_input<FieldT> witness_map($/;"	f	class:joinsplit_gadget
wnaf	zcash/secp256k1/src/bench_internal.c	/^    int wnaf[256];$/;"	m	struct:__anon52	file:
wnaf_window_table	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^std::vector<size_t> alt_bn128_G1::wnaf_window_table;$/;"	m	class:libsnark::alt_bn128_G1	file:
wnaf_window_table	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.hpp	/^    static std::vector<size_t> wnaf_window_table;$/;"	m	class:libsnark::alt_bn128_G1
wnaf_window_table	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^std::vector<size_t> alt_bn128_G2::wnaf_window_table;$/;"	m	class:libsnark::alt_bn128_G2	file:
wnaf_window_table	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.hpp	/^    static std::vector<size_t> wnaf_window_table;$/;"	m	class:libsnark::alt_bn128_G2
words_to_bytes	libsnark/src/gadgetlib1/gadgets/hashes/sha256/tests/generate_sha256_gadget_tests.py	/^def words_to_bytes(arr):$/;"	f
write	zcash/hash.h	/^    CHashWriter& write(const char *pch, size_t size) {$/;"	f	class:CHashWriter
write	zcash/serialize.h	/^    CSizeComputer& write(const char *psz, size_t nSize)$/;"	f	class:CSizeComputer
write	zcash/streams.h	/^    CAutoFile& write(const char* pch, size_t nSize)$/;"	f	class:CAutoFile
write	zcash/streams.h	/^    CBaseDataStream& write(const char* pch, size_t nSize)$/;"	f	class:CBaseDataStream
write_bigint	zcash/Proof.cpp	/^void write_bigint(base_blob<8 * LIMBS * sizeof(mp_limb_t)> &blob, const bigint<LIMBS> &val)$/;"	f	namespace:libzcash
x	libsodium/test/default/hash.c	/^static unsigned char x[] = "testing\\n";$/;"	v	file:
x	libsodium/test/default/hash3.c	/^static unsigned char x[] = "testing\\n";$/;"	v	file:
x	libsodium/test/default/randombytes.c	/^static unsigned char      x[65536];$/;"	v	file:
x	zcash/Proof.hpp	/^    Fq x;$/;"	m	class:libzcash::CompressedG1
x	zcash/Proof.hpp	/^    Fq2 x;$/;"	m	class:libzcash::CompressedG2
x	zcash/secp256k1/src/group.h	/^    secp256k1_fe x; \/* actual X: x\/z^2 *\/$/;"	m	struct:__anon55
x	zcash/secp256k1/src/group.h	/^    secp256k1_fe x;$/;"	m	struct:__anon54
x	zcash/secp256k1/src/group.h	/^    secp256k1_fe_storage x;$/;"	m	struct:__anon56
x1	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	20;"	d	file:
x2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	21;"	d	file:
x2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	64;"	d	file:
x2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	67;"	d	file:
x2	libsodium/test/default/hash.c	/^static unsigned char x2[] =$/;"	v	file:
x25519_ref10_H	libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/x25519_ref10.h	2;"	d
xchacha20_DEPENDENCIES	libsodium/test/default/Makefile	/^xchacha20_DEPENDENCIES = $(TESTS_LDADD)$/;"	m
xchacha20_LDADD	libsodium/test/default/Makefile	/^xchacha20_LDADD = $(TESTS_LDADD)$/;"	m
xchacha20_OBJECTS	libsodium/test/default/Makefile	/^xchacha20_OBJECTS = xchacha20.$(OBJEXT)$/;"	m
xchacha20_SOURCE	libsodium/test/default/Makefile	/^xchacha20_SOURCE = cmptest.h xchacha20.c$/;"	m
xchacha20_SOURCES	libsodium/test/default/Makefile	/^xchacha20_SOURCES = xchacha20.c$/;"	m
xmemset	libsodium/test/quirks/quirks.h	/^xmemset(void *dst, int c, size_t n)$/;"	f
xmmi	libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c	/^typedef __m128i xmmi;$/;"	t	file:
xor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^xor  %rdx,%rax$/;"	l
xor	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S	/^xor  %rdx,%rcx$/;"	l
xor	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xor %rax,%rax$/;"	l
xor2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	14;"	d
xor2	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^xor2(aes_uint128_t *r, const aes_uint128_t *x)$/;"	f
xor_block	libsodium/src/libsodium/crypto_pwhash/argon2/argon2-core.c	/^xor_block(block *dst, const block *src)$/;"	f
xor_rcon	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128.h	44;"	d
xor_rcon	libsodium/src/libsodium/crypto_stream/aes128ctr/nacl/int128_aes128ctr.c	/^xor_rcon(aes_uint128_t *r)$/;"	f
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 0(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 0(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 100(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 104(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 108(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 112(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 116(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 12(%rsi),%eax$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 12(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 120(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 124(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 128(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 132(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 136(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 140(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 144(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 148(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 152(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 156(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 16(%rsi),%eax$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 16(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 160(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 164(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 168(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 172(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 176(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 180(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 184(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 188(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 192(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 196(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 20(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 200(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 204(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 208(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 212(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 216(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 220(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 224(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 228(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 232(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 236(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 24(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 240(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 244(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 248(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 252(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 28(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 32(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 32(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 36(%rsi),%eax$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 36(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 4(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 4(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 40(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 40(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 44(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 44(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 48(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 48(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 52(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 52(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 56(%rsi),%eax$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 56(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 60(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 60(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 64(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 68(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 72(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 76(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 8(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 8(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 80(%rsi),%edx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 84(%rsi),%ecx$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 88(%rsi),%r8d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 92(%rsi),%r9d$/;"	l
xorl	libsodium/src/libsodium/crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S	/^xorl 96(%rsi),%edx$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^xorq 0(%rsi),%rdx$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^xorq 16(%rsi),%r8$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^xorq 24(%rsi),%r9$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S	/^xorq 8(%rsi),%rcx$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^xorq 0(%rsi),%rdx$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^xorq 16(%rsi),%r8$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^xorq 24(%rsi),%r9$/;"	l
xorq	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S	/^xorq 8(%rsi),%rcx$/;"	l
xy2d	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe xy2d;$/;"	m	struct:__anon8
y	zcash/secp256k1/src/group.h	/^    secp256k1_fe y; \/* actual Y: y\/z^3 *\/$/;"	m	struct:__anon55
y	zcash/secp256k1/src/group.h	/^    secp256k1_fe y;$/;"	m	struct:__anon54
y	zcash/secp256k1/src/group.h	/^    secp256k1_fe_storage y;$/;"	m	struct:__anon56
y_gt	zcash/Proof.hpp	/^    bool y_gt;$/;"	m	class:libzcash::CompressedG2
y_lsb	zcash/Proof.hpp	/^    bool y_lsb;$/;"	m	class:libzcash::CompressedG1
yminusx	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe yminusx;$/;"	m	struct:__anon8
yplusx	libsodium/src/libsodium/include/sodium/private/curve25519_ref10.h	/^    fe yplusx;$/;"	m	struct:__anon8
z	zcash/secp256k1/src/group.h	/^    secp256k1_fe z;$/;"	m	struct:__anon55
z2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	22;"	d	file:
z2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	65;"	d	file:
z2	libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c	68;"	d	file:
zc_paramsPathCached	zcash/zcashutil.cpp	/^static boost::filesystem::path zc_paramsPathCached;$/;"	v	file:
zcashconsensus_ERR_OK	zcash/script/zcashconsensus.h	/^    zcashconsensus_ERR_OK = 0,$/;"	e	enum:zcashconsensus_error_t
zcashconsensus_ERR_TX_DESERIALIZE	zcash/script/zcashconsensus.h	/^    zcashconsensus_ERR_TX_DESERIALIZE,$/;"	e	enum:zcashconsensus_error_t
zcashconsensus_ERR_TX_INDEX	zcash/script/zcashconsensus.h	/^    zcashconsensus_ERR_TX_INDEX,$/;"	e	enum:zcashconsensus_error_t
zcashconsensus_ERR_TX_SIZE_MISMATCH	zcash/script/zcashconsensus.h	/^    zcashconsensus_ERR_TX_SIZE_MISMATCH,$/;"	e	enum:zcashconsensus_error_t
zcashconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY	zcash/script/zcashconsensus.h	/^    zcashconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9), \/\/ enable CHECKLOCKTIMEVERIFY (BIP65)$/;"	e	enum:__anon23
zcashconsensus_SCRIPT_FLAGS_VERIFY_NONE	zcash/script/zcashconsensus.h	/^    zcashconsensus_SCRIPT_FLAGS_VERIFY_NONE                = 0,$/;"	e	enum:__anon23
zcashconsensus_SCRIPT_FLAGS_VERIFY_P2SH	zcash/script/zcashconsensus.h	/^    zcashconsensus_SCRIPT_FLAGS_VERIFY_P2SH                = (1U << 0), \/\/ evaluate P2SH (BIP16) subscripts$/;"	e	enum:__anon23
zcashconsensus_error	zcash/script/zcashconsensus.h	/^} zcashconsensus_error;$/;"	t	typeref:enum:zcashconsensus_error_t
zcashconsensus_error_t	zcash/script/zcashconsensus.h	/^typedef enum zcashconsensus_error_t$/;"	g
zcashconsensus_verify_script	zcash/script/zcashconsensus.cpp	/^int zcashconsensus_verify_script(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen,$/;"	f
zcashconsensus_version	zcash/script/zcashconsensus.cpp	/^unsigned int zcashconsensus_version()$/;"	f
zero	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g1.cpp	/^alt_bn128_G1 alt_bn128_G1::zero()$/;"	f	class:libsnark::alt_bn128_G1
zero	libsnark/src/algebra/curves/alt_bn128/alt_bn128_g2.cpp	/^alt_bn128_G2 alt_bn128_G2::zero()$/;"	f	class:libsnark::alt_bn128_G2
zero	libsnark/src/algebra/fields/fp.tcc	/^Fp_model<n,modulus> Fp_model<n,modulus>::zero()$/;"	f	class:libsnark::Fp_model
zero	libsnark/src/algebra/fields/fp12_2over3over2.tcc	/^Fp12_2over3over2_model<n,modulus> Fp12_2over3over2_model<n,modulus>::zero()$/;"	f	class:libsnark::Fp12_2over3over2_model
zero	libsnark/src/algebra/fields/fp2.tcc	/^Fp2_model<n,modulus> Fp2_model<n,modulus>::zero()$/;"	f	class:libsnark::Fp2_model
zero	libsnark/src/algebra/fields/fp3.tcc	/^Fp3_model<n,modulus> Fp3_model<n,modulus>::zero()$/;"	f	class:libsnark::Fp3_model
zero	libsnark/src/algebra/fields/fp6_3over2.tcc	/^Fp6_3over2_model<n,modulus> Fp6_3over2_model<n,modulus>::zero()$/;"	f	class:libsnark::Fp6_3over2_model
zero	libsnark/src/algebra/knowledge_commitment/knowledge_commitment.tcc	/^knowledge_commitment<T1,T2> knowledge_commitment<T1,T2>::zero()$/;"	f	class:libsnark::knowledge_commitment
zero	libsodium/src/libsodium/crypto_core/curve25519/ref10/curve25519_ref10.c	/^static unsigned char zero[32];$/;"	v	file:
zero	libsodium/test/default/core1.c	/^static unsigned char zero[32];$/;"	v	file:
zero_after_free_allocator	zcash/support/allocators/zeroafterfree.h	/^    zero_after_free_allocator() throw() {}$/;"	f	struct:zero_after_free_allocator
zero_after_free_allocator	zcash/support/allocators/zeroafterfree.h	/^    zero_after_free_allocator(const zero_after_free_allocator& a) throw() : base(a) {}$/;"	f	struct:zero_after_free_allocator
zero_after_free_allocator	zcash/support/allocators/zeroafterfree.h	/^    zero_after_free_allocator(const zero_after_free_allocator<U>& a) throw() : base(a)$/;"	f	struct:zero_after_free_allocator
zero_after_free_allocator	zcash/support/allocators/zeroafterfree.h	/^struct zero_after_free_allocator : public std::allocator<T> {$/;"	s
zk_h_sig	zcash/circuit/gadget.tcc	/^    std::shared_ptr<digest_variable<FieldT>> zk_h_sig;$/;"	m	class:joinsplit_gadget	file:
zk_input_macs	zcash/circuit/gadget.tcc	/^    boost::array<std::shared_ptr<digest_variable<FieldT>>, NumInputs> zk_input_macs;$/;"	m	class:joinsplit_gadget	file:
zk_input_notes	zcash/circuit/gadget.tcc	/^    boost::array<std::shared_ptr<input_note_gadget<FieldT>>, NumInputs> zk_input_notes;$/;"	m	class:joinsplit_gadget	file:
zk_input_nullifiers	zcash/circuit/gadget.tcc	/^    boost::array<std::shared_ptr<digest_variable<FieldT>>, NumInputs> zk_input_nullifiers;$/;"	m	class:joinsplit_gadget	file:
zk_mac_authentication	zcash/circuit/gadget.tcc	/^    boost::array<std::shared_ptr<PRF_pk_gadget<FieldT>>, NumInputs> zk_mac_authentication;$/;"	m	class:joinsplit_gadget	file:
zk_merkle_root	zcash/circuit/gadget.tcc	/^		boost::array<std::shared_ptr<digest_variable<FieldT>>, NumInputs> zk_merkle_root;$/;"	m	class:joinsplit_gadget	file:
zk_output_commitments	zcash/circuit/gadget.tcc	/^    boost::array<std::shared_ptr<digest_variable<FieldT>>, NumOutputs> zk_output_commitments;$/;"	m	class:joinsplit_gadget	file:
zk_output_notes	zcash/circuit/gadget.tcc	/^    boost::array<std::shared_ptr<output_note_gadget<FieldT>>, NumOutputs> zk_output_notes;$/;"	m	class:joinsplit_gadget	file:
zk_packed_inputs	zcash/circuit/gadget.tcc	/^    pb_variable_array<FieldT> zk_packed_inputs;$/;"	m	class:joinsplit_gadget	file:
zk_phi	zcash/circuit/gadget.tcc	/^    std::shared_ptr<digest_variable<FieldT>> zk_phi;$/;"	m	class:joinsplit_gadget	file:
zk_total_uint64	zcash/circuit/gadget.tcc	/^    pb_variable_array<FieldT> zk_total_uint64;$/;"	m	class:joinsplit_gadget	file:
zk_unpacked_inputs	zcash/circuit/gadget.tcc	/^    pb_variable_array<FieldT> zk_unpacked_inputs;$/;"	m	class:joinsplit_gadget	file:
zk_vpub_new	zcash/circuit/gadget.tcc	/^    pb_variable_array<FieldT> zk_vpub_new;$/;"	m	class:joinsplit_gadget	file:
zk_vpub_old	zcash/circuit/gadget.tcc	/^    pb_variable_array<FieldT> zk_vpub_old;$/;"	m	class:joinsplit_gadget	file:
~BaseSignatureChecker	zcash/script/interpreter.h	/^    virtual ~BaseSignatureChecker() {}$/;"	f	class:BaseSignatureChecker
~BaseSignatureCreator	zcash/script/sign.h	/^    virtual ~BaseSignatureCreator() {}$/;"	f	class:BaseSignatureCreator
~CAutoFile	zcash/streams.h	/^    ~CAutoFile()$/;"	f	class:CAutoFile
~CBufferedFile	zcash/streams.h	/^    ~CBufferedFile()$/;"	f	class:CBufferedFile
~CInit	zcash/zcashutil.cpp	/^    ~CInit()$/;"	f	class:CInit
~CKey	zcash/key.h	/^    ~CKey()$/;"	f	class:CKey
~CKeyStore	zcash/keystore.h	/^    virtual ~CKeyStore() {}$/;"	f	class:CKeyStore
~CSemaphoreGrant	zcash/sync.h	/^    ~CSemaphoreGrant()$/;"	f	class:CSemaphoreGrant
~ECCVerifyHandle	zcash/pubkey.cpp	/^ECCVerifyHandle::~ECCVerifyHandle()$/;"	f	class:ECCVerifyHandle
~FullStepRow	zcash/crypto/equihash.h	/^    ~FullStepRow() { }$/;"	f	class:FullStepRow
~JoinSplit	zcash/JoinSplit.hpp	/^    virtual ~JoinSplit() {}$/;"	f	class:libzcash::JoinSplit
~JoinSplitCircuit	zcash/JoinSplit.cpp	/^    ~JoinSplitCircuit() {}$/;"	f	class:libzcash::JoinSplitCircuit
~LockedPageManagerBase	zcash/support/pagelocker.h	/^    ~LockedPageManagerBase()$/;"	f	class:LockedPageManagerBase
~StepRow	zcash/crypto/equihash.h	/^    ~StepRow() { }$/;"	f	class:StepRow
~TruncatedStepRow	zcash/crypto/equihash.h	/^    ~TruncatedStepRow() { }$/;"	f	class:TruncatedStepRow
~secure_allocator	zcash/support/allocators/secure.h	/^    ~secure_allocator() throw() {}$/;"	f	struct:secure_allocator
~zero_after_free_allocator	zcash/support/allocators/zeroafterfree.h	/^    ~zero_after_free_allocator() throw() {}$/;"	f	struct:zero_after_free_allocator
